syntax = 'proto3';
package schedulerobjects;

import "google/protobuf/timestamp.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/api/resource/generated.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Node represents a node in a worker cluster.
message Node {
	// Unique name associated with the node.
	// Only used internally by the scheduler.
	string Id = 1;
	// Time at which this node was last updated.
	// Used to garbage collect nodes that have been removed.
    google.protobuf.Timestamp LastSeen = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
	// The node type captures scheduling requirements of the node;
	// it's computed from the taints and labels associated with the node.
    // This field is set automatically by the NodeDb on inserting the node.
	NodeType nodeType = 3;
	// We store the NodeType.id here to simplify indexing.
    // This field is set automatically by the NodeDb on inserting the node.
	string NodeTypeId = 4;
    // Kubernetes taints.
    repeated k8s.io.api.core.v1.Taint taints = 5 [(gogoproto.nullable) = false];
    // Kubernetes labels.
    map<string, string> labels = 6;
    // Total resources on this node.
    ResourceList TotalResources = 7 [(gogoproto.nullable) = false];
	// Resources available for jobs of a given priority.
	// E.g., AvailableResources[5]["cpu"] is the amount of CPU available to jobs with priority 5,
	// where available resources = unused resources + resources assigned to lower-priority jobs.
    map<int32, ResourceList> AllocatableByPriorityAndResource = 8 [(gogoproto.nullable) = false];
}

// NodeType represents a particular combination of taints and labels.
// The scheduler groups nodes by node type. When assigning pods to nodes,
// the scheduler only considers nodes with a NodeType for which the taints and labels match.
message NodeType {
    // Unique identifier. Used for map lookup.
    string Id = 1;
    // Kubernetes taints.
    // To reduce the number of distinct node types, 
    // may contain only a subset of the taints of the node the node type is created from.
    repeated k8s.io.api.core.v1.Taint taints = 2 [(gogoproto.nullable) = false];
    // Kubernetes labels.
    // To reduce the number of distinct node types, 
    // may contain only a subset of the labels of the node the node type is created from.
    map<string, string> labels = 3;
    // Well-known labels not set by this node type.
    // Used to filter out nodes when looking for nodes for a pod
    // that requires at least one well-known label to be set.
    map<string, string> unsetIndexedLabels = 4;
}

// Captures the resource usage of a particular queue
// in a given cluster.
message QueueClusterResourceUsage {
    google.protobuf.Timestamp created = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    string queue = 2;
    string executorId = 3;
    map<int32, ResourceList> resourcesByPriority = 4 [(gogoproto.nullable) = false];
}

// A collection of QueueClusterResourceUsage
// This is only needed to brige the gap between the redis based scheduler and the new scheduler.
message ClusterResourceUsageReport {
    string pool = 1;
    google.protobuf.Timestamp created = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    map<string, QueueClusterResourceUsage> resourcesByQueue = 3;
}

message ResourceList {
    map<string, k8s.io.apimachinery.pkg.api.resource.Quantity> resources = 1 [(gogoproto.nullable) = false];
}

// Minimal job representation used by the scheduler.
message JobSchedulingInfo {
    uint32 lifetime = 1;
    bool atMostOnce = 2;
    bool preemptible = 3;
    bool concurrencySafe = 4;
    // Kubernetes objects that make up this job and their respective scheduling requirements.
    repeated ObjectRequirements objectRequirements = 5;
}

// Message capturing the scheduling requirements of a particular Kubernetes object.
message ObjectRequirements {
    oneof requirements {
        PodRequirements podRequirements = 1;
    }
}

// Captures the scheduling requirements of a pod.
message PodRequirements {
    // Kubernetes node selector.
    map<string, string> nodeSelector = 1;
    // Kubernetes scheduling requirements.
    k8s.io.api.core.v1.Affinity affinity = 2;
    // Kubernetes tolerations.
    repeated k8s.io.api.core.v1.Toleration tolerations = 3 [(gogoproto.nullable) = false];
    // Kubernetes annotations. Included here since we use annotations with special meaning.
    map<string, string> annotations = 7;
    // Pod priority. Should be mapped from the priority class name of the submitted pod.
    int32 priority = 4;
    // One of Never, PreemptLowerPriority.
    // Defaults to PreemptLowerPriority if unset.
    string preemptionPolicy = 5;
    // Sum of the resource requirements for all containers that make up this pod.
    k8s.io.api.core.v1.ResourceRequirements resourceRequirements = 6 [(gogoproto.nullable) = false];
}