// Code generated by statik. DO NOT EDIT.

package statik

import (
	"github.com/rakyll/statik/fs"
)

const LookoutSql = "lookout/sql" // static asset namespace

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16\x00	\x00001_initial_schema.sqlUT\x05\x00\x01\x80Cm8CREATE TABLE job\x0d\n(\x0d\n    job_id    varchar(32)  NOT NULL PRIMARY KEY,\x0d\n    queue     varchar(512) NOT NULL,\x0d\n    owner     varchar(512) NULL,\x0d\n    jobset    varchar(512) NOT NULL,\x0d\n\x0d\n    priority  float        NULL,\x0d\n    submitted timestamp    NULL,\x0d\n    cancelled timestamp    NULL,\x0d\n\x0d\n    job       jsonb        NULL\x0d\n);\x0d\n\x0d\nCREATE TABLE job_run\x0d\n(\x0d\n    run_id    varchar(36)  NOT NULL PRIMARY KEY,\x0d\n    job_id    varchar(32)  NOT NULL,\x0d\n\x0d\n    cluster   varchar(512) NULL,\x0d\n    node      varchar(512) NULL,\x0d\n\x0d\n    created   timestamp    NULL,\x0d\n    started   timestamp    NULL,\x0d\n    finished  timestamp    NULL,\x0d\n\x0d\n    succeeded bool         NULL,\x0d\n    error     varchar(512) NULL\x0d\n);\x0d\n\x0d\nCREATE TABLE job_run_container\x0d\n(\x0d\n    run_id         varchar(32) NOT NULL,\x0d\n    container_name varchar(512) NOT NULL,\x0d\n    exit_code      int         NOT NULL,\x0d\n    PRIMARY KEY (run_id, container_name)\x0d\n)\x0d\n\x0d\n\x0d\nPK\x07\x08\xfa\xb6\x00P\x83\x03\x00\x00\x83\x03\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1b\x00	\x00002_increase_error_size.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job_run ALTER COLUMN error TYPE varchar(2048);\x0d\nPK\x07\x08\xf9\xe8\xa3?<\x00\x00\x00<\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00	\x00003_fix_run_id_size.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job_run_container ALTER COLUMN run_id TYPE varchar(36);\x0d\nPK\x07\x08;\xf8\xcatE\x00\x00\x00E\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00	\x00004_indexes.sqlUT\x05\x00\x01\x80Cm8-- jobs are looked up by queue, jobset\x0d\nCREATE INDEX idx_job_queue_jobset ON job(queue, jobset);\x0d\n\x0d\n-- ordering of jobs\x0d\nCREATE INDEX idx_job_submitted ON job(submitted);\x0d\n\x0d\n-- filtering of running jobs\x0d\nCREATE INDEX idx_jub_run_finished_null ON job_run(finished) WHERE finished IS NULL;\x0d\nPK\x07\x08H\xf9\x907!\x01\x00\x00!\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16\x00	\x00005_multi_node_job.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE Job_run ADD COLUMN pod_number int DEFAULT 0;\x0d\nPK\x07\x08V$\x0bn:\x00\x00\x00:\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x00006_unable_to_schedule.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job_run ADD COLUMN unable_to_schedule bool NULL;\x0d\n\x0d\nCREATE INDEX idx_job_run_unable_to_schedule_null ON job_run(unable_to_schedule) WHERE unable_to_schedule IS NULL;\x0d\nPK\x07\x08\xf9\xe1\xac8\xb3\x00\x00\x00\xb3\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00	\x00007_job_states.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job ADD COLUMN state smallint NULL;\x0d\n\x0d\nCREATE INDEX idx_job_run_job_id ON job_run (job_id);\x0d\n\x0d\nCREATE INDEX idx_job_queue_state ON job (queue, state);\x0d\n\x0d\nCREATE INDEX idx_job_queue_jobset_state ON job (queue, jobset, state);\x0d\n\x0d\nCREATE OR REPLACE TEMP VIEW run_state_counts AS\x0d\nSELECT\x0d\n    run_states.job_id,\x0d\n    COUNT(*) AS total,\x0d\n    COUNT(*) FILTER (WHERE run_state = 1) AS queued,\x0d\n    COUNT(*) FILTER (WHERE run_state = 2) AS pending,\x0d\n    COUNT(*) FILTER (WHERE run_state = 3) AS running,\x0d\n    COUNT(*) FILTER (WHERE run_state = 4) AS succeeded,\x0d\n    COUNT(*) FILTER (WHERE run_state = 5) AS failed\x0d\nFROM (\x0d\n    -- Collect run states for each pod in each job (i.e. the state of each pod)\x0d\n    SELECT DISTINCT ON (joined_runs.job_id, joined_runs.pod_number)\x0d\n        joined_runs.job_id,\x0d\n        joined_runs.pod_number,\x0d\n        CASE\x0d\n            WHEN joined_runs.finished IS NOT NULL AND joined_runs.succeeded IS TRUE THEN 4 -- succeeded\x0d\n            WHEN joined_runs.finished IS NOT NULL AND (joined_runs.succeeded IS FALSE OR joined_runs.succeeded IS NULL) THEN 5 -- failed\x0d\n            WHEN joined_runs.started IS NOT NULL THEN 3 -- running\x0d\n            WHEN joined_runs.created IS NOT NULL THEN 2 -- pending\x0d\n            ELSE 1 -- queued\x0d\n        END AS run_state\x0d\n    FROM (\x0d\n        -- Assume job table is populated\x0d\n        SELECT\x0d\n            job.job_id,\x0d\n            job.submitted,\x0d\n            job_run.pod_number,\x0d\n            job_run.created,\x0d\n            job_run.started,\x0d\n            job_run.finished,\x0d\n            job_run.succeeded\x0d\n        FROM job LEFT JOIN job_run ON job.job_id = job_run.job_id\x0d\n        WHERE job.cancelled IS NULL AND job.state IS NULL\x0d\n    ) AS joined_runs\x0d\n    ORDER BY\x0d\n        joined_runs.job_id,\x0d\n        joined_runs.pod_number,\x0d\n        GREATEST(joined_runs.submitted, joined_runs.created, joined_runs.started, joined_runs.finished) DESC\x0d\n) AS run_states\x0d\nGROUP BY run_states.job_id;\x0d\n\x0d\n-- Queued\x0d\nUPDATE job\x0d\nSET state = 1\x0d\nWHERE job.job_id IN (\x0d\n    SELECT run_state_counts.job_id\x0d\n    FROM run_state_counts\x0d\n    WHERE\x0d\n        run_state_counts.queued > 0 AND\x0d\n        run_state_counts.pending = 0 AND\x0d\n        run_state_counts.running = 0 AND\x0d\n        run_state_counts.failed = 0\x0d\n);\x0d\n\x0d\n-- Pending\x0d\nUPDATE job\x0d\nSET state = 2\x0d\nWHERE job.job_id IN (\x0d\n    SELECT run_state_counts.job_id\x0d\n    FROM run_state_counts\x0d\n    WHERE\x0d\n        run_state_counts.queued = 0 AND\x0d\n        run_state_counts.pending > 0 AND\x0d\n        run_state_counts.failed = 0\x0d\n);\x0d\n\x0d\n-- Running\x0d\nUPDATE job\x0d\nSET state = 3\x0d\nWHERE job.job_id IN (\x0d\n    SELECT run_state_counts.job_id\x0d\n    FROM run_state_counts\x0d\n    WHERE\x0d\n        run_state_counts.queued = 0 AND\x0d\n        run_state_counts.pending = 0 AND\x0d\n        run_state_counts.running > 0 AND\x0d\n        run_state_counts.failed = 0\x0d\n);\x0d\n\x0d\n-- Succeeded\x0d\nUPDATE job\x0d\nSET state = 4\x0d\nWHERE job.job_id IN (\x0d\n    SELECT run_state_counts.job_id\x0d\n    FROM run_state_counts\x0d\n    WHERE\x0d\n        run_state_counts.queued = 0 AND\x0d\n        run_state_counts.pending = 0 AND\x0d\n        run_state_counts.running = 0 AND\x0d\n        run_state_counts.succeeded = run_state_counts.total AND\x0d\n        run_state_counts.failed = 0\x0d\n);\x0d\n\x0d\n-- Failed\x0d\nUPDATE job\x0d\nSET state = 5\x0d\nWHERE job.job_id IN (\x0d\n    SELECT run_state_counts.job_id\x0d\n    FROM run_state_counts\x0d\n    WHERE run_state_counts.failed > 0\x0d\n);\x0d\n\x0d\n-- Cancelled\x0d\nUPDATE job\x0d\nSET state = 6\x0d\nWHERE job.job_id IN (\x0d\n    SELECT job_id\x0d\n    FROM job\x0d\n    WHERE cancelled IS NOT NULL\x0d\n);\x0d\nPK\x07\x08J\xef\xe1\x18\xa3\x0d\x00\x00\xa3\x0d\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00	\x00008_increase_jobset_size.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job ALTER COLUMN jobset TYPE varchar(1024);\x0d\nPK\x07\x08\xafGr\x849\x00\x00\x009\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00(\x00	\x00009_individual_column_search_indexes.sqlUT\x05\x00\x01\x80Cm8CREATE INDEX idx_job_queue ON job (queue);\x0d\n\x0d\nCREATE INDEX idx_job_job_id ON job (job_id);\x0d\n\x0d\nCREATE INDEX idx_job_owner ON job (owner);\x0d\n\x0d\nCREATE INDEX idx_job_jobset ON job (jobset);\x0d\n\x0d\nCREATE INDEX idx_job_state ON job (state);\x0d\nPK\x07\x08\x81\xac9J\xe8\x00\x00\x00\xe8\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x00010_add_duplicate_flag.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job ADD COLUMN duplicate bool default false;\x0d\nPK\x07\x08\x1a\xfac\xc4:\x00\x00\x00:\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x00	\x00011_annotations_table.sqlUT\x05\x00\x01\x80Cm8CREATE TABLE user_annotation_lookup (\x0d\n    job_id varchar(32)   NOT NULL,\x0d\n    key    varchar(1024) NOT NULL,\x0d\n    value  varchar(1024) NOT NULL,\x0d\n    PRIMARY KEY (job_id, key)\x0d\n);\x0d\n\x0d\nCREATE INDEX idx_user_annotation_lookup_key_value ON user_annotation_lookup (key, value);\x0d\nPK\x07\x08\x85\xe2\xcfg\x13\x01\x00\x00\x13\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00	\x00012_add_updated.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job ADD COLUMN job_updated timestamp null;\x0d\nPK\x07\x08\xf5\x8eb\xcf8\x00\x00\x008\x00\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\x00\x00!(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00	\x00013_add_compressed_jobspec.sqlUT\x05\x00\x01\x80Cm8ALTER TABLE job ADD COLUMN orig_job_spec bytea NULL;\x0d\nPK\x07\x08rc\x0f$6\x00\x00\x006\x00\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xfa\xb6\x00P\x83\x03\x00\x00\x83\x03\x00\x00\x16\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\x00\x00\x00\x00001_initial_schema.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xf9\xe8\xa3?<\x00\x00\x00<\x00\x00\x00\x1b\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xd0\x03\x00\x00002_increase_error_size.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(;\xf8\xcatE\x00\x00\x00E\x00\x00\x00\x17\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81^\x04\x00\x00003_fix_run_id_size.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(H\xf9\x907!\x01\x00\x00!\x01\x00\x00\x0f\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xf1\x04\x00\x00004_indexes.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(V$\x0bn:\x00\x00\x00:\x00\x00\x00\x16\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81X\x06\x00\x00005_multi_node_job.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xf9\xe1\xac8\xb3\x00\x00\x00\xb3\x00\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xdf\x06\x00\x00006_unable_to_schedule.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(J\xef\xe1\x18\xa3\x0d\x00\x00\xa3\x0d\x00\x00\x12\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xe3\x07\x00\x00007_job_states.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xafGr\x849\x00\x00\x009\x00\x00\x00\x1c\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xcf\x15\x00\x00008_increase_jobset_size.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x81\xac9J\xe8\x00\x00\x00\xe8\x00\x00\x00(\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81[\x16\x00\x00009_individual_column_search_indexes.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x1a\xfac\xc4:\x00\x00\x00:\x00\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\xa2\x17\x00\x00010_add_duplicate_flag.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\x85\xe2\xcfg\x13\x01\x00\x00\x13\x01\x00\x00\x19\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81-\x18\x00\x00011_annotations_table.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(\xf5\x8eb\xcf8\x00\x00\x008\x00\x00\x00\x13\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\x90\x19\x00\x00012_add_updated.sqlUT\x05\x00\x01\x80Cm8PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\x00\x00!(rc\x0f$6\x00\x00\x006\x00\x00\x00\x1e\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb6\x81\x12\x1a\x00\x00013_add_compressed_jobspec.sqlUT\x05\x00\x01\x80Cm8PK\x05\x06\x00\x00\x00\x00\x0d\x00\x0d\x00\x0c\x04\x00\x00\x9d\x1a\x00\x00\x00\x00"
	fs.RegisterWithNamespace("lookout/sql", data)
}
