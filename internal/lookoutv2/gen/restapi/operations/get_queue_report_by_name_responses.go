// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetQueueReportByNameOKCode is the HTTP code returned for type GetQueueReportByNameOK
const GetQueueReportByNameOKCode int = 200

/*
GetQueueReportByNameOK Success

swagger:response getQueueReportByNameOK
*/
type GetQueueReportByNameOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetQueueReportByNameOK creates GetQueueReportByNameOK with default headers values
func NewGetQueueReportByNameOK() *GetQueueReportByNameOK {

	return &GetQueueReportByNameOK{}
}

// WithPayload adds the payload to the get queue report by name o k response
func (o *GetQueueReportByNameOK) WithPayload(payload string) *GetQueueReportByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get queue report by name o k response
func (o *GetQueueReportByNameOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueueReportByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetQueueReportByNameDefault Error response

swagger:response getQueueReportByNameDefault
*/
type GetQueueReportByNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetQueueReportByNameDefault creates GetQueueReportByNameDefault with default headers values
func NewGetQueueReportByNameDefault(code int) *GetQueueReportByNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetQueueReportByNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get queue report by name default response
func (o *GetQueueReportByNameDefault) WithStatusCode(code int) *GetQueueReportByNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get queue report by name default response
func (o *GetQueueReportByNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get queue report by name default response
func (o *GetQueueReportByNameDefault) WithPayload(payload string) *GetQueueReportByNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get queue report by name default response
func (o *GetQueueReportByNameDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueueReportByNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
