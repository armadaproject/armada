// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetJobReportByIDOKCode is the HTTP code returned for type GetJobReportByIDOK
const GetJobReportByIDOKCode int = 200

/*
GetJobReportByIDOK Success

swagger:response getJobReportByIdOK
*/
type GetJobReportByIDOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetJobReportByIDOK creates GetJobReportByIDOK with default headers values
func NewGetJobReportByIDOK() *GetJobReportByIDOK {

	return &GetJobReportByIDOK{}
}

// WithPayload adds the payload to the get job report by Id o k response
func (o *GetJobReportByIDOK) WithPayload(payload string) *GetJobReportByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job report by Id o k response
func (o *GetJobReportByIDOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobReportByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetJobReportByIDDefault Error response

swagger:response getJobReportByIdDefault
*/
type GetJobReportByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetJobReportByIDDefault creates GetJobReportByIDDefault with default headers values
func NewGetJobReportByIDDefault(code int) *GetJobReportByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetJobReportByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get job report by Id default response
func (o *GetJobReportByIDDefault) WithStatusCode(code int) *GetJobReportByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get job report by Id default response
func (o *GetJobReportByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get job report by Id default response
func (o *GetJobReportByIDDefault) WithPayload(payload string) *GetJobReportByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get job report by Id default response
func (o *GetJobReportByIDDefault) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetJobReportByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
