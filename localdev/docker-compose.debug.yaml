version: "3.8"

networks:
  kind:
    external: true

volumes:
  # shared gopath volume for armada services
  # with this, modules do not need to be redundantly downloaded
  # and persist through restarts
  gopath:
  # shared gocache volume for armada services
  # with this, build artifacts do not need to be redundantly downloaded
  # and persist through restarts
  go-cache:

services:
  #
  # Armada services with debugging
  #
  server:
    container_name: server
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 50051:50051
      - 9080:8080
      - 4000:4000
    volumes:
      - ../developer/config/insecure-armada.yaml:/config/insecure-armada.yaml
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    working_dir: /app
    entrypoint: dlv
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_server cmd/armada/main.go -- --config /config/insecure-armada.yaml

  lookout:
    container_name: lookout
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - "9009:9009"
      - "8089:8089"
      - 4001:4000
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    depends_on:
      - server
      - lookout-ingester
    working_dir: "/app"
    env_file:
      - ../developer/env/lookout.env
    entrypoint: sh -c "localdev/scripts/lookout-debug-start.sh"


  lookoutv2:
    container_name: lookoutv2
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - "10000:10000"
      - 4008:4000
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    depends_on:
      - server
      - lookout-ingesterv2
    env_file:
      - ../developer/env/lookoutv2.env
    working_dir: "/app"
    entrypoint: sh -c "localdev/scripts/lookoutv2-debug-start.sh"

  executor:
    container_name: executor
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 9001:9001
      - 4002:4000
    depends_on:
      - server
    volumes:
      - ../.kube/internal:/.kube
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    environment:
      - KUBECONFIG=/.kube/config
    working_dir: /app
    entrypoint: dlv
    env_file:
      - ../developer/env/executor.env
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_executor cmd/executor/main.go --

  binoculars:
    container_name: binoculars
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 8082:8082
      - 4003:4000
    depends_on:
      - server
    volumes:
      - ../.kube/internal:/.kube
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    environment:
      - KUBECONFIG=/.kube/config
    working_dir: /app
    entrypoint: dlv
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_binoc cmd/binoculars/main.go --

  jobservice:
    container_name: jobservice
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 60003:60003
      - 4004:4000
    depends_on:
      - server
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    working_dir: "/app"
    entrypoint: dlv
    env_file:
      - ../developer/env/jobservice.env
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_jobservice cmd/jobservice/main.go --

  lookout-ingester:
    container_name: lookout-ingester
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 4005:4000
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    working_dir: /app
    entrypoint: dlv
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_lookout_ingester cmd/lookoutingester/main.go --

  lookout-ingesterv2:
    container_name: lookout-ingesterv2
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 4006:4000
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    working_dir: /app
    entrypoint: dlv
    env_file:
      - ../developer/env/lookoutv2.env
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_lookout_ingester cmd/lookoutingesterv2/main.go --

  event-ingester:
    container_name: event-ingester
    image: golang:1.20-delve
    networks:
      - kind
    ports:
      - 4007:4000
    volumes:
      - "..:/app:rw"
      - "go-cache:/root/.cache/go-build:rw"
    working_dir: /app
    entrypoint: dlv
    command: debug --listen=:4000 --headless=true --log=true --accept-multiclient --api-version=2 --continue --output __debug_event_ingester cmd/eventingester/main.go --
