name: Code Coverage

on:
  push:
  pull_request:

jobs:
  go-unit-coverage:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/go-setup
        with:
          go-version: 1.18

      - name: make tests
        run: make tests

      - name: Go Test Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./internal_coverage.xml,./cmd_coverage.xml # optional
          flags: armada-server

  python-unit-coverage:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.17.3'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/workflows/go-setup

      - name: Run Python Tests for Python Client
        uses: ./.github/workflows/python-tests
        with:
          python-version: '3.10'
          tox-env: 'py310'
          path: 'client/python'
          github-token: ${{secrets.GITHUB_TOKEN}}

      - name: Upload Coverage to codecov (./client/python)
        uses: codecov/codecov-action@v3
        with:
          files: 'client/python/coverage.xml'
          flags: python-client



  airflow-unit-coverage:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.17.3'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/workflows/go-setup
      - run: make airflow-operator

      - name: Run Python Tests for Airflow Operator
        uses: ./.github/workflows/python-tests
        with:
          python-version: '3.10'
          tox-env: 'py310'
          path: 'third_party/airflow'
          github-token: ${{secrets.GITHUB_TOKEN}}
      - name: Upload Coverage to codecov (./third_party/airflow)
        uses: codecov/codecov-action@v3
        with:
          files: 'third_party/airflow/coverage.xml'
          flags: airflow-operator
