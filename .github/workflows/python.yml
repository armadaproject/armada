name: Run Python Linting and Unit Tests

on:
  push:
    paths:
      - 'client/python/**'
      - 'build/python-client/**'
      - 'pkg/api/*.proto'
      - '.github/workflows/python.yml'


jobs:
  run-tox:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make python
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config settings.virtualenvs.in-project false
          poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install tox
        run: pip install tox
      - name: Run tox format environment
        run: poetry run tox -e format
        working-directory: client/python
      - name: Run tox python 3.9 unit tests
        run: poetry run tox -e py39
        working-directory: client/python