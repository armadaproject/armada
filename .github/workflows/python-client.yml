name: Python Client

on:
  push:
    branches-ignore:
      - master
    paths:
      - 'client/python/**'
      - 'build/python-client/**'
      - 'pkg/api/*.proto'
      - '.github/workflows/python-client.yml'
      - 'docs/python_armada_client.md'
      - 'scripts/build-python-client.sh'
      - 'makefile'
      - '.github/workflows/python-tests/*'
      - './magefiles/tests.go'
      - './magefiles/python.go'

  pull_request:
    branches-ignore:
      - gh-pages
    paths:
      - 'client/python/**'
      - 'build/python-client/**'
      - 'pkg/api/*.proto'
      - '.github/workflows/python-client.yml'
      - 'docs/python_armada_client.md'
      - 'scripts/build-python-client.sh'
      - 'makefile'
      - '.github/workflows/python-tests/*'

jobs:
  python-client-tox:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python: [ '3.8', '3.9', '3.10' ]
        include:
          - tox-env: 'py38'
          - tox-env: 'py39'
            python: '3.9'
          - tox-env: 'py310'
            python: '3.10'
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Setup Go
        uses: ./.github/actions/setup-go-cache
        with:
          cache-prefix: python-client-tox
      - uses: ./.github/workflows/python-tests
        with:
          python-version: ${{ matrix.python }}
          tox-env: ${{ matrix.tox-env }}
          path: 'client/python'
          github-token: ${{secrets.GITHUB_TOKEN}}

  python-client-integration-tests:
    if: github.repository_owner == 'armadaproject'
    # As of December 2022, using 8vcpu runners is slower overall,
    # due to longer queue times.
    runs-on: ubuntu-22.04
    env:
      # This variable is picked up by the goreleaser config.
      DOCKER_BUILDX_BUILDER: "builder"
    steps:
      - uses: actions/checkout@v3.3.0
      - run: docker buildx create --name ${DOCKER_BUILDX_BUILDER} --driver docker-container --use
      - run: docker buildx install

      - name: Setup Go
        uses: ./.github/actions/setup-go-cache
        with:
          cache-prefix: python-client-integration-tests
          cache-tools: true

      - name: Setup and run integration tests
        run: |
          # Manually create folders to ensure perms are correct.
          mkdir -p .kube/internal
          mkdir -p .kube/external
          go run github.com/magefile/mage@v1.14.0 -v localdev minimal
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '23.3'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: go run github.com/magefile/mage@v1.14.0 -v teste2epython
