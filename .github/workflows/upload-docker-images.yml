name: Release Armada

on:
  workflow_call: {}

jobs:
  upload-docker-images:
    runs-on: ubuntu-latest
    environment: armada-dockerhub
    steps:
      - name: Download saved docker-images artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: docker-images
      - name: Unzip docker-images artifacts
        run: |
          tar xf docker-images.tar.gz
          rm docker-images.tar.gz
      - name: Upload images to docker
        env:
            DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
            DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
        run: |
          # Note(JayF): All the offical docker actions for uploading these
          # containers also assume you need to rebuild them. That makes them
          # ill-suited for our workflow.
          TAG_SUFFIX=$(${{ github.sha }} | sed 's|/|-|g')

          if [ "${{github.ref_name}}" = "master" ]; then
            TAG="$TAG_SUFFIX"
          else
            TAG="${{github.ref_name}}-$TAG_SUFFIX"
          fi

          echo ${env.DOCKERHUB_PASS} | docker login -u ${env.DOCKERHUB_USER} --password-stdin

          IMAGES_TO_UPLOAD=(
            "armada-server"
            "armada-executor"
            "armada-armadactl"
            "armada-testsuite"
            "armada-lookout"
            "armada-lookout-ingester"
            "armada-event-ingester"
            "armada-binoculars"
            "armada-jobservice"
          )
          for image in "${IMAGES_TO_UPLOAD[@]}"; do
              remote="gresearch/${image}-dev:${TAG}"
              docker load -i $image.tar.gz
              docker tag $image $remote
              docker push $remote
          done
