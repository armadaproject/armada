name: Python Airflow Operator

on:
  push:
    branches-ignore:
      - master
    paths:
      - '.github/workflows/airflow-operator.yml'
      - '.github/workflows/python-client.yml'
      - '.github/workflows/python-tests/*'
      - 'build/airflow-operator/**'
      - 'build/python-client/**'
      - 'client/python/**'
      - 'docs/python_airflow_operator.md'
      - 'docs/python_armada_client.md'
      - 'internal/jobservice/*'
      - 'makefile'
      - 'pkg/api/*.proto'
      - 'pkg/api/jobservice/*.proto'
      - 'scripts/build-airflow-operator.sh'
      - 'scripts/build-python-client.sh'
      - 'third_party/airflow/**'

  pull_request:
    branches-ignore:
      - gh-pages
    paths:
      - '.github/workflows/airflow-operator.yml'
      - '.github/workflows/python-client.yml'
      - '.github/workflows/python-tests/*'
      - 'build/airflow-operator/**'
      - 'build/python-client/**'
      - 'client/python/**'
      - 'docs/python_airflow_operator.md'
      - 'docs/python_armada_client.md'
      - 'internal/jobservice/*'
      - 'makefile'
      - 'pkg/api/*.proto'
      - 'pkg/api/jobservice/*.proto'
      - 'scripts/build-airflow-operator.sh'
      - 'scripts/build-python-client.sh'
      - 'third_party/airflow/**'

jobs:
  airflow-tox:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go: [ '1.20' ]
        python: [ '3.8', '3.9', '3.10' ]
        include:
          - tox-env: 'py38'
          - tox-env: 'py39'
            python: '3.9'
          - tox-env: 'py310'
            python: '3.10'
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/go-setup
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.17.3'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: make airflow-operator
      - uses: ./.github/workflows/python-tests
        with:
          python-version: ${{ matrix.python }}
          tox-env: ${{ matrix.tox-env }}
          path: third_party/airflow
          github-token: ${{secrets.GITHUB_TOKEN}}
  airflow-integration-tests:
    if: github.repository_owner == 'armadaproject'
    strategy:
      fail-fast: false
      matrix:
        # WARN(JayF): If we begin attempting to support >1 golang version,
        # we'll have to ensure that we don't use the same artifact name for
        # both versions in the matrix -- this will lead to them overwriting
        # each other.
        go: [ '1.20' ]
    # As of December 2022, using 8vcpu runners is slower overall,
    # due to longer queue times.
    runs-on: ubuntu-22.04
    env:
      # Cache Docker layers in the Github actions cache.
      # These variables are picked up by the goreleaser config.
      DOCKER_BUILDX_CACHE_FROM: "type=gha"
      DOCKER_BUILDX_CACHE_TO: "type=gha,mode=max"
      DOCKER_BUILDX_BUILDER: "builder"
    steps:
      - uses: actions/checkout@v3
      - run: docker buildx create --name ${DOCKER_BUILDX_BUILDER} --driver docker-container --use
      - run: docker buildx install
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - name: Setup and integration tests
        run: |
          # Manually create folders to ensure perms are correct.
          mkdir -p .kube/internal
          mkdir -p .kube/external
          go run github.com/magefile/mage@v1.14.0 -v localdev minimal
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.17.3'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: make tests-e2e-airflow

