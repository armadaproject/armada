name: Go End to End

on:
  # The Push runners always seem to be slower.
  # Seems to be due to hitting cache limits and only one runner
  # being able to access the cache at a time.
  # push:
  #   branches-ignore:
  #     - master
  pull_request:
    branches-ignore:
      - gh-pages

jobs:
  go-integration-tests:
    if: github.repository_owner == 'armadaproject'
    strategy:
      fail-fast: false
      matrix:
        # WARN(JayF): If we begin attempting to support >1 golang version,
        # we'll have to ensure that we don't use the same artifact name for
        # both versions in the matrix -- this will lead to them overwriting
        # each other.
        go: [ '1.20' ]
    # As of December 2022, using 8vcpu runners is slower overall,
    # due to longer queue times.
    runs-on: ubuntu-22.04
    env:
      # Cache Docker layers in the Github actions cache.
      # These variables are picked up by the goreleaser config.
      DOCKER_BUILDX_CACHE_FROM: "type=gha"
      DOCKER_BUILDX_CACHE_TO: "type=gha,mode=max"
      DOCKER_BUILDX_BUILDER: "builder"
      # Seems that for optimal performance, we need to set these
      # explicitly - including GOBIN.
      GOCACHE: "/home/runner/.cache/go-build"
      GOPATH: "/home/runner/go"
      GOBIN: "/home/runner/go/bin"
    steps:
      - uses: actions/checkout@v3
      - run: docker buildx create --name ${DOCKER_BUILDX_BUILDER} --driver docker-container --use
      - run: docker buildx install
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache: false
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/.cache/go-build
            /home/runner/go
            /home/runner/go/bin
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Setup and integration tests
        run: |
          # Manually create folders to ensure perms are correct.
          mkdir -p .kube/internal
          mkdir -p .kube/external
          go run github.com/magefile/mage@v1.14.0 -v localdev minimal testsuite
      - name: Upload JUnit report artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: junit.xml
          path: junit.xml
          if-no-files-found: error
      - name: Publish JUnit report
        uses: mikepenz/action-junit-report@v3.6.1
        if: always()
        with:
          report_paths: junit.xml
          fail_on_failure: true
          require_tests: true
          detailed_summary: true
