name: Build

on:
  workflow_call:

jobs:
  prepare:
    runs-on: ubuntu-latest-16-cores
    if: github.repository_owner == 'armadaproject'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: ./.github/actions/setup-go-cache
        with:
          cache-prefix: prepare

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: v1.20.0
          args: release  --snapshot --skip-sbom --skip-sign --clean
        env:
          DOCKER_REPO: "gresearch"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          DOCKER_BUILDX_BUILDER: "${{ steps.buildx.outputs.name }}"

      - name: Output full commit sha
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: echo "sha_full=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Save Docker image tarballs
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          scripts/docker-save.sh -t ${{ env.sha_full }} -o /tmp/imgs

      - name: Save Docker image tarballs as artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: armada-image-tarballs
          path: /tmp/imgs

  pack-nuget:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup the latest .NET 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Setup Go
        uses: ./.github/actions/setup-go-cache
        with:
          cache-prefix: pack-nuget
          cache-tools: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: '23.3'

      - name: Create release tag
        id: create-release-tag
        run: echo "release_tag=$(git describe --tags --always --dirty --match='v*' 2> /dev/null | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Pack dotnet clients
        env:
          RELEASE_TAG: ${{ steps.create-release-tag.outputs.release_tag }}
        run: go run github.com/magefile/mage@v1.14.0 -v packNuget

      - name: Save nupkg artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nupkg-artifacts
          path: |
            ./bin/client/DotNet/G-Research.Armada.Client.${{ steps.create-release-tag.outputs.release_tag }}.nupkg
            ./bin/client/DotNet/ArmadaProject.Io.Client.${{ steps.create-release-tag.outputs.release_tag }}.nupkg
