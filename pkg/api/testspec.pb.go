// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/testspec.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// If the jobs in this spec. should be cancelled.
type TestSpec_Cancel int32

const (
	TestSpec_NO     TestSpec_Cancel = 0 // Do not cancel jobs.
	TestSpec_BY_ID  TestSpec_Cancel = 1 // Cancel jobs individually.
	TestSpec_BY_SET TestSpec_Cancel = 2 // Cancel all jobs in the job set in bulk.
	TestSpec_BY_IDS TestSpec_Cancel = 3 // Cancel all jobs in the job set by multiple ids
)

// Enum value maps for TestSpec_Cancel.
var (
	TestSpec_Cancel_name = map[int32]string{
		0: "NO",
		1: "BY_ID",
		2: "BY_SET",
		3: "BY_IDS",
	}
	TestSpec_Cancel_value = map[string]int32{
		"NO":     0,
		"BY_ID":  1,
		"BY_SET": 2,
		"BY_IDS": 3,
	}
)

func (x TestSpec_Cancel) Enum() *TestSpec_Cancel {
	p := new(TestSpec_Cancel)
	*p = x
	return p
}

func (x TestSpec_Cancel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestSpec_Cancel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_testspec_proto_enumTypes[0].Descriptor()
}

func (TestSpec_Cancel) Type() protoreflect.EnumType {
	return &file_api_testspec_proto_enumTypes[0]
}

func (x TestSpec_Cancel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestSpec_Cancel.Descriptor instead.
func (TestSpec_Cancel) EnumDescriptor() ([]byte, []int) {
	return file_api_testspec_proto_rawDescGZIP(), []int{0, 0}
}

// Defines a test case for the Armada test suite.
// Defined as a proto message to enable unmarshalling oneof fields.
type TestSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Jobs to submit.
	// The n jobs herein are copied BatchSize times to produce n*BatchSize jobs.
	// A batch of n*BatchSize such jobs are submitted in each API call.
	// NumBatches such batches are submitted in total.
	Jobs []*JobSubmitRequestItem `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// Events expected in response to submitting each job.
	ExpectedEvents []*EventMessage `protobuf:"bytes,2,rep,name=expected_events,json=expectedEvents,proto3" json:"expected_events,omitempty"`
	// Queue to submit jobs to.
	Queue string `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"`
	// Job set to submit jobs to.
	JobSetId string `protobuf:"bytes,4,opt,name=job_set_id,json=jobSetId,proto3" json:"job_set_id,omitempty"`
	// Number of batches of jobs to submit.
	// If 0, will submit forever.
	NumBatches uint32 `protobuf:"varint,5,opt,name=num_batches,json=numBatches,proto3" json:"num_batches,omitempty"`
	// Number of copies of the provided jobs to submit per batch.
	BatchSize uint32 `protobuf:"varint,6,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// Time between batches.
	// If 0, jobs are submitted as quickly as possible.
	Interval *durationpb.Duration `protobuf:"bytes,7,opt,name=interval,proto3" json:"interval,omitempty"`
	// Number of seconds to wait for jobs to finish.
	Timeout *durationpb.Duration `protobuf:"bytes,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Cancel  TestSpec_Cancel      `protobuf:"varint,9,opt,name=cancel,proto3,enum=api.TestSpec_Cancel" json:"cancel,omitempty"`
	// Test name. Defaults to the filename if not provided.
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// Randomize clientId if not provided
	RandomClientId bool `protobuf:"varint,11,opt,name=random_client_id,json=randomClientId,proto3" json:"random_client_id,omitempty"`
	// Toggle should testsuite scrape Armada Job (pod) logs
	GetLogs bool `protobuf:"varint,12,opt,name=get_logs,json=getLogs,proto3" json:"get_logs,omitempty"`
	// Value of the environment label set on exported Prometheus metrics.
	Environment string `protobuf:"bytes,13,opt,name=environment,proto3" json:"environment,omitempty"`
	// Value of the target label set on exported Prometheus metrics.
	Target string `protobuf:"bytes,14,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *TestSpec) Reset() {
	*x = TestSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_testspec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSpec) ProtoMessage() {}

func (x *TestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_testspec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSpec.ProtoReflect.Descriptor instead.
func (*TestSpec) Descriptor() ([]byte, []int) {
	return file_api_testspec_proto_rawDescGZIP(), []int{0}
}

func (x *TestSpec) GetJobs() []*JobSubmitRequestItem {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *TestSpec) GetExpectedEvents() []*EventMessage {
	if x != nil {
		return x.ExpectedEvents
	}
	return nil
}

func (x *TestSpec) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *TestSpec) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *TestSpec) GetNumBatches() uint32 {
	if x != nil {
		return x.NumBatches
	}
	return 0
}

func (x *TestSpec) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *TestSpec) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *TestSpec) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *TestSpec) GetCancel() TestSpec_Cancel {
	if x != nil {
		return x.Cancel
	}
	return TestSpec_NO
}

func (x *TestSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSpec) GetRandomClientId() bool {
	if x != nil {
		return x.RandomClientId
	}
	return false
}

func (x *TestSpec) GetGetLogs() bool {
	if x != nil {
		return x.GetLogs
	}
	return false
}

func (x *TestSpec) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *TestSpec) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

var File_api_testspec_proto protoreflect.FileDescriptor

var file_api_testspec_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x04, 0x0a,
	0x08, 0x54, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2d, 0x0a, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6a, 0x6f,
	0x62, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x33, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x5f, 0x49, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x53, 0x10, 0x03, 0x42, 0x40, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6d, 0x61, 0x64, 0x61, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x72, 0x6d, 0x61, 0x64, 0x61, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x14, 0x41, 0x72, 0x6d, 0x61, 0x64, 0x61, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_testspec_proto_rawDescOnce sync.Once
	file_api_testspec_proto_rawDescData = file_api_testspec_proto_rawDesc
)

func file_api_testspec_proto_rawDescGZIP() []byte {
	file_api_testspec_proto_rawDescOnce.Do(func() {
		file_api_testspec_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_testspec_proto_rawDescData)
	})
	return file_api_testspec_proto_rawDescData
}

var file_api_testspec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_testspec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_testspec_proto_goTypes = []interface{}{
	(TestSpec_Cancel)(0),         // 0: api.TestSpec.Cancel
	(*TestSpec)(nil),             // 1: api.TestSpec
	(*JobSubmitRequestItem)(nil), // 2: api.JobSubmitRequestItem
	(*EventMessage)(nil),         // 3: api.EventMessage
	(*durationpb.Duration)(nil),  // 4: google.protobuf.Duration
}
var file_api_testspec_proto_depIdxs = []int32{
	2, // 0: api.TestSpec.jobs:type_name -> api.JobSubmitRequestItem
	3, // 1: api.TestSpec.expected_events:type_name -> api.EventMessage
	4, // 2: api.TestSpec.interval:type_name -> google.protobuf.Duration
	4, // 3: api.TestSpec.timeout:type_name -> google.protobuf.Duration
	0, // 4: api.TestSpec.cancel:type_name -> api.TestSpec.Cancel
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_testspec_proto_init() }
func file_api_testspec_proto_init() {
	if File_api_testspec_proto != nil {
		return
	}
	file_api_submit_proto_init()
	file_api_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_testspec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_testspec_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_testspec_proto_goTypes,
		DependencyIndexes: file_api_testspec_proto_depIdxs,
		EnumInfos:         file_api_testspec_proto_enumTypes,
		MessageInfos:      file_api_testspec_proto_msgTypes,
	}.Build()
	File_api_testspec_proto = out.File
	file_api_testspec_proto_rawDesc = nil
	file_api_testspec_proto_goTypes = nil
	file_api_testspec_proto_depIdxs = nil
}
