// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/api/schedulerobjects/scheduler_reporting.proto

package schedulerobjects

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Deprecated. This will be removed in a future release. Please use GetQueueReport instead.
type MostRecentForQueue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MostRecentForQueue) Reset() {
	*x = MostRecentForQueue{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MostRecentForQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostRecentForQueue) ProtoMessage() {}

func (x *MostRecentForQueue) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostRecentForQueue.ProtoReflect.Descriptor instead.
func (*MostRecentForQueue) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{0}
}

func (x *MostRecentForQueue) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// Deprecated. This will be removed in a future release. Please use GetJobReport instead.
type MostRecentForJob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MostRecentForJob) Reset() {
	*x = MostRecentForJob{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MostRecentForJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostRecentForJob) ProtoMessage() {}

func (x *MostRecentForJob) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostRecentForJob.ProtoReflect.Descriptor instead.
func (*MostRecentForJob) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{1}
}

func (x *MostRecentForJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type SchedulingReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Filter:
	//
	//	*SchedulingReportRequest_MostRecentForQueue
	//	*SchedulingReportRequest_MostRecentForJob
	Filter        isSchedulingReportRequest_Filter `protobuf_oneof:"filter"`
	Verbosity     int32                            `protobuf:"varint,3,opt,name=verbosity,proto3" json:"verbosity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchedulingReportRequest) Reset() {
	*x = SchedulingReportRequest{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulingReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingReportRequest) ProtoMessage() {}

func (x *SchedulingReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingReportRequest.ProtoReflect.Descriptor instead.
func (*SchedulingReportRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{2}
}

func (x *SchedulingReportRequest) GetFilter() isSchedulingReportRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SchedulingReportRequest) GetMostRecentForQueue() *MostRecentForQueue {
	if x != nil {
		if x, ok := x.Filter.(*SchedulingReportRequest_MostRecentForQueue); ok {
			return x.MostRecentForQueue
		}
	}
	return nil
}

func (x *SchedulingReportRequest) GetMostRecentForJob() *MostRecentForJob {
	if x != nil {
		if x, ok := x.Filter.(*SchedulingReportRequest_MostRecentForJob); ok {
			return x.MostRecentForJob
		}
	}
	return nil
}

func (x *SchedulingReportRequest) GetVerbosity() int32 {
	if x != nil {
		return x.Verbosity
	}
	return 0
}

type isSchedulingReportRequest_Filter interface {
	isSchedulingReportRequest_Filter()
}

type SchedulingReportRequest_MostRecentForQueue struct {
	// Deprecated. This will be removed in a future release. Please use GetQueueReport instead.
	MostRecentForQueue *MostRecentForQueue `protobuf:"bytes,1,opt,name=most_recent_for_queue,json=mostRecentForQueue,proto3,oneof"`
}

type SchedulingReportRequest_MostRecentForJob struct {
	// Deprecated. This will be removed in a future release. Please use GetJobReport instead.
	MostRecentForJob *MostRecentForJob `protobuf:"bytes,2,opt,name=most_recent_for_job,json=mostRecentForJob,proto3,oneof"`
}

func (*SchedulingReportRequest_MostRecentForQueue) isSchedulingReportRequest_Filter() {}

func (*SchedulingReportRequest_MostRecentForJob) isSchedulingReportRequest_Filter() {}

type SchedulingReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        string                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchedulingReport) Reset() {
	*x = SchedulingReport{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulingReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingReport) ProtoMessage() {}

func (x *SchedulingReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingReport.ProtoReflect.Descriptor instead.
func (*SchedulingReport) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{3}
}

func (x *SchedulingReport) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

type QueueReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Verbosity     int32                  `protobuf:"varint,2,opt,name=verbosity,proto3" json:"verbosity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueReportRequest) Reset() {
	*x = QueueReportRequest{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueReportRequest) ProtoMessage() {}

func (x *QueueReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueReportRequest.ProtoReflect.Descriptor instead.
func (*QueueReportRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{4}
}

func (x *QueueReportRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *QueueReportRequest) GetVerbosity() int32 {
	if x != nil {
		return x.Verbosity
	}
	return 0
}

type QueueReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        string                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueReport) Reset() {
	*x = QueueReport{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueReport) ProtoMessage() {}

func (x *QueueReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueReport.ProtoReflect.Descriptor instead.
func (*QueueReport) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{5}
}

func (x *QueueReport) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

type JobReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobReportRequest) Reset() {
	*x = JobReportRequest{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReportRequest) ProtoMessage() {}

func (x *JobReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReportRequest.ProtoReflect.Descriptor instead.
func (*JobReportRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{6}
}

func (x *JobReportRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        string                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobReport) Reset() {
	*x = JobReport{}
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReport) ProtoMessage() {}

func (x *JobReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReport.ProtoReflect.Descriptor instead.
func (*JobReport) Descriptor() ([]byte, []int) {
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP(), []int{7}
}

func (x *JobReport) GetReport() string {
	if x != nil {
		return x.Report
	}
	return ""
}

var File_pkg_api_schedulerobjects_scheduler_reporting_proto protoreflect.FileDescriptor

var file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDesc = string([]byte{
	0x0a, 0x32, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x12, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x10, 0x4d, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x59, 0x0a, 0x15, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x6d,
	0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6a,
	0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x10,
	0x6d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x62,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x42, 0x08,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x65,
	0x72, 0x62, 0x6f, 0x73, 0x69, 0x74, 0x79, 0x22, 0x25, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x29,
	0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x9f,
	0x03, 0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x7d, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2d, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x7a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f,
	0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x72, 0x6d, 0x61, 0x64, 0x61, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x72, 0x6d,
	0x61, 0x64, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescOnce sync.Once
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescData []byte
)

func file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescGZIP() []byte {
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescOnce.Do(func() {
		file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDesc), len(file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDesc)))
	})
	return file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDescData
}

var file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_api_schedulerobjects_scheduler_reporting_proto_goTypes = []any{
	(*MostRecentForQueue)(nil),      // 0: schedulerobjects.MostRecentForQueue
	(*MostRecentForJob)(nil),        // 1: schedulerobjects.MostRecentForJob
	(*SchedulingReportRequest)(nil), // 2: schedulerobjects.SchedulingReportRequest
	(*SchedulingReport)(nil),        // 3: schedulerobjects.SchedulingReport
	(*QueueReportRequest)(nil),      // 4: schedulerobjects.QueueReportRequest
	(*QueueReport)(nil),             // 5: schedulerobjects.QueueReport
	(*JobReportRequest)(nil),        // 6: schedulerobjects.JobReportRequest
	(*JobReport)(nil),               // 7: schedulerobjects.JobReport
}
var file_pkg_api_schedulerobjects_scheduler_reporting_proto_depIdxs = []int32{
	0, // 0: schedulerobjects.SchedulingReportRequest.most_recent_for_queue:type_name -> schedulerobjects.MostRecentForQueue
	1, // 1: schedulerobjects.SchedulingReportRequest.most_recent_for_job:type_name -> schedulerobjects.MostRecentForJob
	2, // 2: schedulerobjects.SchedulerReporting.GetSchedulingReport:input_type -> schedulerobjects.SchedulingReportRequest
	4, // 3: schedulerobjects.SchedulerReporting.GetQueueReport:input_type -> schedulerobjects.QueueReportRequest
	6, // 4: schedulerobjects.SchedulerReporting.GetJobReport:input_type -> schedulerobjects.JobReportRequest
	3, // 5: schedulerobjects.SchedulerReporting.GetSchedulingReport:output_type -> schedulerobjects.SchedulingReport
	5, // 6: schedulerobjects.SchedulerReporting.GetQueueReport:output_type -> schedulerobjects.QueueReport
	7, // 7: schedulerobjects.SchedulerReporting.GetJobReport:output_type -> schedulerobjects.JobReport
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_api_schedulerobjects_scheduler_reporting_proto_init() }
func file_pkg_api_schedulerobjects_scheduler_reporting_proto_init() {
	if File_pkg_api_schedulerobjects_scheduler_reporting_proto != nil {
		return
	}
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes[2].OneofWrappers = []any{
		(*SchedulingReportRequest_MostRecentForQueue)(nil),
		(*SchedulingReportRequest_MostRecentForJob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDesc), len(file_pkg_api_schedulerobjects_scheduler_reporting_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_schedulerobjects_scheduler_reporting_proto_goTypes,
		DependencyIndexes: file_pkg_api_schedulerobjects_scheduler_reporting_proto_depIdxs,
		MessageInfos:      file_pkg_api_schedulerobjects_scheduler_reporting_proto_msgTypes,
	}.Build()
	File_pkg_api_schedulerobjects_scheduler_reporting_proto = out.File
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_goTypes = nil
	file_pkg_api_schedulerobjects_scheduler_reporting_proto_depIdxs = nil
}
