syntax = 'proto3';

package api;

import "google/protobuf/empty.proto";
import "k8s.io/api/core/v1/generated.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;


message JobSubmitRequestItem {
    double priority = 1;
    string namespace = 3;
    string client_id = 8;
    map<string, string> labels = 4;
    map<string, string> annotations = 5;
    map<string, string> required_node_labels = 6 [deprecated = true]; // Use PodSpec.NodeSelector instead
    k8s.io.api.core.v1.PodSpec pod_spec = 2 [deprecated = true]; // Use PodSpecs instead
    repeated k8s.io.api.core.v1.PodSpec pod_specs = 7;
    repeated IngressConfig ingress = 9;
    repeated ServiceConfig services = 10;
}

message IngressConfig {
    IngressType type = 1 [deprecated = true];
    repeated uint32 ports = 2;
    map<string, string> annotations = 3;
    bool tls_enabled = 4;
    string cert_name = 5;
    bool use_clusterIP = 6;
}

message ServiceConfig {
    ServiceType type = 1;
    repeated uint32 ports = 2;
}

// Ingress type is being kept here to maintain backwards compatibility for a while.
enum IngressType {
    Ingress = 0;
}

enum ServiceType {
    NodePort = 0;
    Headless = 1;
}

// swagger:model
message JobSubmitRequest {
    string queue = 1;
    string job_set_id = 2;
    repeated JobSubmitRequestItem job_request_items = 3;
}

// swagger:model
message JobCancelRequest {
    string job_id = 1;
    string job_set_id = 2;
    string queue = 3;
}

// swagger:model
message JobSetCancelRequest {
    string job_set_id = 1;
    string queue = 2;
    JobSetFilter filter = 3;
}

// swagger:model
message JobSetFilter {
    repeated JobState states = 1;
}

// swagger:model
enum JobState {
    QUEUED = 0;
    PENDING = 1;
    RUNNING = 2;
}

// swagger:model
message JobReprioritizeRequest {
    repeated string job_ids = 1;
    string job_set_id = 2;
    string queue = 3;
    double new_priority = 4;
}

// swagger:model
message JobReprioritizeResponse {
    map<string, string> reprioritization_results = 1;
}

message JobSubmitResponseItem {
    string job_id = 1;
    string error = 2;
}

// swagger:model
message JobSubmitResponse {
    repeated JobSubmitResponseItem job_response_items = 1;
}

// swagger:model
message Queue {
    message Permissions {
        message Subject {
            string kind = 1;
            string name = 2;
        }

        repeated Subject subjects = 1;
        repeated string verbs = 2;
    }

    string name = 1;
    double priority_factor = 2;
    repeated string user_owners = 3;
    repeated string group_owners = 4;
    map<string, double> resource_limits = 5;
    repeated Permissions permissions = 6;
}

// swagger:model
message QueueList {
    repeated Queue queues = 1;
}

// swagger:model
message CancellationResult {
    repeated string cancelled_ids = 1 [(gogoproto.jsontag) = "cancelledIds"];
}

//swagger:model
message QueueGetRequest {
    string name = 1;
}

//swagger:model
message QueueInfoRequest {
    string name = 1;
}

//swagger:model
message QueueDeleteRequest {
    string name = 1;
}

//swagger:model
message QueueInfo {
    string name = 1;
    repeated JobSetInfo active_job_sets = 2;
}

message JobSetInfo {
    string name = 1;
    int32 queued_jobs = 2;
    int32 leased_jobs = 3;
}

message QueueUpdateResponse {
    Queue queue = 1;
    string error = 2;
}

message BatchQueueUpdateResponse {
    repeated QueueUpdateResponse failed_queues = 1;
}

message QueueCreateResponse {
    Queue queue = 1;
    string error = 2;
}

message BatchQueueCreateResponse {
    repeated QueueCreateResponse failed_queues = 1;
}

service Submit {
    rpc SubmitJobs (JobSubmitRequest) returns (JobSubmitResponse) {
        option (google.api.http) = {
            post: "/v1/job/submit"
            body: "*"
        };
    }
    rpc CancelJobs (JobCancelRequest) returns (CancellationResult) {
        option (google.api.http) = {
            post: "/v1/job/cancel"
            body: "*"
        };
    }
    rpc CancelJobSet (JobSetCancelRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/jobset/cancel"
            body: "*"
        };
    }
    rpc ReprioritizeJobs (JobReprioritizeRequest) returns (JobReprioritizeResponse) {
        option (google.api.http) = {
            post: "/v1/job/reprioritize"
            body: "*"
        };
    }
    rpc CreateQueue (Queue) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/queue"
            body: "*"
        };
    }
    rpc CreateQueues (QueueList) returns (BatchQueueCreateResponse) {
        option(google.api.http) = {
            post: "/v1/batched/create_queues"
            body: "*"
        };
    }
    rpc UpdateQueue (Queue) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/queue/{name}"
            body: "*"
        };
    }
    rpc UpdateQueues (QueueList) returns (BatchQueueUpdateResponse) {
        option (google.api.http) = {
            put: "/v1/batched/update_queues"
            body: "*"
        };
    }
    rpc DeleteQueue (QueueDeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/queue/{name}"
        };
    }
    rpc GetQueue (QueueGetRequest) returns (Queue) {
        option (google.api.http) = {
            get: "/v1/queue/{name}"
        };
    }
    rpc GetQueueInfo (QueueInfoRequest) returns (QueueInfo) {
        option (google.api.http) = {
            get: "/v1/queue/{name}/info"
        };
    }
}
