// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: pkg/api/job.proto

package api

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Jobs_GetJobStatus_FullMethodName                    = "/api.Jobs/GetJobStatus"
	Jobs_GetJobStatusUsingExternalJobUri_FullMethodName = "/api.Jobs/GetJobStatusUsingExternalJobUri"
	Jobs_GetJobDetails_FullMethodName                   = "/api.Jobs/GetJobDetails"
	Jobs_GetJobErrors_FullMethodName                    = "/api.Jobs/GetJobErrors"
	Jobs_GetJobRunDetails_FullMethodName                = "/api.Jobs/GetJobRunDetails"
)

// JobsClient is the client API for Jobs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobsClient interface {
	GetJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatusResponse, error)
	GetJobStatusUsingExternalJobUri(ctx context.Context, in *JobStatusUsingExternalJobUriRequest, opts ...grpc.CallOption) (*JobStatusResponse, error)
	GetJobDetails(ctx context.Context, in *JobDetailsRequest, opts ...grpc.CallOption) (*JobDetailsResponse, error)
	GetJobErrors(ctx context.Context, in *JobErrorsRequest, opts ...grpc.CallOption) (*JobErrorsResponse, error)
	GetJobRunDetails(ctx context.Context, in *JobRunDetailsRequest, opts ...grpc.CallOption) (*JobRunDetailsResponse, error)
}

type jobsClient struct {
	cc grpc.ClientConnInterface
}

func NewJobsClient(cc grpc.ClientConnInterface) JobsClient {
	return &jobsClient{cc}
}

func (c *jobsClient) GetJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStatusResponse)
	err := c.cc.Invoke(ctx, Jobs_GetJobStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) GetJobStatusUsingExternalJobUri(ctx context.Context, in *JobStatusUsingExternalJobUriRequest, opts ...grpc.CallOption) (*JobStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobStatusResponse)
	err := c.cc.Invoke(ctx, Jobs_GetJobStatusUsingExternalJobUri_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) GetJobDetails(ctx context.Context, in *JobDetailsRequest, opts ...grpc.CallOption) (*JobDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobDetailsResponse)
	err := c.cc.Invoke(ctx, Jobs_GetJobDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) GetJobErrors(ctx context.Context, in *JobErrorsRequest, opts ...grpc.CallOption) (*JobErrorsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobErrorsResponse)
	err := c.cc.Invoke(ctx, Jobs_GetJobErrors_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsClient) GetJobRunDetails(ctx context.Context, in *JobRunDetailsRequest, opts ...grpc.CallOption) (*JobRunDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobRunDetailsResponse)
	err := c.cc.Invoke(ctx, Jobs_GetJobRunDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobsServer is the server API for Jobs service.
// All implementations must embed UnimplementedJobsServer
// for forward compatibility.
type JobsServer interface {
	GetJobStatus(context.Context, *JobStatusRequest) (*JobStatusResponse, error)
	GetJobStatusUsingExternalJobUri(context.Context, *JobStatusUsingExternalJobUriRequest) (*JobStatusResponse, error)
	GetJobDetails(context.Context, *JobDetailsRequest) (*JobDetailsResponse, error)
	GetJobErrors(context.Context, *JobErrorsRequest) (*JobErrorsResponse, error)
	GetJobRunDetails(context.Context, *JobRunDetailsRequest) (*JobRunDetailsResponse, error)
	mustEmbedUnimplementedJobsServer()
}

// UnimplementedJobsServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedJobsServer struct{}

func (UnimplementedJobsServer) GetJobStatus(context.Context, *JobStatusRequest) (*JobStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatus not implemented")
}
func (UnimplementedJobsServer) GetJobStatusUsingExternalJobUri(context.Context, *JobStatusUsingExternalJobUriRequest) (*JobStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatusUsingExternalJobUri not implemented")
}
func (UnimplementedJobsServer) GetJobDetails(context.Context, *JobDetailsRequest) (*JobDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobDetails not implemented")
}
func (UnimplementedJobsServer) GetJobErrors(context.Context, *JobErrorsRequest) (*JobErrorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobErrors not implemented")
}
func (UnimplementedJobsServer) GetJobRunDetails(context.Context, *JobRunDetailsRequest) (*JobRunDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobRunDetails not implemented")
}
func (UnimplementedJobsServer) mustEmbedUnimplementedJobsServer() {}
func (UnimplementedJobsServer) testEmbeddedByValue()              {}

// UnsafeJobsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobsServer will
// result in compilation errors.
type UnsafeJobsServer interface {
	mustEmbedUnimplementedJobsServer()
}

func RegisterJobsServer(s grpc.ServiceRegistrar, srv JobsServer) {
	// If the following call pancis, it indicates UnimplementedJobsServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Jobs_ServiceDesc, srv)
}

func _Jobs_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Jobs_GetJobStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJobStatus(ctx, req.(*JobStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_GetJobStatusUsingExternalJobUri_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobStatusUsingExternalJobUriRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJobStatusUsingExternalJobUri(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Jobs_GetJobStatusUsingExternalJobUri_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJobStatusUsingExternalJobUri(ctx, req.(*JobStatusUsingExternalJobUriRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_GetJobDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJobDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Jobs_GetJobDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJobDetails(ctx, req.(*JobDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_GetJobErrors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobErrorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJobErrors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Jobs_GetJobErrors_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJobErrors(ctx, req.(*JobErrorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jobs_GetJobRunDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRunDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServer).GetJobRunDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Jobs_GetJobRunDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServer).GetJobRunDetails(ctx, req.(*JobRunDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Jobs_ServiceDesc is the grpc.ServiceDesc for Jobs service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Jobs_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.Jobs",
	HandlerType: (*JobsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJobStatus",
			Handler:    _Jobs_GetJobStatus_Handler,
		},
		{
			MethodName: "GetJobStatusUsingExternalJobUri",
			Handler:    _Jobs_GetJobStatusUsingExternalJobUri_Handler,
		},
		{
			MethodName: "GetJobDetails",
			Handler:    _Jobs_GetJobDetails_Handler,
		},
		{
			MethodName: "GetJobErrors",
			Handler:    _Jobs_GetJobErrors_Handler,
		},
		{
			MethodName: "GetJobRunDetails",
			Handler:    _Jobs_GetJobRunDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/job.proto",
}
