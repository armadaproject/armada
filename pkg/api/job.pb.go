// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/job.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobRunState int32

const (
	JobRunState_RUN_STATE_UNKNOWN         JobRunState = 0
	JobRunState_RUN_STATE_LEASED          JobRunState = 1
	JobRunState_RUN_STATE_PENDING         JobRunState = 2
	JobRunState_RUN_STATE_RUNNING         JobRunState = 3
	JobRunState_RUN_STATE_SUCCEEDED       JobRunState = 4
	JobRunState_RUN_STATE_FAILED          JobRunState = 5
	JobRunState_RUN_STATE_PREEMPTED       JobRunState = 6
	JobRunState_RUN_STATE_CANCELLED       JobRunState = 7
	JobRunState_RUN_STATE_LEASE_EXPIRED   JobRunState = 8
	JobRunState_RUNS_STATE_LEASE_RETURNED JobRunState = 9
)

// Enum value maps for JobRunState.
var (
	JobRunState_name = map[int32]string{
		0: "RUN_STATE_UNKNOWN",
		1: "RUN_STATE_LEASED",
		2: "RUN_STATE_PENDING",
		3: "RUN_STATE_RUNNING",
		4: "RUN_STATE_SUCCEEDED",
		5: "RUN_STATE_FAILED",
		6: "RUN_STATE_PREEMPTED",
		7: "RUN_STATE_CANCELLED",
		8: "RUN_STATE_LEASE_EXPIRED",
		9: "RUNS_STATE_LEASE_RETURNED",
	}
	JobRunState_value = map[string]int32{
		"RUN_STATE_UNKNOWN":         0,
		"RUN_STATE_LEASED":          1,
		"RUN_STATE_PENDING":         2,
		"RUN_STATE_RUNNING":         3,
		"RUN_STATE_SUCCEEDED":       4,
		"RUN_STATE_FAILED":          5,
		"RUN_STATE_PREEMPTED":       6,
		"RUN_STATE_CANCELLED":       7,
		"RUN_STATE_LEASE_EXPIRED":   8,
		"RUNS_STATE_LEASE_RETURNED": 9,
	}
)

func (x JobRunState) Enum() *JobRunState {
	p := new(JobRunState)
	*p = x
	return p
}

func (x JobRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_job_proto_enumTypes[0].Descriptor()
}

func (JobRunState) Type() protoreflect.EnumType {
	return &file_api_job_proto_enumTypes[0]
}

func (x JobRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobRunState.Descriptor instead.
func (JobRunState) EnumDescriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{0}
}

type JobRunDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunId      string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	JobId      string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	State      JobRunState            `protobuf:"varint,3,opt,name=state,proto3,enum=api.JobRunState" json:"state,omitempty"`
	Cluster    string                 `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node       string                 `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	LeasedTs   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=leased_ts,json=leasedTs,proto3" json:"leased_ts,omitempty"`
	PendingTs  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=pending_ts,json=pendingTs,proto3" json:"pending_ts,omitempty"`
	StartedTs  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_ts,json=startedTs,proto3" json:"started_ts,omitempty"`
	FinishedTs *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=finished_ts,json=finishedTs,proto3" json:"finished_ts,omitempty"`
}

func (x *JobRunDetails) Reset() {
	*x = JobRunDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunDetails) ProtoMessage() {}

func (x *JobRunDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunDetails.ProtoReflect.Descriptor instead.
func (*JobRunDetails) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{0}
}

func (x *JobRunDetails) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *JobRunDetails) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobRunDetails) GetState() JobRunState {
	if x != nil {
		return x.State
	}
	return JobRunState_RUN_STATE_UNKNOWN
}

func (x *JobRunDetails) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *JobRunDetails) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *JobRunDetails) GetLeasedTs() *timestamppb.Timestamp {
	if x != nil {
		return x.LeasedTs
	}
	return nil
}

func (x *JobRunDetails) GetPendingTs() *timestamppb.Timestamp {
	if x != nil {
		return x.PendingTs
	}
	return nil
}

func (x *JobRunDetails) GetStartedTs() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTs
	}
	return nil
}

func (x *JobRunDetails) GetFinishedTs() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedTs
	}
	return nil
}

type JobDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId            string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Queue            string                 `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	Jobset           string                 `protobuf:"bytes,3,opt,name=jobset,proto3" json:"jobset,omitempty"`
	Namespace        string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	State            JobState               `protobuf:"varint,5,opt,name=state,proto3,enum=api.JobState" json:"state,omitempty"`
	SubmittedTs      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=submitted_ts,json=submittedTs,proto3" json:"submitted_ts,omitempty"`
	CancelTs         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=cancel_ts,json=cancelTs,proto3" json:"cancel_ts,omitempty"`
	CancelReason     string                 `protobuf:"bytes,8,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	LastTransitionTs *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_transition_ts,json=lastTransitionTs,proto3" json:"last_transition_ts,omitempty"`
	LatestRunId      string                 `protobuf:"bytes,10,opt,name=latest_run_id,json=latestRunId,proto3" json:"latest_run_id,omitempty"`
	JobSpec          *Job                   `protobuf:"bytes,11,opt,name=job_spec,json=jobSpec,proto3" json:"job_spec,omitempty"` // Only filled in if expand_job_spec is true
	JobRuns          []*JobRunDetails       `protobuf:"bytes,12,rep,name=job_runs,json=jobRuns,proto3" json:"job_runs,omitempty"` // Only filled in if expand_job_run is true;
}

func (x *JobDetails) Reset() {
	*x = JobDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetails) ProtoMessage() {}

func (x *JobDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetails.ProtoReflect.Descriptor instead.
func (*JobDetails) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{1}
}

func (x *JobDetails) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobDetails) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *JobDetails) GetJobset() string {
	if x != nil {
		return x.Jobset
	}
	return ""
}

func (x *JobDetails) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *JobDetails) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_QUEUED
}

func (x *JobDetails) GetSubmittedTs() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedTs
	}
	return nil
}

func (x *JobDetails) GetCancelTs() *timestamppb.Timestamp {
	if x != nil {
		return x.CancelTs
	}
	return nil
}

func (x *JobDetails) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *JobDetails) GetLastTransitionTs() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransitionTs
	}
	return nil
}

func (x *JobDetails) GetLatestRunId() string {
	if x != nil {
		return x.LatestRunId
	}
	return ""
}

func (x *JobDetails) GetJobSpec() *Job {
	if x != nil {
		return x.JobSpec
	}
	return nil
}

func (x *JobDetails) GetJobRuns() []*JobRunDetails {
	if x != nil {
		return x.JobRuns
	}
	return nil
}

type JobDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds        []string `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
	ExpandJobSpec bool     `protobuf:"varint,2,opt,name=expand_job_spec,json=expandJobSpec,proto3" json:"expand_job_spec,omitempty"`
	ExpandJobRun  bool     `protobuf:"varint,3,opt,name=expand_job_run,json=expandJobRun,proto3" json:"expand_job_run,omitempty"`
}

func (x *JobDetailsRequest) Reset() {
	*x = JobDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetailsRequest) ProtoMessage() {}

func (x *JobDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetailsRequest.ProtoReflect.Descriptor instead.
func (*JobDetailsRequest) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{2}
}

func (x *JobDetailsRequest) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

func (x *JobDetailsRequest) GetExpandJobSpec() bool {
	if x != nil {
		return x.ExpandJobSpec
	}
	return false
}

func (x *JobDetailsRequest) GetExpandJobRun() bool {
	if x != nil {
		return x.ExpandJobRun
	}
	return false
}

type JobDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobDetails map[string]*JobDetails `protobuf:"bytes,1,rep,name=job_details,json=jobDetails,proto3" json:"job_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JobDetailsResponse) Reset() {
	*x = JobDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetailsResponse) ProtoMessage() {}

func (x *JobDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetailsResponse.ProtoReflect.Descriptor instead.
func (*JobDetailsResponse) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{3}
}

func (x *JobDetailsResponse) GetJobDetails() map[string]*JobDetails {
	if x != nil {
		return x.JobDetails
	}
	return nil
}

type JobRunDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobRunDetails map[string]*JobRunDetails `protobuf:"bytes,1,rep,name=job_run_details,json=jobRunDetails,proto3" json:"job_run_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JobRunDetailsResponse) Reset() {
	*x = JobRunDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunDetailsResponse) ProtoMessage() {}

func (x *JobRunDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunDetailsResponse.ProtoReflect.Descriptor instead.
func (*JobRunDetailsResponse) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{4}
}

func (x *JobRunDetailsResponse) GetJobRunDetails() map[string]*JobRunDetails {
	if x != nil {
		return x.JobRunDetails
	}
	return nil
}

type JobRunDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunIds []string `protobuf:"bytes,1,rep,name=run_ids,json=runIds,proto3" json:"run_ids,omitempty"`
}

func (x *JobRunDetailsRequest) Reset() {
	*x = JobRunDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunDetailsRequest) ProtoMessage() {}

func (x *JobRunDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunDetailsRequest.ProtoReflect.Descriptor instead.
func (*JobRunDetailsRequest) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{5}
}

func (x *JobRunDetailsRequest) GetRunIds() []string {
	if x != nil {
		return x.RunIds
	}
	return nil
}

type JobStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds []string `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *JobStatusRequest) Reset() {
	*x = JobStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusRequest) ProtoMessage() {}

func (x *JobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusRequest.ProtoReflect.Descriptor instead.
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{6}
}

func (x *JobStatusRequest) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

type JobStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobStates map[string]JobState `protobuf:"bytes,1,rep,name=job_states,json=jobStates,proto3" json:"job_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=api.JobState"`
}

func (x *JobStatusResponse) Reset() {
	*x = JobStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusResponse) ProtoMessage() {}

func (x *JobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusResponse.ProtoReflect.Descriptor instead.
func (*JobStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_job_proto_rawDescGZIP(), []int{7}
}

func (x *JobStatusResponse) GetJobStates() map[string]JobState {
	if x != nil {
		return x.JobStates
	}
	return nil
}

var File_api_job_proto protoreflect.FileDescriptor

var file_api_job_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x1a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x02, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x54, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x73, 0x22, 0xf3, 0x03, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x37, 0x0a,
	0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x6a, 0x6f, 0x62,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2d,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x22, 0x7a, 0x0a,
	0x11, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x4a, 0x6f,
	0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a,
	0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x6a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x4e, 0x0a, 0x0f, 0x4a, 0x6f,
	0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x15, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6a, 0x6f,
	0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x54, 0x0a, 0x12, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x2f, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0x2b, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22,
	0xa6, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x4b, 0x0a, 0x0e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x85, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x52, 0x45, 0x45, 0x4d, 0x50, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x08, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x55, 0x4e, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10, 0x09,
	0x32, 0xa5, 0x02, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a,
	0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e,
	0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6d, 0x61, 0x64, 0x61, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x72, 0x6d, 0x61, 0x64, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_job_proto_rawDescOnce sync.Once
	file_api_job_proto_rawDescData = file_api_job_proto_rawDesc
)

func file_api_job_proto_rawDescGZIP() []byte {
	file_api_job_proto_rawDescOnce.Do(func() {
		file_api_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_job_proto_rawDescData)
	})
	return file_api_job_proto_rawDescData
}

var file_api_job_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_job_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_job_proto_goTypes = []interface{}{
	(JobRunState)(0),              // 0: api.JobRunState
	(*JobRunDetails)(nil),         // 1: api.JobRunDetails
	(*JobDetails)(nil),            // 2: api.JobDetails
	(*JobDetailsRequest)(nil),     // 3: api.JobDetailsRequest
	(*JobDetailsResponse)(nil),    // 4: api.JobDetailsResponse
	(*JobRunDetailsResponse)(nil), // 5: api.JobRunDetailsResponse
	(*JobRunDetailsRequest)(nil),  // 6: api.JobRunDetailsRequest
	(*JobStatusRequest)(nil),      // 7: api.JobStatusRequest
	(*JobStatusResponse)(nil),     // 8: api.JobStatusResponse
	nil,                           // 9: api.JobDetailsResponse.JobDetailsEntry
	nil,                           // 10: api.JobRunDetailsResponse.JobRunDetailsEntry
	nil,                           // 11: api.JobStatusResponse.JobStatesEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(JobState)(0),                 // 13: api.JobState
	(*Job)(nil),                   // 14: api.Job
}
var file_api_job_proto_depIdxs = []int32{
	0,  // 0: api.JobRunDetails.state:type_name -> api.JobRunState
	12, // 1: api.JobRunDetails.leased_ts:type_name -> google.protobuf.Timestamp
	12, // 2: api.JobRunDetails.pending_ts:type_name -> google.protobuf.Timestamp
	12, // 3: api.JobRunDetails.started_ts:type_name -> google.protobuf.Timestamp
	12, // 4: api.JobRunDetails.finished_ts:type_name -> google.protobuf.Timestamp
	13, // 5: api.JobDetails.state:type_name -> api.JobState
	12, // 6: api.JobDetails.submitted_ts:type_name -> google.protobuf.Timestamp
	12, // 7: api.JobDetails.cancel_ts:type_name -> google.protobuf.Timestamp
	12, // 8: api.JobDetails.last_transition_ts:type_name -> google.protobuf.Timestamp
	14, // 9: api.JobDetails.job_spec:type_name -> api.Job
	1,  // 10: api.JobDetails.job_runs:type_name -> api.JobRunDetails
	9,  // 11: api.JobDetailsResponse.job_details:type_name -> api.JobDetailsResponse.JobDetailsEntry
	10, // 12: api.JobRunDetailsResponse.job_run_details:type_name -> api.JobRunDetailsResponse.JobRunDetailsEntry
	11, // 13: api.JobStatusResponse.job_states:type_name -> api.JobStatusResponse.JobStatesEntry
	2,  // 14: api.JobDetailsResponse.JobDetailsEntry.value:type_name -> api.JobDetails
	1,  // 15: api.JobRunDetailsResponse.JobRunDetailsEntry.value:type_name -> api.JobRunDetails
	13, // 16: api.JobStatusResponse.JobStatesEntry.value:type_name -> api.JobState
	7,  // 17: api.Jobs.GetJobStatus:input_type -> api.JobStatusRequest
	3,  // 18: api.Jobs.GetJobDetails:input_type -> api.JobDetailsRequest
	6,  // 19: api.Jobs.GetJobRunDetails:input_type -> api.JobRunDetailsRequest
	8,  // 20: api.Jobs.GetJobStatus:output_type -> api.JobStatusResponse
	4,  // 21: api.Jobs.GetJobDetails:output_type -> api.JobDetailsResponse
	5,  // 22: api.Jobs.GetJobRunDetails:output_type -> api.JobRunDetailsResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_job_proto_init() }
func file_api_job_proto_init() {
	if File_api_job_proto != nil {
		return
	}
	file_api_submit_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_job_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_job_proto_goTypes,
		DependencyIndexes: file_api_job_proto_depIdxs,
		EnumInfos:         file_api_job_proto_enumTypes,
		MessageInfos:      file_api_job_proto_msgTypes,
	}.Build()
	File_api_job_proto = out.File
	file_api_job_proto_rawDesc = nil
	file_api_job_proto_goTypes = nil
	file_api_job_proto_depIdxs = nil
}
