// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/api/queryapi.proto

package api

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JobStatus int32

const (
	JobStatus_UNKNOWN   JobStatus = 0
	JobStatus_SUBMITTED JobStatus = 1
	JobStatus_QUEUED    JobStatus = 2
	JobStatus_LEASED    JobStatus = 3
	JobStatus_PENDING   JobStatus = 4
	JobStatus_RUNNING   JobStatus = 5
	JobStatus_SUCCEEDED JobStatus = 6
	JobStatus_FAILED    JobStatus = 7
	JobStatus_PREEMPTED JobStatus = 8
	JobStatus_CANCELLED JobStatus = 9
)

var JobStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUBMITTED",
	2: "QUEUED",
	3: "LEASED",
	4: "PENDING",
	5: "RUNNING",
	6: "SUCCEEDED",
	7: "FAILED",
	8: "PREEMPTED",
	9: "CANCELLED",
}

var JobStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"SUBMITTED": 1,
	"QUEUED":    2,
	"LEASED":    3,
	"PENDING":   4,
	"RUNNING":   5,
	"SUCCEEDED": 6,
	"FAILED":    7,
	"PREEMPTED": 8,
	"CANCELLED": 9,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}

func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4ef0e77b55b97342, []int{0}
}

type JobStatusRequest struct {
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"jobId,omitempty"`
}

func (m *JobStatusRequest) Reset()      { *m = JobStatusRequest{} }
func (*JobStatusRequest) ProtoMessage() {}
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ef0e77b55b97342, []int{0}
}
func (m *JobStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JobStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JobStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JobStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusRequest.Merge(m, src)
}
func (m *JobStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *JobStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusRequest proto.InternalMessageInfo

func (m *JobStatusRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type JobStatusResponse struct {
	JobId     string    `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"jobId,omitempty"`
	JobStatus JobStatus `protobuf:"varint,2,opt,name=job_status,json=jobStatus,proto3,enum=queryapi.JobStatus" json:"jobStatus,omitempty"`
}

func (m *JobStatusResponse) Reset()      { *m = JobStatusResponse{} }
func (*JobStatusResponse) ProtoMessage() {}
func (*JobStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ef0e77b55b97342, []int{1}
}
func (m *JobStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JobStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JobStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JobStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusResponse.Merge(m, src)
}
func (m *JobStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *JobStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusResponse proto.InternalMessageInfo

func (m *JobStatusResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *JobStatusResponse) GetJobStatus() JobStatus {
	if m != nil {
		return m.JobStatus
	}
	return JobStatus_UNKNOWN
}

func init() {
	proto.RegisterEnum("queryapi.JobStatus", JobStatus_name, JobStatus_value)
	proto.RegisterType((*JobStatusRequest)(nil), "queryapi.JobStatusRequest")
	proto.RegisterType((*JobStatusResponse)(nil), "queryapi.JobStatusResponse")
}

func init() { proto.RegisterFile("pkg/api/queryapi.proto", fileDescriptor_4ef0e77b55b97342) }

var fileDescriptor_4ef0e77b55b97342 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x3d, 0x6f, 0xd3, 0x40,
	0x18, 0xc7, 0x7d, 0x85, 0xba, 0xf1, 0xf1, 0x76, 0x38, 0x12, 0x54, 0x41, 0xba, 0x56, 0x5d, 0xa8,
	0x2a, 0x88, 0xa5, 0xb2, 0x23, 0xf9, 0xe5, 0x88, 0x4c, 0xd3, 0x23, 0xb5, 0x6b, 0x21, 0xb1, 0x20,
	0xbb, 0x31, 0xc6, 0x46, 0xe6, 0xae, 0xf6, 0x79, 0xc8, 0xc6, 0x07, 0x60, 0x40, 0x7c, 0x2a, 0xc6,
	0x8c, 0x99, 0x22, 0x70, 0xb6, 0x7c, 0x0a, 0x74, 0x4e, 0x62, 0x32, 0x64, 0x61, 0xbb, 0xdf, 0x3d,
	0xcf, 0xff, 0x27, 0x3f, 0xbe, 0x07, 0x3e, 0xe1, 0x5f, 0x12, 0x23, 0xe4, 0xa9, 0x71, 0x5b, 0xc5,
	0xc5, 0x24, 0xe4, 0x69, 0x9f, 0x17, 0x4c, 0x30, 0xbd, 0xb3, 0xe1, 0xde, 0xcb, 0x24, 0x15, 0x9f,
	0xab, 0xa8, 0x7f, 0xc3, 0x72, 0x23, 0x61, 0x09, 0x33, 0x9a, 0x86, 0xa8, 0xfa, 0xd4, 0x50, 0x03,
	0xcd, 0x69, 0x15, 0x3c, 0x79, 0x0d, 0xd1, 0x5b, 0x16, 0xf9, 0x22, 0x14, 0x55, 0xe9, 0xc5, 0xb7,
	0x55, 0x5c, 0x0a, 0xfd, 0x0c, 0xaa, 0x19, 0x8b, 0x3e, 0xa6, 0xe3, 0x43, 0x70, 0x0c, 0x4e, 0x35,
	0xab, 0xbb, 0x9c, 0x1f, 0x3d, 0xca, 0x58, 0xe4, 0x8e, 0x5f, 0xb0, 0x3c, 0x15, 0x71, 0xce, 0xc5,
	0xc4, 0xdb, 0x6f, 0x2e, 0x4e, 0xbe, 0x03, 0xf8, 0x78, 0x4b, 0x50, 0x72, 0xf6, 0xb5, 0x8c, 0xff,
	0xc7, 0xa0, 0x5f, 0x40, 0x28, 0x7b, 0xcb, 0xc6, 0x70, 0xb8, 0x77, 0x0c, 0x4e, 0x1f, 0x9e, 0x77,
	0xfb, 0xed, 0x7c, 0xad, 0xdc, 0x7a, 0xba, 0x9c, 0x1f, 0x75, 0xb3, 0x0d, 0x6e, 0x89, 0xb4, 0xf6,
	0xf2, 0xec, 0x27, 0x80, 0x5a, 0x9b, 0xd0, 0xef, 0xc1, 0x83, 0x80, 0x5e, 0xd0, 0x77, 0xef, 0x29,
	0x52, 0xf4, 0x07, 0x50, 0xf3, 0x03, 0xeb, 0xd2, 0xbd, 0xbe, 0x26, 0x0e, 0x02, 0x3a, 0x84, 0xea,
	0x55, 0x40, 0x02, 0xe2, 0xa0, 0x3d, 0x79, 0x1e, 0x12, 0xd3, 0x27, 0x0e, 0xba, 0x23, 0x33, 0x23,
	0x42, 0x1d, 0x97, 0x0e, 0xd0, 0x5d, 0x09, 0x5e, 0x40, 0xa9, 0x84, 0xfd, 0x95, 0xc0, 0xb6, 0x09,
	0x71, 0x88, 0x83, 0x54, 0x19, 0x7a, 0x63, 0xba, 0x43, 0xe2, 0xa0, 0x03, 0x59, 0x1a, 0x79, 0x84,
	0x5c, 0x8e, 0xa4, 0xbb, 0x23, 0xd1, 0x36, 0xa9, 0x4d, 0x86, 0xb2, 0xaa, 0x9d, 0xfb, 0xb0, 0x73,
	0x25, 0xc7, 0x31, 0x79, 0xaa, 0x0f, 0xe0, 0xfd, 0x41, 0x2c, 0xfe, 0x7d, 0x62, 0x6f, 0xc7, 0xa4,
	0xeb, 0x77, 0xe8, 0x3d, 0xdb, 0x59, 0x5b, 0xfd, 0x62, 0xcb, 0x9d, 0xfd, 0xc1, 0xca, 0xb7, 0x1a,
	0x83, 0x5f, 0x35, 0x06, 0xd3, 0x1a, 0x83, 0xdf, 0x35, 0x06, 0x3f, 0x16, 0x58, 0x99, 0x2e, 0xb0,
	0x32, 0x5b, 0x60, 0xe5, 0xc3, 0xf3, 0xad, 0x4d, 0x08, 0x8b, 0x3c, 0x1c, 0x87, 0xbc, 0x60, 0x59,
	0x7c, 0x23, 0xd6, 0x64, 0xac, 0x77, 0x29, 0x52, 0x9b, 0x55, 0x78, 0xf5, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x14, 0xa6, 0x2d, 0x24, 0x5d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryApiClient is the client API for QueryApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryApiClient interface {
	GetJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatusResponse, error)
}

type queryApiClient struct {
	cc *grpc.ClientConn
}

func NewQueryApiClient(cc *grpc.ClientConn) QueryApiClient {
	return &queryApiClient{cc}
}

func (c *queryApiClient) GetJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatusResponse, error) {
	out := new(JobStatusResponse)
	err := c.cc.Invoke(ctx, "/queryapi.QueryApi/GetJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryApiServer is the server API for QueryApi service.
type QueryApiServer interface {
	GetJobStatus(context.Context, *JobStatusRequest) (*JobStatusResponse, error)
}

// UnimplementedQueryApiServer can be embedded to have forward compatible implementations.
type UnimplementedQueryApiServer struct {
}

func (*UnimplementedQueryApiServer) GetJobStatus(ctx context.Context, req *JobStatusRequest) (*JobStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobStatus not implemented")
}

func RegisterQueryApiServer(s *grpc.Server, srv QueryApiServer) {
	s.RegisterService(&_QueryApi_serviceDesc, srv)
}

func _QueryApi_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryApiServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queryapi.QueryApi/GetJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryApiServer).GetJobStatus(ctx, req.(*JobStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "queryapi.QueryApi",
	HandlerType: (*QueryApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJobStatus",
			Handler:    _QueryApi_GetJobStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/queryapi.proto",
}

func (m *JobStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JobStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JobStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintQueryapi(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *JobStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JobStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JobStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.JobStatus != 0 {
		i = encodeVarintQueryapi(dAtA, i, uint64(m.JobStatus))
		i--
		dAtA[i] = 0x10
	}
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintQueryapi(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JobStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovQueryapi(uint64(l))
	}
	return n
}

func (m *JobStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovQueryapi(uint64(l))
	}
	if m.JobStatus != 0 {
		n += 1 + sovQueryapi(uint64(m.JobStatus))
	}
	return n
}

func sovQueryapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryapi(x uint64) (n int) {
	return sovQueryapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *JobStatusRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&JobStatusRequest{`,
		`JobId:` + fmt.Sprintf("%v", this.JobId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *JobStatusResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&JobStatusResponse{`,
		`JobId:` + fmt.Sprintf("%v", this.JobId) + `,`,
		`JobStatus:` + fmt.Sprintf("%v", this.JobStatus) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringQueryapi(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *JobStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JobStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JobStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JobStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JobStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JobStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobStatus", wireType)
			}
			m.JobStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JobStatus |= JobStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQueryapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryapi = fmt.Errorf("proto: unexpected end of group")
)
