apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "armada.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "armada.labels.all" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "armada.labels.identity" . | nindent 6 }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      name: {{ include "armada.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "armada.labels.all" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ .Values.customServiceAccount | default (include "armada.name" .) }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      containers:
        - name: armada
          imagePullPolicy: IfNotPresent
          image: {{ .Values.image.repository }}:{{ required "A value is required for .Values.image.tag" .Values.image.tag }}
          args:
            - --config
            - /config/application_config.yaml
          {{- if or (include "armada.gomemlimit" .) .Values.env}}
          env:
            {{- with include "armada.gomemlimit" . }}
            - name: GOMEMLIMIT
              value: {{ quote . }}
            {{- end }}
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 -}}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort:  {{ .Values.applicationConfig.grpcPort }}
              protocol: TCP
              name: grpc
            - containerPort: 9000
              protocol: TCP
              name: metrics
            - containerPort: {{ .Values.applicationConfig.httpPort }}
              protocol: TCP
              name: rest
            {{- if and .Values.applicationConfig.profiling .Values.applicationConfig.profiling.port }}
            - containerPort: {{ .Values.applicationConfig.profiling.port }}
              protocol: TCP
              name: pprof
            {{- end }}
          volumeMounts:
            - name: user-config
              mountPath: /config/application_config.yaml
              subPath: {{ include "armada.config.filename" . }}
              readOnly: true
            {{- if .Values.applicationConfig.pulsar.authenticationEnabled }}
            - name: pulsar-token
              mountPath: "/pulsar/tokens"
              readOnly: true
            {{- end }}
            {{- if .Values.applicationConfig.pulsar.tlsEnabled }}
            - name: pulsar-ca
              mountPath: "/pulsar/ca"
              readOnly: true
            {{- end }}
            {{- if .Values.applicationConfig.grpc.tls.enabled }}
            - name: tls-certs
              mountPath: /certs
              readOnly: true
            {{- end }}
            {{- if .Values.additionalVolumeMounts }}
            {{- toYaml .Values.additionalVolumeMounts | nindent 12 -}}
            {{- end }}
          {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: rest
              scheme: {{ if .Values.applicationConfig.grpc.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /health
              port: rest
              scheme: {{ if .Values.applicationConfig.grpc.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ include "armada.name" . }}
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: user-config
          secret:
            secretName: {{ include "armada.config.name" . }}
        {{- if .Values.applicationConfig.pulsar.authenticationEnabled }}
        - name: pulsar-token
          secret:
            secretName: {{ .Values.applicationConfig.pulsar.authenticationSecret | quote }}
            items:
              - key: TOKEN
                path: pulsar-token
        {{- end }}
        {{- if .Values.applicationConfig.pulsar.tlsEnabled }}
        - name: pulsar-ca
          secret:
            secretName: {{ .Values.applicationConfig.pulsar.cacert | quote }}
            items:
              - key: ca.crt
                path: ca.crt
        {{- end }}
        {{- if .Values.applicationConfig.grpc.tls.enabled }}
        - name: tls-certs
          secret:
            secretName: armada-service-tls
        {{- end }}
        {{- if .Values.additionalVolumes }}
        {{- toYaml .Values.additionalVolumes | nindent 8 }}
        {{- end }}
