---
# Source: armada-scheduler/templates/scheduler-ingester-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: armada-scheduler-ingester
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler-ingester
---
# Source: armada-scheduler/templates/scheduler-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: armada-scheduler
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
---
# Source: armada-scheduler/templates/scheduler-ingester-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: armada-scheduler-ingester-config
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler-ingester
type: Opaque
data:
  armada-scheduler-config-ingester.yaml: |
    bWV0cmljczoKICBwb3J0OiA5MDAzCnB1bHNhcjoge30=
---
# Source: armada-scheduler/templates/scheduler-pruner-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: armada-scheduler-pruner-config
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler-db-pruner
type: Opaque
data:
  armada-scheduler-config-pruner.yaml: |
---
# Source: armada-scheduler/templates/scheduler-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: armada-scheduler-config
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
type: Opaque
data:
  armada-scheduler-config.yaml: |
    Z3JwYzoKICBwb3J0OiA1MDA1MQogIHRsczoKICAgIGNlcnRQYXRoOiAvY2VydHMvdGxzLmNydAogICAgZW5hYmxlZDogdHJ1ZQogICAga2V5UGF0aDogL2NlcnRzL3Rscy5rZXkKaHR0cDoKICBwb3J0OiA4MDgwCm1ldHJpY3M6CiAgcG9ydDogOTAwMQpwdWxzYXI6IHt9
---
# Source: armada-scheduler/templates/scheduler-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: armada-scheduler
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
---
# Source: armada-scheduler/templates/scheduler-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: armada-scheduler
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: armada-scheduler
subjects:
  - kind: ServiceAccount
    name: armada-scheduler
    namespace: armada
---
# Source: armada-scheduler/templates/scheduler-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: armada-scheduler
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
spec:
  selector:
    app: armada-scheduler
  ports:
    - name: grpc
      protocol: TCP
      port: 50051
    - name: metrics
      protocol: TCP
      port: 9001
---
# Source: armada-scheduler/templates/scheduler-ingester-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: armada-scheduler-ingester
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler-ingester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: armada-scheduler-ingester
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: armada-scheduler-ingester
      annotations:
        checksum/config: a38efc2582ec3d8dcade0428a69957256c229eb4cc61d86e038598749cadd216
      labels:
        chart: armada-scheduler-0.0.0-latest
        release: release-name
        app: armada-scheduler-ingester
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: armada-scheduler-ingester
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
      containers:
        - name: armada-scheduler-ingester
          imagePullPolicy: IfNotPresent
          image: gresearchdev/armada-scheduler-ingester:0.0.0-latest
          args:
            - --config
            - /config/application_config.yaml
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: user-config
              mountPath: /config/application_config.yaml
              subPath: armada-scheduler-config-ingester.yaml
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - armada-scheduler-ingester
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: user-config
          secret:
            secretName: armada-scheduler-ingester-config
---
# Source: armada-scheduler/templates/scheduler-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: armada-scheduler
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: armada-scheduler
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  serviceName: armada-scheduler
  template:
    metadata:
      name: armada-scheduler
      annotations:
        checksum/config: 6c401a4d2a53e4724671a70fe2705b150da9c455370097222d72bf9bd60f5023
      labels:
        chart: armada-scheduler-0.0.0-latest
        release: release-name
        app: armada-scheduler
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: armada-scheduler
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
      containers:
        - name: armada-scheduler-scheduler
          imagePullPolicy: IfNotPresent
          image: gresearchdev/armada-scheduler:0.0.0-latest
          args:
            - run
            - --config
            - /config/application_config.yaml
          env:
            - name: ARMADA_LEADER_PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ARMADA_LEADER_LEASELOCKNAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ARMADA_LEADER_LEADERCONNECTION_ARMADAURL
              value: "<name>.armada-scheduler.armada.svc.cluster.local"
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
            - containerPort:  50051
              protocol: TCP
              name: grpc
            - containerPort: 9001
              protocol: TCP
              name: metrics
          volumeMounts:
            - name: user-config
              mountPath: /config/application_config.yaml
              subPath: armada-scheduler-config.yaml
              readOnly: true
            - name: tls-certs
              mountPath: "/certs"
              readOnly: true
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            failureThreshold: 2
          securityContext:
            allowPrivilegeEscalation: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - armada-scheduler
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: tls-certs
          secret:
            secretName: armada-scheduler-service-tls
        - name: user-config
          secret:
            secretName: armada-scheduler-config
---
# Source: armada-scheduler/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: armada-scheduler-db-pruner
  namespace: armada
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler-db-pruner
spec:
  schedule: "@hourly"
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      name: armada-scheduler-db-pruner
      labels:
        chart: armada-scheduler-0.0.0-latest
        release: release-name
        app: armada-scheduler-db-pruner
    spec:
      backoffLimit: 6
      template:
        metadata:
          name: armada-scheduler-db-pruner
          labels:
            chart: armada-scheduler-0.0.0-latest
            release: release-name
            app: armada-scheduler-db-pruner
        spec:
          restartPolicy: Never
          serviceAccountName: armada-scheduler
          securityContext:
            runAsUser: 1000
            runAsGroup: 2000
          containers:
            - name: armada-scheduler-db-pruner
              imagePullPolicy: IfNotPresent
              image: gresearchdev/armada-scheduler:0.0.0-latest
              args:
                - pruneDatabase
                - --config
                - /config/application_config.yaml
                - --timeout
                - "5m"
                - --batchsize
                - "10000"
                - --expireAfter
                - "2h"
              resources:
                limits:
                  cpu: 300m
                  memory: 1Gi
                requests:
                  cpu: 200m
                  memory: 512Mi
              volumeMounts:
                - name: user-config
                  mountPath: /config/application_config.yaml
                  subPath: armada-scheduler-config-pruner.yaml
                  readOnly: true
              securityContext:
                allowPrivilegeEscalation: false
          volumes:
            - name: user-config
              secret:
                secretName: armada-scheduler-pruner-config
---
# Source: armada-scheduler/templates/scheduler-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: armada-scheduler
  namespace: armada
  annotations:
    kubernetes.io/ingress.class: test
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    certmanager.k8s.io/cluster-issuer: test
    cert-manager.io/cluster-issuer: test
  labels:
    chart: armada-scheduler-0.0.0-latest
    release: release-name
    app: armada-scheduler
spec:
  rules:
  - host: test
    http:
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: armada-scheduler
              port:
                number: 50051
  
  tls:
    - hosts:
        - test
      secretName: armada-scheduler-service-tls
