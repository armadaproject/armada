apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "executor.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "executor.labels.all" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "executor.labels.identity" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "executor.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "executor.labels.all" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ .Values.customServiceAccount | default (include "executor.name" .) }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      containers:
        - name: executor
          imagePullPolicy: IfNotPresent
          image: {{ .Values.image.repository }}:{{ required "A value is required for .Values.image.tag" .Values.image.tag }}
          args:
            - --config
            - /config/application_config.yaml
{{- if .Values.env }}
          env:
{{ toYaml .Values.env | indent 12 }}
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 9001
              protocol: TCP
              name: metrics
            {{- if and .Values.applicationConfig.profiling .Values.applicationConfig.profiling.port }}
            - containerPort: {{ .Values.applicationConfig.profiling.port }}
              protocol: TCP
              name: pprof
            {{- end }}
          volumeMounts:
            - name: user-config
              mountPath: /config/application_config.yaml
              subPath: {{ include "executor.config.filename" . }}
              readOnly: true
            {{- if .Values.additionalVolumeMounts }}
            {{- toYaml .Values.additionalVolumeMounts | nindent 12 -}}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
          {{- if .Values.healthcheck.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: 5
            timeoutSeconds: 5
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
        - name: user-config
          secret:
            secretName: {{ include "executor.config.name" . }}
        {{- if .Values.additionalVolumes }}
        {{- toYaml .Values.additionalVolumes | nindent 8 }}
        {{- end }}
