replicaCount: 1

image:
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

env:
  - name: GODEBUG
    value: "gctrace=1"

ingress:
  enabled: false

postgresql:
  host: postgresql.data.svc.cluster.local
  port: 5432
  database: armada
  username: postgres
  password: psw

redis:
  host: redis-ha.data.svc.cluster.local
  port: 6379

pulsar:
  host: pulsar-broker.data.svc.cluster.local
  port: 6650
  httpPort: 8080

applicationConfig:
  auth:
    anonymousAuth: true
    permissionGroupMapping:
      submit_any_jobs: ["everyone"]
      create_queue: ["everyone"]
      delete_queue: ["everyone"]
      cancel_any_jobs: ["everyone"]
      reprioritize_any_jobs: ["everyone"]
      watch_all_events: ["everyone"]
      execute_jobs: ["everyone"]
  schedulerApiConnection:
    armadaUrl: "armada-scheduler.armada.svc.cluster.local:50051"
    forceNoTls: true
  corsAllowedOrigins:
    - "http://localhost:3000"
    - "http://localhost:8089"
    - "http://localhost:10000"
    - "http://localhost:30000"
  eventsApiRedis:
    addrs:
      - redis-ha.data.svc.cluster.local:6379
  postgres:
    connection:
      host: postgresql.data.svc.cluster.local
      port: 5432
      dbname: lookout
      user: postgres
      password: psw
      sslmode: disable
  queryapi:
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: lookout
        sslmode: disable
  pulsar:
    URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
  redis:
    addrs:
      - redis-ha.data.svc.cluster.local:6379

logging:
  level: debug

service:
  type: ClusterIP
  grpcPort: 50051
  httpPort: 8081
  metricsPort: 9000
