# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: k8s.io/api/networking/v1/generated.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from k8s.io.api.core.v1 import generated_pb2 as k8s_dot_io_dot_api_dot_core_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.apis.meta.v1 import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_apis_dot_meta_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime.schema import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_schema_dot_generated__pb2
from k8s.io.apimachinery.pkg.util.intstr import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_util_dot_intstr_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(k8s.io/api/networking/v1/generated.proto\x12\x18k8s.io.api.networking.v1\x1a\"k8s.io/api/core/v1/generated.proto\x1a\x34k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\x1a/k8s.io/apimachinery/pkg/runtime/generated.proto\x1a\x36k8s.io/apimachinery/pkg/runtime/schema/generated.proto\x1a\x33k8s.io/apimachinery/pkg/util/intstr/generated.proto\"l\n\x0fHTTPIngressPath\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08pathType\x18\x03 \x01(\t\x12\x39\n\x07\x62\x61\x63kend\x18\x02 \x01(\x0b\x32(.k8s.io.api.networking.v1.IngressBackend\"P\n\x14HTTPIngressRuleValue\x12\x38\n\x05paths\x18\x01 \x03(\x0b\x32).k8s.io.api.networking.v1.HTTPIngressPath\"\'\n\x07IPBlock\x12\x0c\n\x04\x63idr\x18\x01 \x01(\t\x12\x0e\n\x06\x65xcept\x18\x02 \x03(\t\"\xbb\x01\n\x07Ingress\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x33\n\x04spec\x18\x02 \x01(\x0b\x32%.k8s.io.api.networking.v1.IngressSpec\x12\x37\n\x06status\x18\x03 \x01(\x0b\x32\'.k8s.io.api.networking.v1.IngressStatus\"\x93\x01\n\x0eIngressBackend\x12@\n\x07service\x18\x04 \x01(\x0b\x32/.k8s.io.api.networking.v1.IngressServiceBackend\x12?\n\x08resource\x18\x03 \x01(\x0b\x32-.k8s.io.api.core.v1.TypedLocalObjectReference\"\x8c\x01\n\x0cIngressClass\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x38\n\x04spec\x18\x02 \x01(\x0b\x32*.k8s.io.api.networking.v1.IngressClassSpec\"\x8b\x01\n\x10IngressClassList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x35\n\x05items\x18\x02 \x03(\x0b\x32&.k8s.io.api.networking.v1.IngressClass\"q\n\x1fIngressClassParametersReference\x12\x10\n\x08\x61PIGroup\x18\x01 \x01(\t\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\r\n\x05scope\x18\x04 \x01(\t\x12\x11\n\tnamespace\x18\x05 \x01(\t\"u\n\x10IngressClassSpec\x12\x12\n\ncontroller\x18\x01 \x01(\t\x12M\n\nparameters\x18\x02 \x01(\x0b\x32\x39.k8s.io.api.networking.v1.IngressClassParametersReference\"\x81\x01\n\x0bIngressList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x30\n\x05items\x18\x02 \x03(\x0b\x32!.k8s.io.api.networking.v1.Ingress\"a\n\x0bIngressRule\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x44\n\x10ingressRuleValue\x18\x02 \x01(\x0b\x32*.k8s.io.api.networking.v1.IngressRuleValue\"P\n\x10IngressRuleValue\x12<\n\x04http\x18\x01 \x01(\x0b\x32..k8s.io.api.networking.v1.HTTPIngressRuleValue\"a\n\x15IngressServiceBackend\x12\x0c\n\x04name\x18\x01 \x01(\t\x12:\n\x04port\x18\x02 \x01(\x0b\x32,.k8s.io.api.networking.v1.ServiceBackendPort\"\xd2\x01\n\x0bIngressSpec\x12\x18\n\x10ingressClassName\x18\x04 \x01(\t\x12@\n\x0e\x64\x65\x66\x61ultBackend\x18\x01 \x01(\x0b\x32(.k8s.io.api.networking.v1.IngressBackend\x12\x31\n\x03tls\x18\x02 \x03(\x0b\x32$.k8s.io.api.networking.v1.IngressTLS\x12\x34\n\x05rules\x18\x03 \x03(\x0b\x32%.k8s.io.api.networking.v1.IngressRule\"M\n\rIngressStatus\x12<\n\x0cloadBalancer\x18\x01 \x01(\x0b\x32&.k8s.io.api.core.v1.LoadBalancerStatus\"/\n\nIngressTLS\x12\r\n\x05hosts\x18\x01 \x03(\t\x12\x12\n\nsecretName\x18\x02 \x01(\t\"\x8e\x01\n\rNetworkPolicy\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x39\n\x04spec\x18\x02 \x01(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicySpec\"\x8e\x01\n\x17NetworkPolicyEgressRule\x12:\n\x05ports\x18\x01 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPort\x12\x37\n\x02to\x18\x02 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPeer\"\x91\x01\n\x18NetworkPolicyIngressRule\x12:\n\x05ports\x18\x01 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPort\x12\x39\n\x04\x66rom\x18\x02 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPeer\"\x8d\x01\n\x11NetworkPolicyList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x36\n\x05items\x18\x02 \x03(\x0b\x32\'.k8s.io.api.networking.v1.NetworkPolicy\"\xe1\x01\n\x11NetworkPolicyPeer\x12H\n\x0bpodSelector\x18\x01 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\x12N\n\x11namespaceSelector\x18\x02 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\x12\x32\n\x07ipBlock\x18\x03 \x01(\x0b\x32!.k8s.io.api.networking.v1.IPBlock\"v\n\x11NetworkPolicyPort\x12\x10\n\x08protocol\x18\x01 \x01(\t\x12>\n\x04port\x18\x02 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.util.intstr.IntOrString\x12\x0f\n\x07\x65ndPort\x18\x03 \x01(\x05\"\xfa\x01\n\x11NetworkPolicySpec\x12H\n\x0bpodSelector\x18\x01 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\x12\x43\n\x07ingress\x18\x02 \x03(\x0b\x32\x32.k8s.io.api.networking.v1.NetworkPolicyIngressRule\x12\x41\n\x06\x65gress\x18\x03 \x03(\x0b\x32\x31.k8s.io.api.networking.v1.NetworkPolicyEgressRule\x12\x13\n\x0bpolicyTypes\x18\x04 \x03(\t\"2\n\x12ServiceBackendPort\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06number\x18\x02 \x01(\x05\x42\x04Z\x02v1')



_HTTPINGRESSPATH = DESCRIPTOR.message_types_by_name['HTTPIngressPath']
_HTTPINGRESSRULEVALUE = DESCRIPTOR.message_types_by_name['HTTPIngressRuleValue']
_IPBLOCK = DESCRIPTOR.message_types_by_name['IPBlock']
_INGRESS = DESCRIPTOR.message_types_by_name['Ingress']
_INGRESSBACKEND = DESCRIPTOR.message_types_by_name['IngressBackend']
_INGRESSCLASS = DESCRIPTOR.message_types_by_name['IngressClass']
_INGRESSCLASSLIST = DESCRIPTOR.message_types_by_name['IngressClassList']
_INGRESSCLASSPARAMETERSREFERENCE = DESCRIPTOR.message_types_by_name['IngressClassParametersReference']
_INGRESSCLASSSPEC = DESCRIPTOR.message_types_by_name['IngressClassSpec']
_INGRESSLIST = DESCRIPTOR.message_types_by_name['IngressList']
_INGRESSRULE = DESCRIPTOR.message_types_by_name['IngressRule']
_INGRESSRULEVALUE = DESCRIPTOR.message_types_by_name['IngressRuleValue']
_INGRESSSERVICEBACKEND = DESCRIPTOR.message_types_by_name['IngressServiceBackend']
_INGRESSSPEC = DESCRIPTOR.message_types_by_name['IngressSpec']
_INGRESSSTATUS = DESCRIPTOR.message_types_by_name['IngressStatus']
_INGRESSTLS = DESCRIPTOR.message_types_by_name['IngressTLS']
_NETWORKPOLICY = DESCRIPTOR.message_types_by_name['NetworkPolicy']
_NETWORKPOLICYEGRESSRULE = DESCRIPTOR.message_types_by_name['NetworkPolicyEgressRule']
_NETWORKPOLICYINGRESSRULE = DESCRIPTOR.message_types_by_name['NetworkPolicyIngressRule']
_NETWORKPOLICYLIST = DESCRIPTOR.message_types_by_name['NetworkPolicyList']
_NETWORKPOLICYPEER = DESCRIPTOR.message_types_by_name['NetworkPolicyPeer']
_NETWORKPOLICYPORT = DESCRIPTOR.message_types_by_name['NetworkPolicyPort']
_NETWORKPOLICYSPEC = DESCRIPTOR.message_types_by_name['NetworkPolicySpec']
_SERVICEBACKENDPORT = DESCRIPTOR.message_types_by_name['ServiceBackendPort']
HTTPIngressPath = _reflection.GeneratedProtocolMessageType('HTTPIngressPath', (_message.Message,), {
  'DESCRIPTOR' : _HTTPINGRESSPATH,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.HTTPIngressPath)
  })
_sym_db.RegisterMessage(HTTPIngressPath)

HTTPIngressRuleValue = _reflection.GeneratedProtocolMessageType('HTTPIngressRuleValue', (_message.Message,), {
  'DESCRIPTOR' : _HTTPINGRESSRULEVALUE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.HTTPIngressRuleValue)
  })
_sym_db.RegisterMessage(HTTPIngressRuleValue)

IPBlock = _reflection.GeneratedProtocolMessageType('IPBlock', (_message.Message,), {
  'DESCRIPTOR' : _IPBLOCK,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IPBlock)
  })
_sym_db.RegisterMessage(IPBlock)

Ingress = _reflection.GeneratedProtocolMessageType('Ingress', (_message.Message,), {
  'DESCRIPTOR' : _INGRESS,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.Ingress)
  })
_sym_db.RegisterMessage(Ingress)

IngressBackend = _reflection.GeneratedProtocolMessageType('IngressBackend', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSBACKEND,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressBackend)
  })
_sym_db.RegisterMessage(IngressBackend)

IngressClass = _reflection.GeneratedProtocolMessageType('IngressClass', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSCLASS,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClass)
  })
_sym_db.RegisterMessage(IngressClass)

IngressClassList = _reflection.GeneratedProtocolMessageType('IngressClassList', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSCLASSLIST,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassList)
  })
_sym_db.RegisterMessage(IngressClassList)

IngressClassParametersReference = _reflection.GeneratedProtocolMessageType('IngressClassParametersReference', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSCLASSPARAMETERSREFERENCE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassParametersReference)
  })
_sym_db.RegisterMessage(IngressClassParametersReference)

IngressClassSpec = _reflection.GeneratedProtocolMessageType('IngressClassSpec', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSCLASSSPEC,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassSpec)
  })
_sym_db.RegisterMessage(IngressClassSpec)

IngressList = _reflection.GeneratedProtocolMessageType('IngressList', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSLIST,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressList)
  })
_sym_db.RegisterMessage(IngressList)

IngressRule = _reflection.GeneratedProtocolMessageType('IngressRule', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSRULE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressRule)
  })
_sym_db.RegisterMessage(IngressRule)

IngressRuleValue = _reflection.GeneratedProtocolMessageType('IngressRuleValue', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSRULEVALUE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressRuleValue)
  })
_sym_db.RegisterMessage(IngressRuleValue)

IngressServiceBackend = _reflection.GeneratedProtocolMessageType('IngressServiceBackend', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSSERVICEBACKEND,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressServiceBackend)
  })
_sym_db.RegisterMessage(IngressServiceBackend)

IngressSpec = _reflection.GeneratedProtocolMessageType('IngressSpec', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSSPEC,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressSpec)
  })
_sym_db.RegisterMessage(IngressSpec)

IngressStatus = _reflection.GeneratedProtocolMessageType('IngressStatus', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSSTATUS,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressStatus)
  })
_sym_db.RegisterMessage(IngressStatus)

IngressTLS = _reflection.GeneratedProtocolMessageType('IngressTLS', (_message.Message,), {
  'DESCRIPTOR' : _INGRESSTLS,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressTLS)
  })
_sym_db.RegisterMessage(IngressTLS)

NetworkPolicy = _reflection.GeneratedProtocolMessageType('NetworkPolicy', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICY,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicy)
  })
_sym_db.RegisterMessage(NetworkPolicy)

NetworkPolicyEgressRule = _reflection.GeneratedProtocolMessageType('NetworkPolicyEgressRule', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYEGRESSRULE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
  })
_sym_db.RegisterMessage(NetworkPolicyEgressRule)

NetworkPolicyIngressRule = _reflection.GeneratedProtocolMessageType('NetworkPolicyIngressRule', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYINGRESSRULE,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
  })
_sym_db.RegisterMessage(NetworkPolicyIngressRule)

NetworkPolicyList = _reflection.GeneratedProtocolMessageType('NetworkPolicyList', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYLIST,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyList)
  })
_sym_db.RegisterMessage(NetworkPolicyList)

NetworkPolicyPeer = _reflection.GeneratedProtocolMessageType('NetworkPolicyPeer', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYPEER,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyPeer)
  })
_sym_db.RegisterMessage(NetworkPolicyPeer)

NetworkPolicyPort = _reflection.GeneratedProtocolMessageType('NetworkPolicyPort', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYPORT,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyPort)
  })
_sym_db.RegisterMessage(NetworkPolicyPort)

NetworkPolicySpec = _reflection.GeneratedProtocolMessageType('NetworkPolicySpec', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKPOLICYSPEC,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicySpec)
  })
_sym_db.RegisterMessage(NetworkPolicySpec)

ServiceBackendPort = _reflection.GeneratedProtocolMessageType('ServiceBackendPort', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEBACKENDPORT,
  '__module__' : 'k8s.io.api.networking.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.ServiceBackendPort)
  })
_sym_db.RegisterMessage(ServiceBackendPort)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\002v1'
  _HTTPINGRESSPATH._serialized_start=318
  _HTTPINGRESSPATH._serialized_end=426
  _HTTPINGRESSRULEVALUE._serialized_start=428
  _HTTPINGRESSRULEVALUE._serialized_end=508
  _IPBLOCK._serialized_start=510
  _IPBLOCK._serialized_end=549
  _INGRESS._serialized_start=552
  _INGRESS._serialized_end=739
  _INGRESSBACKEND._serialized_start=742
  _INGRESSBACKEND._serialized_end=889
  _INGRESSCLASS._serialized_start=892
  _INGRESSCLASS._serialized_end=1032
  _INGRESSCLASSLIST._serialized_start=1035
  _INGRESSCLASSLIST._serialized_end=1174
  _INGRESSCLASSPARAMETERSREFERENCE._serialized_start=1176
  _INGRESSCLASSPARAMETERSREFERENCE._serialized_end=1289
  _INGRESSCLASSSPEC._serialized_start=1291
  _INGRESSCLASSSPEC._serialized_end=1408
  _INGRESSLIST._serialized_start=1411
  _INGRESSLIST._serialized_end=1540
  _INGRESSRULE._serialized_start=1542
  _INGRESSRULE._serialized_end=1639
  _INGRESSRULEVALUE._serialized_start=1641
  _INGRESSRULEVALUE._serialized_end=1721
  _INGRESSSERVICEBACKEND._serialized_start=1723
  _INGRESSSERVICEBACKEND._serialized_end=1820
  _INGRESSSPEC._serialized_start=1823
  _INGRESSSPEC._serialized_end=2033
  _INGRESSSTATUS._serialized_start=2035
  _INGRESSSTATUS._serialized_end=2112
  _INGRESSTLS._serialized_start=2114
  _INGRESSTLS._serialized_end=2161
  _NETWORKPOLICY._serialized_start=2164
  _NETWORKPOLICY._serialized_end=2306
  _NETWORKPOLICYEGRESSRULE._serialized_start=2309
  _NETWORKPOLICYEGRESSRULE._serialized_end=2451
  _NETWORKPOLICYINGRESSRULE._serialized_start=2454
  _NETWORKPOLICYINGRESSRULE._serialized_end=2599
  _NETWORKPOLICYLIST._serialized_start=2602
  _NETWORKPOLICYLIST._serialized_end=2743
  _NETWORKPOLICYPEER._serialized_start=2746
  _NETWORKPOLICYPEER._serialized_end=2971
  _NETWORKPOLICYPORT._serialized_start=2973
  _NETWORKPOLICYPORT._serialized_end=3091
  _NETWORKPOLICYSPEC._serialized_start=3094
  _NETWORKPOLICYSPEC._serialized_end=3344
  _SERVICEBACKENDPORT._serialized_start=3346
  _SERVICEBACKENDPORT._serialized_end=3396
# @@protoc_insertion_point(module_scope)
