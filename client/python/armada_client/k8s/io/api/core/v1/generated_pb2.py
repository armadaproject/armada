# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: k8s.io/api/core/v1/generated.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from k8s.io.apimachinery.pkg.api.resource import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_api_dot_resource_dot_generated__pb2
from k8s.io.apimachinery.pkg.apis.meta.v1 import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_apis_dot_meta_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime.schema import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_schema_dot_generated__pb2
from k8s.io.apimachinery.pkg.util.intstr import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_util_dot_intstr_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"k8s.io/api/core/v1/generated.proto\x12\x12k8s.io.api.core.v1\x1a\x34k8s.io/apimachinery/pkg/api/resource/generated.proto\x1a\x34k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\x1a/k8s.io/apimachinery/pkg/runtime/generated.proto\x1a\x36k8s.io/apimachinery/pkg/runtime/schema/generated.proto\x1a\x33k8s.io/apimachinery/pkg/util/intstr/generated.proto\"i\n AWSElasticBlockStoreVolumeSource\x12\x10\n\x08volumeID\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x11\n\tpartition\x18\x03 \x01(\x05\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\"\xb6\x01\n\x08\x41\x66\x66inity\x12\x36\n\x0cnodeAffinity\x18\x01 \x01(\x0b\x32 .k8s.io.api.core.v1.NodeAffinity\x12\x34\n\x0bpodAffinity\x18\x02 \x01(\x0b\x32\x1f.k8s.io.api.core.v1.PodAffinity\x12<\n\x0fpodAntiAffinity\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.PodAntiAffinity\"2\n\x0e\x41ttachedVolume\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ndevicePath\x18\x02 \x01(\t\"N\n\tAvoidPods\x12\x41\n\x0fpreferAvoidPods\x18\x01 \x03(\x0b\x32(.k8s.io.api.core.v1.PreferAvoidPodsEntry\"\x7f\n\x15\x41zureDiskVolumeSource\x12\x10\n\x08\x64iskName\x18\x01 \x01(\t\x12\x0f\n\x07\x64iskURI\x18\x02 \x01(\t\x12\x13\n\x0b\x63\x61\x63hingMode\x18\x03 \x01(\t\x12\x0e\n\x06\x66sType\x18\x04 \x01(\t\x12\x10\n\x08readOnly\x18\x05 \x01(\x08\x12\x0c\n\x04kind\x18\x06 \x01(\t\"s\n\x1f\x41zureFilePersistentVolumeSource\x12\x12\n\nsecretName\x18\x01 \x01(\t\x12\x11\n\tshareName\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12\x17\n\x0fsecretNamespace\x18\x04 \x01(\t\"P\n\x15\x41zureFileVolumeSource\x12\x12\n\nsecretName\x18\x01 \x01(\t\x12\x11\n\tshareName\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\"\x82\x01\n\x07\x42inding\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x33\n\x06target\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"\x90\x04\n\x19\x43SIPersistentVolumeSource\x12\x0e\n\x06\x64river\x18\x01 \x01(\t\x12\x14\n\x0cvolumeHandle\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12\x0e\n\x06\x66sType\x18\x04 \x01(\t\x12]\n\x10volumeAttributes\x18\x05 \x03(\x0b\x32\x43.k8s.io.api.core.v1.CSIPersistentVolumeSource.VolumeAttributesEntry\x12G\n\x1a\x63ontrollerPublishSecretRef\x18\x06 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12?\n\x12nodeStageSecretRef\x18\x07 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x41\n\x14nodePublishSecretRef\x18\x08 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x46\n\x19\x63ontrollerExpandSecretRef\x18\t \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x99\x02\n\x0f\x43SIVolumeSource\x12\x0e\n\x06\x64river\x18\x01 \x01(\t\x12\x10\n\x08readOnly\x18\x02 \x01(\x08\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12S\n\x10volumeAttributes\x18\x04 \x03(\x0b\x32\x39.k8s.io.api.core.v1.CSIVolumeSource.VolumeAttributesEntry\x12\x46\n\x14nodePublishSecretRef\x18\x05 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\")\n\x0c\x43\x61pabilities\x12\x0b\n\x03\x61\x64\x64\x18\x01 \x03(\t\x12\x0c\n\x04\x64rop\x18\x02 \x03(\t\"\xaa\x01\n\x1c\x43\x65phFSPersistentVolumeSource\x12\x10\n\x08monitors\x18\x01 \x03(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\x12\n\nsecretFile\x18\x04 \x01(\t\x12\x36\n\tsecretRef\x18\x05 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x10\n\x08readOnly\x18\x06 \x01(\x08\"\xa5\x01\n\x12\x43\x65phFSVolumeSource\x12\x10\n\x08monitors\x18\x01 \x03(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\x12\n\nsecretFile\x18\x04 \x01(\t\x12;\n\tsecretRef\x18\x05 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08readOnly\x18\x06 \x01(\x08\"\x8a\x01\n\x1c\x43inderPersistentVolumeSource\x12\x10\n\x08volumeID\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12\x36\n\tsecretRef\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\"\x85\x01\n\x12\x43inderVolumeSource\x12\x10\n\x08volumeID\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12;\n\tsecretRef\x18\x04 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\"(\n\x0e\x43lientIPConfig\x12\x16\n\x0etimeoutSeconds\x18\x01 \x01(\x05\"R\n\x12\x43omponentCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\r\n\x05\x65rror\x18\x04 \x01(\t\"\x91\x01\n\x0f\x43omponentStatus\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12:\n\nconditions\x18\x02 \x03(\x0b\x32&.k8s.io.api.core.v1.ComponentCondition\"\x8b\x01\n\x13\x43omponentStatusList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x32\n\x05items\x18\x02 \x03(\x0b\x32#.k8s.io.api.core.v1.ComponentStatus\"\xbc\x02\n\tConfigMap\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x11\n\timmutable\x18\x04 \x01(\x08\x12\x35\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\'.k8s.io.api.core.v1.ConfigMap.DataEntry\x12\x41\n\nbinaryData\x18\x03 \x03(\x0b\x32-.k8s.io.api.core.v1.ConfigMap.BinaryDataEntry\x1a+\n\tDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x31\n\x0f\x42inaryDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"n\n\x12\x43onfigMapEnvSource\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08optional\x18\x02 \x01(\x08\"}\n\x14\x43onfigMapKeySelector\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x10\n\x08optional\x18\x03 \x01(\x08\"\x7f\n\rConfigMapList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.ConfigMap\"|\n\x19\x43onfigMapNodeConfigSource\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0b\n\x03uid\x18\x03 \x01(\t\x12\x17\n\x0fresourceVersion\x18\x04 \x01(\t\x12\x18\n\x10kubeletConfigKey\x18\x05 \x01(\t\"\x9d\x01\n\x13\x43onfigMapProjection\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.KeyToPath\x12\x10\n\x08optional\x18\x04 \x01(\x08\"\xb4\x01\n\x15\x43onfigMapVolumeSource\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.KeyToPath\x12\x13\n\x0b\x64\x65\x66\x61ultMode\x18\x03 \x01(\x05\x12\x10\n\x08optional\x18\x04 \x01(\x08\"\xa7\x06\n\tContainer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05image\x18\x02 \x01(\t\x12\x0f\n\x07\x63ommand\x18\x03 \x03(\t\x12\x0c\n\x04\x61rgs\x18\x04 \x03(\t\x12\x12\n\nworkingDir\x18\x05 \x01(\t\x12\x30\n\x05ports\x18\x06 \x03(\x0b\x32!.k8s.io.api.core.v1.ContainerPort\x12\x32\n\x07\x65nvFrom\x18\x13 \x03(\x0b\x32!.k8s.io.api.core.v1.EnvFromSource\x12\'\n\x03\x65nv\x18\x07 \x03(\x0b\x32\x1a.k8s.io.api.core.v1.EnvVar\x12;\n\tresources\x18\x08 \x01(\x0b\x32(.k8s.io.api.core.v1.ResourceRequirements\x12\x35\n\x0cvolumeMounts\x18\t \x03(\x0b\x32\x1f.k8s.io.api.core.v1.VolumeMount\x12\x37\n\rvolumeDevices\x18\x15 \x03(\x0b\x32 .k8s.io.api.core.v1.VolumeDevice\x12\x30\n\rlivenessProbe\x18\n \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12\x31\n\x0ereadinessProbe\x18\x0b \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12/\n\x0cstartupProbe\x18\x16 \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12\x30\n\tlifecycle\x18\x0c \x01(\x0b\x32\x1d.k8s.io.api.core.v1.Lifecycle\x12\x1e\n\x16terminationMessagePath\x18\r \x01(\t\x12 \n\x18terminationMessagePolicy\x18\x14 \x01(\t\x12\x17\n\x0fimagePullPolicy\x18\x0e \x01(\t\x12<\n\x0fsecurityContext\x18\x0f \x01(\x0b\x32#.k8s.io.api.core.v1.SecurityContext\x12\r\n\x05stdin\x18\x10 \x01(\x08\x12\x11\n\tstdinOnce\x18\x11 \x01(\x08\x12\x0b\n\x03tty\x18\x12 \x01(\x08\"2\n\x0e\x43ontainerImage\x12\r\n\x05names\x18\x01 \x03(\t\x12\x11\n\tsizeBytes\x18\x02 \x01(\x03\"h\n\rContainerPort\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08hostPort\x18\x02 \x01(\x05\x12\x15\n\rcontainerPort\x18\x03 \x01(\x05\x12\x10\n\x08protocol\x18\x04 \x01(\t\x12\x0e\n\x06hostIP\x18\x05 \x01(\t\"\xca\x01\n\x0e\x43ontainerState\x12:\n\x07waiting\x18\x01 \x01(\x0b\x32).k8s.io.api.core.v1.ContainerStateWaiting\x12:\n\x07running\x18\x02 \x01(\x0b\x32).k8s.io.api.core.v1.ContainerStateRunning\x12@\n\nterminated\x18\x03 \x01(\x0b\x32,.k8s.io.api.core.v1.ContainerStateTerminated\"V\n\x15\x43ontainerStateRunning\x12=\n\tstartedAt\x18\x01 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\"\xf1\x01\n\x18\x43ontainerStateTerminated\x12\x10\n\x08\x65xitCode\x18\x01 \x01(\x05\x12\x0e\n\x06signal\x18\x02 \x01(\x05\x12\x0e\n\x06reason\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\x12=\n\tstartedAt\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12>\n\nfinishedAt\x18\x06 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x13\n\x0b\x63ontainerID\x18\x07 \x01(\t\"8\n\x15\x43ontainerStateWaiting\x12\x0e\n\x06reason\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\"\xf4\x01\n\x0f\x43ontainerStatus\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x31\n\x05state\x18\x02 \x01(\x0b\x32\".k8s.io.api.core.v1.ContainerState\x12\x35\n\tlastState\x18\x03 \x01(\x0b\x32\".k8s.io.api.core.v1.ContainerState\x12\r\n\x05ready\x18\x04 \x01(\x08\x12\x14\n\x0crestartCount\x18\x05 \x01(\x05\x12\r\n\x05image\x18\x06 \x01(\t\x12\x0f\n\x07imageID\x18\x07 \x01(\t\x12\x13\n\x0b\x63ontainerID\x18\x08 \x01(\t\x12\x0f\n\x07started\x18\t \x01(\x08\"\x1e\n\x0e\x44\x61\x65monEndpoint\x12\x0c\n\x04Port\x18\x01 \x01(\x05\"Q\n\x15\x44ownwardAPIProjection\x12\x38\n\x05items\x18\x01 \x03(\x0b\x32).k8s.io.api.core.v1.DownwardAPIVolumeFile\"\xb3\x01\n\x15\x44ownwardAPIVolumeFile\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x39\n\x08\x66ieldRef\x18\x02 \x01(\x0b\x32\'.k8s.io.api.core.v1.ObjectFieldSelector\x12\x43\n\x10resourceFieldRef\x18\x03 \x01(\x0b\x32).k8s.io.api.core.v1.ResourceFieldSelector\x12\x0c\n\x04mode\x18\x04 \x01(\x05\"h\n\x17\x44ownwardAPIVolumeSource\x12\x38\n\x05items\x18\x01 \x03(\x0b\x32).k8s.io.api.core.v1.DownwardAPIVolumeFile\x12\x13\n\x0b\x64\x65\x66\x61ultMode\x18\x02 \x01(\x05\"i\n\x14\x45mptyDirVolumeSource\x12\x0e\n\x06medium\x18\x01 \x01(\t\x12\x41\n\tsizeLimit\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity\"y\n\x0f\x45ndpointAddress\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x10\n\x08hostname\x18\x03 \x01(\t\x12\x10\n\x08nodeName\x18\x04 \x01(\t\x12\x36\n\ttargetRef\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"Q\n\x0c\x45ndpointPort\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x10\n\x08protocol\x18\x03 \x01(\t\x12\x13\n\x0b\x61ppProtocol\x18\x04 \x01(\t\"\xb9\x01\n\x0e\x45ndpointSubset\x12\x36\n\taddresses\x18\x01 \x03(\x0b\x32#.k8s.io.api.core.v1.EndpointAddress\x12>\n\x11notReadyAddresses\x18\x02 \x03(\x0b\x32#.k8s.io.api.core.v1.EndpointAddress\x12/\n\x05ports\x18\x03 \x03(\x0b\x32 .k8s.io.api.core.v1.EndpointPort\"\x84\x01\n\tEndpoints\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x33\n\x07subsets\x18\x02 \x03(\x0b\x32\".k8s.io.api.core.v1.EndpointSubset\"\x7f\n\rEndpointsList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.Endpoints\"\x95\x01\n\rEnvFromSource\x12\x0e\n\x06prefix\x18\x01 \x01(\t\x12<\n\x0c\x63onfigMapRef\x18\x02 \x01(\x0b\x32&.k8s.io.api.core.v1.ConfigMapEnvSource\x12\x36\n\tsecretRef\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretEnvSource\"Z\n\x06\x45nvVar\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x33\n\tvalueFrom\x18\x03 \x01(\x0b\x32 .k8s.io.api.core.v1.EnvVarSource\"\x8e\x02\n\x0c\x45nvVarSource\x12\x39\n\x08\x66ieldRef\x18\x01 \x01(\x0b\x32\'.k8s.io.api.core.v1.ObjectFieldSelector\x12\x43\n\x10resourceFieldRef\x18\x02 \x01(\x0b\x32).k8s.io.api.core.v1.ResourceFieldSelector\x12\x41\n\x0f\x63onfigMapKeyRef\x18\x03 \x01(\x0b\x32(.k8s.io.api.core.v1.ConfigMapKeySelector\x12;\n\x0csecretKeyRef\x18\x04 \x01(\x0b\x32%.k8s.io.api.core.v1.SecretKeySelector\"\x81\x01\n\x12\x45phemeralContainer\x12N\n\x18\x65phemeralContainerCommon\x18\x01 \x01(\x0b\x32,.k8s.io.api.core.v1.EphemeralContainerCommon\x12\x1b\n\x13targetContainerName\x18\x02 \x01(\t\"\xb6\x06\n\x18\x45phemeralContainerCommon\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05image\x18\x02 \x01(\t\x12\x0f\n\x07\x63ommand\x18\x03 \x03(\t\x12\x0c\n\x04\x61rgs\x18\x04 \x03(\t\x12\x12\n\nworkingDir\x18\x05 \x01(\t\x12\x30\n\x05ports\x18\x06 \x03(\x0b\x32!.k8s.io.api.core.v1.ContainerPort\x12\x32\n\x07\x65nvFrom\x18\x13 \x03(\x0b\x32!.k8s.io.api.core.v1.EnvFromSource\x12\'\n\x03\x65nv\x18\x07 \x03(\x0b\x32\x1a.k8s.io.api.core.v1.EnvVar\x12;\n\tresources\x18\x08 \x01(\x0b\x32(.k8s.io.api.core.v1.ResourceRequirements\x12\x35\n\x0cvolumeMounts\x18\t \x03(\x0b\x32\x1f.k8s.io.api.core.v1.VolumeMount\x12\x37\n\rvolumeDevices\x18\x15 \x03(\x0b\x32 .k8s.io.api.core.v1.VolumeDevice\x12\x30\n\rlivenessProbe\x18\n \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12\x31\n\x0ereadinessProbe\x18\x0b \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12/\n\x0cstartupProbe\x18\x16 \x01(\x0b\x32\x19.k8s.io.api.core.v1.Probe\x12\x30\n\tlifecycle\x18\x0c \x01(\x0b\x32\x1d.k8s.io.api.core.v1.Lifecycle\x12\x1e\n\x16terminationMessagePath\x18\r \x01(\t\x12 \n\x18terminationMessagePolicy\x18\x14 \x01(\t\x12\x17\n\x0fimagePullPolicy\x18\x0e \x01(\t\x12<\n\x0fsecurityContext\x18\x0f \x01(\x0b\x32#.k8s.io.api.core.v1.SecurityContext\x12\r\n\x05stdin\x18\x10 \x01(\x08\x12\x11\n\tstdinOnce\x18\x11 \x01(\x08\x12\x0b\n\x03tty\x18\x12 \x01(\x08\"g\n\x15\x45phemeralVolumeSource\x12N\n\x13volumeClaimTemplate\x18\x01 \x01(\x0b\x32\x31.k8s.io.api.core.v1.PersistentVolumeClaimTemplate\"\xf0\x04\n\x05\x45vent\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12;\n\x0einvolvedObject\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x0e\n\x06reason\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\x12/\n\x06source\x18\x05 \x01(\x0b\x32\x1f.k8s.io.api.core.v1.EventSource\x12\x42\n\x0e\x66irstTimestamp\x18\x06 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x41\n\rlastTimestamp\x18\x07 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\r\n\x05\x63ount\x18\x08 \x01(\x05\x12\x0c\n\x04type\x18\t \x01(\t\x12\x42\n\teventTime\x18\n \x01(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime\x12/\n\x06series\x18\x0b \x01(\x0b\x32\x1f.k8s.io.api.core.v1.EventSeries\x12\x0e\n\x06\x61\x63tion\x18\x0c \x01(\t\x12\x34\n\x07related\x18\r \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x1a\n\x12reportingComponent\x18\x0e \x01(\t\x12\x19\n\x11reportingInstance\x18\x0f \x01(\t\"w\n\tEventList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12(\n\x05items\x18\x02 \x03(\x0b\x32\x19.k8s.io.api.core.v1.Event\"g\n\x0b\x45ventSeries\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\x12I\n\x10lastObservedTime\x18\x02 \x01(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime\".\n\x0b\x45ventSource\x12\x11\n\tcomponent\x18\x01 \x01(\t\x12\x0c\n\x04host\x18\x02 \x01(\t\"\x1d\n\nExecAction\x12\x0f\n\x07\x63ommand\x18\x01 \x03(\t\"b\n\x0e\x46\x43VolumeSource\x12\x12\n\ntargetWWNs\x18\x01 \x03(\t\x12\x0b\n\x03lun\x18\x02 \x01(\x05\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\x12\r\n\x05wwids\x18\x05 \x03(\t\"\x84\x02\n\x1a\x46lexPersistentVolumeSource\x12\x0e\n\x06\x64river\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x36\n\tsecretRef\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\x12L\n\x07options\x18\x05 \x03(\x0b\x32;.k8s.io.api.core.v1.FlexPersistentVolumeSource.OptionsEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf5\x01\n\x10\x46lexVolumeSource\x12\x0e\n\x06\x64river\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12;\n\tsecretRef\x18\x03 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\x12\x42\n\x07options\x18\x05 \x03(\x0b\x32\x31.k8s.io.api.core.v1.FlexVolumeSource.OptionsEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"?\n\x13\x46lockerVolumeSource\x12\x13\n\x0b\x64\x61tasetName\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x61tasetUUID\x18\x02 \x01(\t\"d\n\x1dGCEPersistentDiskVolumeSource\x12\x0e\n\x06pdName\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x11\n\tpartition\x18\x03 \x01(\x05\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\"N\n\x13GitRepoVolumeSource\x12\x12\n\nrepository\x18\x01 \x01(\t\x12\x10\n\x08revision\x18\x02 \x01(\t\x12\x11\n\tdirectory\x18\x03 \x01(\t\"p\n\x1fGlusterfsPersistentVolumeSource\x12\x11\n\tendpoints\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12\x1a\n\x12\x65ndpointsNamespace\x18\x04 \x01(\t\"J\n\x15GlusterfsVolumeSource\x12\x11\n\tendpoints\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\"\xb0\x01\n\rHTTPGetAction\x12\x0c\n\x04path\x18\x01 \x01(\t\x12>\n\x04port\x18\x02 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.util.intstr.IntOrString\x12\x0c\n\x04host\x18\x03 \x01(\t\x12\x0e\n\x06scheme\x18\x04 \x01(\t\x12\x33\n\x0bhttpHeaders\x18\x05 \x03(\x0b\x32\x1e.k8s.io.api.core.v1.HTTPHeader\")\n\nHTTPHeader\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xa3\x01\n\x07Handler\x12,\n\x04\x65xec\x18\x01 \x01(\x0b\x32\x1e.k8s.io.api.core.v1.ExecAction\x12\x32\n\x07httpGet\x18\x02 \x01(\x0b\x32!.k8s.io.api.core.v1.HTTPGetAction\x12\x36\n\ttcpSocket\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.TCPSocketAction\"*\n\tHostAlias\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x11\n\thostnames\x18\x02 \x03(\t\"2\n\x14HostPathVolumeSource\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\"\x9b\x02\n\x1bISCSIPersistentVolumeSource\x12\x14\n\x0ctargetPortal\x18\x01 \x01(\t\x12\x0b\n\x03iqn\x18\x02 \x01(\t\x12\x0b\n\x03lun\x18\x03 \x01(\x05\x12\x16\n\x0eiscsiInterface\x18\x04 \x01(\t\x12\x0e\n\x06\x66sType\x18\x05 \x01(\t\x12\x10\n\x08readOnly\x18\x06 \x01(\x08\x12\x0f\n\x07portals\x18\x07 \x03(\t\x12\x19\n\x11\x63hapAuthDiscovery\x18\x08 \x01(\x08\x12\x17\n\x0f\x63hapAuthSession\x18\x0b \x01(\x08\x12\x36\n\tsecretRef\x18\n \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x15\n\rinitiatorName\x18\x0c \x01(\t\"\x96\x02\n\x11ISCSIVolumeSource\x12\x14\n\x0ctargetPortal\x18\x01 \x01(\t\x12\x0b\n\x03iqn\x18\x02 \x01(\t\x12\x0b\n\x03lun\x18\x03 \x01(\x05\x12\x16\n\x0eiscsiInterface\x18\x04 \x01(\t\x12\x0e\n\x06\x66sType\x18\x05 \x01(\t\x12\x10\n\x08readOnly\x18\x06 \x01(\x08\x12\x0f\n\x07portals\x18\x07 \x03(\t\x12\x19\n\x11\x63hapAuthDiscovery\x18\x08 \x01(\x08\x12\x17\n\x0f\x63hapAuthSession\x18\x0b \x01(\x08\x12;\n\tsecretRef\x18\n \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x15\n\rinitiatorName\x18\x0c \x01(\t\"4\n\tKeyToPath\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x0c\n\x04mode\x18\x03 \x01(\x05\"i\n\tLifecycle\x12.\n\tpostStart\x18\x01 \x01(\x0b\x32\x1b.k8s.io.api.core.v1.Handler\x12,\n\x07preStop\x18\x02 \x01(\x0b\x32\x1b.k8s.io.api.core.v1.Handler\"\x82\x01\n\nLimitRange\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x30\n\x04spec\x18\x02 \x01(\x0b\x32\".k8s.io.api.core.v1.LimitRangeSpec\"\xec\x06\n\x0eLimitRangeItem\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x38\n\x03max\x18\x02 \x03(\x0b\x32+.k8s.io.api.core.v1.LimitRangeItem.MaxEntry\x12\x38\n\x03min\x18\x03 \x03(\x0b\x32+.k8s.io.api.core.v1.LimitRangeItem.MinEntry\x12@\n\x07\x64\x65\x66\x61ult\x18\x04 \x03(\x0b\x32/.k8s.io.api.core.v1.LimitRangeItem.DefaultEntry\x12N\n\x0e\x64\x65\x66\x61ultRequest\x18\x05 \x03(\x0b\x32\x36.k8s.io.api.core.v1.LimitRangeItem.DefaultRequestEntry\x12Z\n\x14maxLimitRequestRatio\x18\x06 \x03(\x0b\x32<.k8s.io.api.core.v1.LimitRangeItem.MaxLimitRequestRatioEntry\x1aZ\n\x08MaxEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1aZ\n\x08MinEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a^\n\x0c\x44\x65\x66\x61ultEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a\x65\n\x13\x44\x65\x66\x61ultRequestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1ak\n\x19MaxLimitRequestRatioEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\x81\x01\n\x0eLimitRangeList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12-\n\x05items\x18\x02 \x03(\x0b\x32\x1e.k8s.io.api.core.v1.LimitRange\"D\n\x0eLimitRangeSpec\x12\x32\n\x06limits\x18\x01 \x03(\x0b\x32\".k8s.io.api.core.v1.LimitRangeItem\"\x86\x01\n\x04List\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12<\n\x05items\x18\x02 \x03(\x0b\x32-.k8s.io.apimachinery.pkg.runtime.RawExtension\"b\n\x13LoadBalancerIngress\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x10\n\x08hostname\x18\x02 \x01(\t\x12-\n\x05ports\x18\x04 \x03(\x0b\x32\x1e.k8s.io.api.core.v1.PortStatus\"N\n\x12LoadBalancerStatus\x12\x38\n\x07ingress\x18\x01 \x03(\x0b\x32\'.k8s.io.api.core.v1.LoadBalancerIngress\"$\n\x14LocalObjectReference\x12\x0c\n\x04name\x18\x01 \x01(\t\"1\n\x11LocalVolumeSource\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\"A\n\x0fNFSVolumeSource\x12\x0e\n\x06server\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\"\xb5\x01\n\tNamespace\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12/\n\x04spec\x18\x02 \x01(\x0b\x32!.k8s.io.api.core.v1.NamespaceSpec\x12\x33\n\x06status\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.NamespaceStatus\"\x9b\x01\n\x12NamespaceCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"\x7f\n\rNamespaceList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.Namespace\"#\n\rNamespaceSpec\x12\x12\n\nfinalizers\x18\x01 \x03(\t\"\\\n\x0fNamespaceStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12:\n\nconditions\x18\x02 \x03(\x0b\x32&.k8s.io.api.core.v1.NamespaceCondition\"\xa6\x01\n\x04Node\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12*\n\x04spec\x18\x02 \x01(\x0b\x32\x1c.k8s.io.api.core.v1.NodeSpec\x12.\n\x06status\x18\x03 \x01(\x0b\x32\x1e.k8s.io.api.core.v1.NodeStatus\",\n\x0bNodeAddress\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\t\"\xce\x01\n\x0cNodeAffinity\x12X\n.requiredDuringSchedulingIgnoredDuringExecution\x18\x01 \x01(\x0b\x32 .k8s.io.api.core.v1.NodeSelector\x12\x64\n/preferredDuringSchedulingIgnoredDuringExecution\x18\x02 \x03(\x0b\x32+.k8s.io.api.core.v1.PreferredSchedulingTerm\"\xdd\x01\n\rNodeCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x45\n\x11lastHeartbeatTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"T\n\x10NodeConfigSource\x12@\n\tconfigMap\x18\x02 \x01(\x0b\x32-.k8s.io.api.core.v1.ConfigMapNodeConfigSource\"\xcc\x01\n\x10NodeConfigStatus\x12\x36\n\x08\x61ssigned\x18\x01 \x01(\x0b\x32$.k8s.io.api.core.v1.NodeConfigSource\x12\x34\n\x06\x61\x63tive\x18\x02 \x01(\x0b\x32$.k8s.io.api.core.v1.NodeConfigSource\x12;\n\rlastKnownGood\x18\x03 \x01(\x0b\x32$.k8s.io.api.core.v1.NodeConfigSource\x12\r\n\x05\x65rror\x18\x04 \x01(\t\"R\n\x13NodeDaemonEndpoints\x12;\n\x0fkubeletEndpoint\x18\x01 \x01(\x0b\x32\".k8s.io.api.core.v1.DaemonEndpoint\"u\n\x08NodeList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\'\n\x05items\x18\x02 \x03(\x0b\x32\x18.k8s.io.api.core.v1.Node\" \n\x10NodeProxyOptions\x12\x0c\n\x04path\x18\x01 \x01(\t\"\xb3\x01\n\rNodeResources\x12\x41\n\x08\x63\x61pacity\x18\x01 \x03(\x0b\x32/.k8s.io.api.core.v1.NodeResources.CapacityEntry\x1a_\n\rCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"O\n\x0cNodeSelector\x12?\n\x11nodeSelectorTerms\x18\x01 \x03(\x0b\x32$.k8s.io.api.core.v1.NodeSelectorTerm\"H\n\x17NodeSelectorRequirement\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x0e\n\x06values\x18\x03 \x03(\t\"\x9b\x01\n\x10NodeSelectorTerm\x12\x45\n\x10matchExpressions\x18\x01 \x03(\x0b\x32+.k8s.io.api.core.v1.NodeSelectorRequirement\x12@\n\x0bmatchFields\x18\x02 \x03(\x0b\x32+.k8s.io.api.core.v1.NodeSelectorRequirement\"\xd3\x01\n\x08NodeSpec\x12\x0f\n\x07podCIDR\x18\x01 \x01(\t\x12\x10\n\x08podCIDRs\x18\x07 \x03(\t\x12\x12\n\nproviderID\x18\x03 \x01(\t\x12\x15\n\runschedulable\x18\x04 \x01(\x08\x12)\n\x06taints\x18\x05 \x03(\x0b\x32\x19.k8s.io.api.core.v1.Taint\x12:\n\x0c\x63onfigSource\x18\x06 \x01(\x0b\x32$.k8s.io.api.core.v1.NodeConfigSource\x12\x12\n\nexternalID\x18\x02 \x01(\t\"\x86\x06\n\nNodeStatus\x12>\n\x08\x63\x61pacity\x18\x01 \x03(\x0b\x32,.k8s.io.api.core.v1.NodeStatus.CapacityEntry\x12\x44\n\x0b\x61llocatable\x18\x02 \x03(\x0b\x32/.k8s.io.api.core.v1.NodeStatus.AllocatableEntry\x12\r\n\x05phase\x18\x03 \x01(\t\x12\x35\n\nconditions\x18\x04 \x03(\x0b\x32!.k8s.io.api.core.v1.NodeCondition\x12\x32\n\taddresses\x18\x05 \x03(\x0b\x32\x1f.k8s.io.api.core.v1.NodeAddress\x12@\n\x0f\x64\x61\x65monEndpoints\x18\x06 \x01(\x0b\x32\'.k8s.io.api.core.v1.NodeDaemonEndpoints\x12\x34\n\x08nodeInfo\x18\x07 \x01(\x0b\x32\".k8s.io.api.core.v1.NodeSystemInfo\x12\x32\n\x06images\x18\x08 \x03(\x0b\x32\".k8s.io.api.core.v1.ContainerImage\x12\x14\n\x0cvolumesInUse\x18\t \x03(\t\x12;\n\x0fvolumesAttached\x18\n \x03(\x0b\x32\".k8s.io.api.core.v1.AttachedVolume\x12\x34\n\x06\x63onfig\x18\x0b \x01(\x0b\x32$.k8s.io.api.core.v1.NodeConfigStatus\x1a_\n\rCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a\x62\n\x10\x41llocatableEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\xf1\x01\n\x0eNodeSystemInfo\x12\x11\n\tmachineID\x18\x01 \x01(\t\x12\x12\n\nsystemUUID\x18\x02 \x01(\t\x12\x0e\n\x06\x62ootID\x18\x03 \x01(\t\x12\x15\n\rkernelVersion\x18\x04 \x01(\t\x12\x0f\n\x07osImage\x18\x05 \x01(\t\x12\x1f\n\x17\x63ontainerRuntimeVersion\x18\x06 \x01(\t\x12\x16\n\x0ekubeletVersion\x18\x07 \x01(\t\x12\x18\n\x10kubeProxyVersion\x18\x08 \x01(\t\x12\x17\n\x0foperatingSystem\x18\t \x01(\t\x12\x14\n\x0c\x61rchitecture\x18\n \x01(\t\"<\n\x13ObjectFieldSelector\x12\x12\n\napiVersion\x18\x01 \x01(\t\x12\x11\n\tfieldPath\x18\x02 \x01(\t\"\x8d\x01\n\x0fObjectReference\x12\x0c\n\x04kind\x18\x01 \x01(\t\x12\x11\n\tnamespace\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0b\n\x03uid\x18\x04 \x01(\t\x12\x12\n\napiVersion\x18\x05 \x01(\t\x12\x17\n\x0fresourceVersion\x18\x06 \x01(\t\x12\x11\n\tfieldPath\x18\x07 \x01(\t\"\xca\x01\n\x10PersistentVolume\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x36\n\x04spec\x18\x02 \x01(\x0b\x32(.k8s.io.api.core.v1.PersistentVolumeSpec\x12:\n\x06status\x18\x03 \x01(\x0b\x32*.k8s.io.api.core.v1.PersistentVolumeStatus\"\xd9\x01\n\x15PersistentVolumeClaim\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12;\n\x04spec\x18\x02 \x01(\x0b\x32-.k8s.io.api.core.v1.PersistentVolumeClaimSpec\x12?\n\x06status\x18\x03 \x01(\x0b\x32/.k8s.io.api.core.v1.PersistentVolumeClaimStatus\"\xea\x01\n\x1ePersistentVolumeClaimCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x41\n\rlastProbeTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"\x97\x01\n\x19PersistentVolumeClaimList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x38\n\x05items\x18\x02 \x03(\x0b\x32).k8s.io.api.core.v1.PersistentVolumeClaim\"\xff\x02\n\x19PersistentVolumeClaimSpec\x12\x13\n\x0b\x61\x63\x63\x65ssModes\x18\x01 \x03(\t\x12\x45\n\x08selector\x18\x04 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\x12;\n\tresources\x18\x02 \x01(\x0b\x32(.k8s.io.api.core.v1.ResourceRequirements\x12\x12\n\nvolumeName\x18\x03 \x01(\t\x12\x18\n\x10storageClassName\x18\x05 \x01(\t\x12\x12\n\nvolumeMode\x18\x06 \x01(\t\x12\x41\n\ndataSource\x18\x07 \x01(\x0b\x32-.k8s.io.api.core.v1.TypedLocalObjectReference\x12\x44\n\rdataSourceRef\x18\x08 \x01(\x0b\x32-.k8s.io.api.core.v1.TypedLocalObjectReference\"\xbb\x02\n\x1bPersistentVolumeClaimStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x13\n\x0b\x61\x63\x63\x65ssModes\x18\x02 \x03(\t\x12O\n\x08\x63\x61pacity\x18\x03 \x03(\x0b\x32=.k8s.io.api.core.v1.PersistentVolumeClaimStatus.CapacityEntry\x12\x46\n\nconditions\x18\x04 \x03(\x0b\x32\x32.k8s.io.api.core.v1.PersistentVolumeClaimCondition\x1a_\n\rCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\xa0\x01\n\x1dPersistentVolumeClaimTemplate\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12;\n\x04spec\x18\x02 \x01(\x0b\x32-.k8s.io.api.core.v1.PersistentVolumeClaimSpec\"H\n!PersistentVolumeClaimVolumeSource\x12\x11\n\tclaimName\x18\x01 \x01(\t\x12\x10\n\x08readOnly\x18\x02 \x01(\x08\"\x8d\x01\n\x14PersistentVolumeList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x33\n\x05items\x18\x02 \x03(\x0b\x32$.k8s.io.api.core.v1.PersistentVolume\"\xbd\x0b\n\x16PersistentVolumeSource\x12L\n\x11gcePersistentDisk\x18\x01 \x01(\x0b\x32\x31.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource\x12R\n\x14\x61wsElasticBlockStore\x18\x02 \x01(\x0b\x32\x34.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource\x12:\n\x08hostPath\x18\x03 \x01(\x0b\x32(.k8s.io.api.core.v1.HostPathVolumeSource\x12\x46\n\tglusterfs\x18\x04 \x01(\x0b\x32\x33.k8s.io.api.core.v1.GlusterfsPersistentVolumeSource\x12\x30\n\x03nfs\x18\x05 \x01(\x0b\x32#.k8s.io.api.core.v1.NFSVolumeSource\x12:\n\x03rbd\x18\x06 \x01(\x0b\x32-.k8s.io.api.core.v1.RBDPersistentVolumeSource\x12>\n\x05iscsi\x18\x07 \x01(\x0b\x32/.k8s.io.api.core.v1.ISCSIPersistentVolumeSource\x12@\n\x06\x63inder\x18\x08 \x01(\x0b\x32\x30.k8s.io.api.core.v1.CinderPersistentVolumeSource\x12@\n\x06\x63\x65phfs\x18\t \x01(\x0b\x32\x30.k8s.io.api.core.v1.CephFSPersistentVolumeSource\x12.\n\x02\x66\x63\x18\n \x01(\x0b\x32\".k8s.io.api.core.v1.FCVolumeSource\x12\x38\n\x07\x66locker\x18\x0b \x01(\x0b\x32\'.k8s.io.api.core.v1.FlockerVolumeSource\x12\x42\n\nflexVolume\x18\x0c \x01(\x0b\x32..k8s.io.api.core.v1.FlexPersistentVolumeSource\x12\x46\n\tazureFile\x18\r \x01(\x0b\x32\x33.k8s.io.api.core.v1.AzureFilePersistentVolumeSource\x12I\n\rvsphereVolume\x18\x0e \x01(\x0b\x32\x32.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource\x12\x38\n\x07quobyte\x18\x0f \x01(\x0b\x32\'.k8s.io.api.core.v1.QuobyteVolumeSource\x12<\n\tazureDisk\x18\x10 \x01(\x0b\x32).k8s.io.api.core.v1.AzureDiskVolumeSource\x12R\n\x14photonPersistentDisk\x18\x11 \x01(\x0b\x32\x34.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource\x12@\n\x0eportworxVolume\x18\x12 \x01(\x0b\x32(.k8s.io.api.core.v1.PortworxVolumeSource\x12\x42\n\x07scaleIO\x18\x13 \x01(\x0b\x32\x31.k8s.io.api.core.v1.ScaleIOPersistentVolumeSource\x12\x34\n\x05local\x18\x14 \x01(\x0b\x32%.k8s.io.api.core.v1.LocalVolumeSource\x12\x46\n\tstorageos\x18\x15 \x01(\x0b\x32\x33.k8s.io.api.core.v1.StorageOSPersistentVolumeSource\x12:\n\x03\x63si\x18\x16 \x01(\x0b\x32-.k8s.io.api.core.v1.CSIPersistentVolumeSource\"\x82\x04\n\x14PersistentVolumeSpec\x12H\n\x08\x63\x61pacity\x18\x01 \x03(\x0b\x32\x36.k8s.io.api.core.v1.PersistentVolumeSpec.CapacityEntry\x12J\n\x16persistentVolumeSource\x18\x02 \x01(\x0b\x32*.k8s.io.api.core.v1.PersistentVolumeSource\x12\x13\n\x0b\x61\x63\x63\x65ssModes\x18\x03 \x03(\t\x12\x35\n\x08\x63laimRef\x18\x04 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12%\n\x1dpersistentVolumeReclaimPolicy\x18\x05 \x01(\t\x12\x18\n\x10storageClassName\x18\x06 \x01(\t\x12\x14\n\x0cmountOptions\x18\x07 \x03(\t\x12\x12\n\nvolumeMode\x18\x08 \x01(\t\x12<\n\x0cnodeAffinity\x18\t \x01(\x0b\x32&.k8s.io.api.core.v1.VolumeNodeAffinity\x1a_\n\rCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"H\n\x16PersistentVolumeStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0e\n\x06reason\x18\x03 \x01(\t\"@\n PhotonPersistentDiskVolumeSource\x12\x0c\n\x04pdID\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\"\xa3\x01\n\x03Pod\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12)\n\x04spec\x18\x02 \x01(\x0b\x32\x1b.k8s.io.api.core.v1.PodSpec\x12-\n\x06status\x18\x03 \x01(\x0b\x32\x1d.k8s.io.api.core.v1.PodStatus\"\xd0\x01\n\x0bPodAffinity\x12[\n.requiredDuringSchedulingIgnoredDuringExecution\x18\x01 \x03(\x0b\x32#.k8s.io.api.core.v1.PodAffinityTerm\x12\x64\n/preferredDuringSchedulingIgnoredDuringExecution\x18\x02 \x03(\x0b\x32+.k8s.io.api.core.v1.WeightedPodAffinityTerm\"\xd6\x01\n\x0fPodAffinityTerm\x12J\n\rlabelSelector\x18\x01 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\x12\x12\n\nnamespaces\x18\x02 \x03(\t\x12\x13\n\x0btopologyKey\x18\x03 \x01(\t\x12N\n\x11namespaceSelector\x18\x04 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\"\xd4\x01\n\x0fPodAntiAffinity\x12[\n.requiredDuringSchedulingIgnoredDuringExecution\x18\x01 \x03(\x0b\x32#.k8s.io.api.core.v1.PodAffinityTerm\x12\x64\n/preferredDuringSchedulingIgnoredDuringExecution\x18\x02 \x03(\x0b\x32+.k8s.io.api.core.v1.WeightedPodAffinityTerm\"a\n\x10PodAttachOptions\x12\r\n\x05stdin\x18\x01 \x01(\x08\x12\x0e\n\x06stdout\x18\x02 \x01(\x08\x12\x0e\n\x06stderr\x18\x03 \x01(\x08\x12\x0b\n\x03tty\x18\x04 \x01(\x08\x12\x11\n\tcontainer\x18\x05 \x01(\t\"\xd8\x01\n\x0cPodCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x41\n\rlastProbeTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x46\n\x12lastTransitionTime\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x05 \x01(\t\x12\x0f\n\x07message\x18\x06 \x01(\t\"n\n\x0cPodDNSConfig\x12\x13\n\x0bnameservers\x18\x01 \x03(\t\x12\x10\n\x08searches\x18\x02 \x03(\t\x12\x37\n\x07options\x18\x03 \x03(\x0b\x32&.k8s.io.api.core.v1.PodDNSConfigOption\"1\n\x12PodDNSConfigOption\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"p\n\x0ePodExecOptions\x12\r\n\x05stdin\x18\x01 \x01(\x08\x12\x0e\n\x06stdout\x18\x02 \x01(\x08\x12\x0e\n\x06stderr\x18\x03 \x01(\x08\x12\x0b\n\x03tty\x18\x04 \x01(\x08\x12\x11\n\tcontainer\x18\x05 \x01(\t\x12\x0f\n\x07\x63ommand\x18\x06 \x03(\t\"\x13\n\x05PodIP\x12\n\n\x02ip\x18\x01 \x01(\t\"s\n\x07PodList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12&\n\x05items\x18\x02 \x03(\x0b\x32\x17.k8s.io.api.core.v1.Pod\"\xfa\x01\n\rPodLogOptions\x12\x11\n\tcontainer\x18\x01 \x01(\t\x12\x0e\n\x06\x66ollow\x18\x02 \x01(\x08\x12\x10\n\x08previous\x18\x03 \x01(\x08\x12\x14\n\x0csinceSeconds\x18\x04 \x01(\x03\x12=\n\tsinceTime\x18\x05 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x12\n\ntimestamps\x18\x06 \x01(\x08\x12\x11\n\ttailLines\x18\x07 \x01(\x03\x12\x12\n\nlimitBytes\x18\x08 \x01(\x03\x12$\n\x1cinsecureSkipTLSVerifyBackend\x18\t \x01(\x08\"&\n\x15PodPortForwardOptions\x12\r\n\x05ports\x18\x01 \x03(\x05\"\x1f\n\x0fPodProxyOptions\x12\x0c\n\x04path\x18\x01 \x01(\t\")\n\x10PodReadinessGate\x12\x15\n\rconditionType\x18\x01 \x01(\t\"\x8b\x03\n\x12PodSecurityContext\x12:\n\x0eseLinuxOptions\x18\x01 \x01(\x0b\x32\".k8s.io.api.core.v1.SELinuxOptions\x12I\n\x0ewindowsOptions\x18\x08 \x01(\x0b\x32\x31.k8s.io.api.core.v1.WindowsSecurityContextOptions\x12\x11\n\trunAsUser\x18\x02 \x01(\x03\x12\x12\n\nrunAsGroup\x18\x06 \x01(\x03\x12\x14\n\x0crunAsNonRoot\x18\x03 \x01(\x08\x12\x1a\n\x12supplementalGroups\x18\x04 \x03(\x03\x12\x0f\n\x07\x66sGroup\x18\x05 \x01(\x03\x12+\n\x07sysctls\x18\x07 \x03(\x0b\x32\x1a.k8s.io.api.core.v1.Sysctl\x12\x1b\n\x13\x66sGroupChangePolicy\x18\t \x01(\t\x12:\n\x0eseccompProfile\x18\n \x01(\x0b\x32\".k8s.io.api.core.v1.SeccompProfile\"[\n\x0cPodSignature\x12K\n\rpodController\x18\x01 \x01(\x0b\x32\x34.k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference\"\xe5\x0b\n\x07PodSpec\x12+\n\x07volumes\x18\x01 \x03(\x0b\x32\x1a.k8s.io.api.core.v1.Volume\x12\x35\n\x0einitContainers\x18\x14 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.Container\x12\x31\n\ncontainers\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.Container\x12\x43\n\x13\x65phemeralContainers\x18\" \x03(\x0b\x32&.k8s.io.api.core.v1.EphemeralContainer\x12\x15\n\rrestartPolicy\x18\x03 \x01(\t\x12%\n\x1dterminationGracePeriodSeconds\x18\x04 \x01(\x03\x12\x1d\n\x15\x61\x63tiveDeadlineSeconds\x18\x05 \x01(\x03\x12\x11\n\tdnsPolicy\x18\x06 \x01(\t\x12\x43\n\x0cnodeSelector\x18\x07 \x03(\x0b\x32-.k8s.io.api.core.v1.PodSpec.NodeSelectorEntry\x12\x1a\n\x12serviceAccountName\x18\x08 \x01(\t\x12\x16\n\x0eserviceAccount\x18\t \x01(\t\x12$\n\x1c\x61utomountServiceAccountToken\x18\x15 \x01(\x08\x12\x10\n\x08nodeName\x18\n \x01(\t\x12\x13\n\x0bhostNetwork\x18\x0b \x01(\x08\x12\x0f\n\x07hostPID\x18\x0c \x01(\x08\x12\x0f\n\x07hostIPC\x18\r \x01(\x08\x12\x1d\n\x15shareProcessNamespace\x18\x1b \x01(\x08\x12?\n\x0fsecurityContext\x18\x0e \x01(\x0b\x32&.k8s.io.api.core.v1.PodSecurityContext\x12\x42\n\x10imagePullSecrets\x18\x0f \x03(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08hostname\x18\x10 \x01(\t\x12\x11\n\tsubdomain\x18\x11 \x01(\t\x12.\n\x08\x61\x66\x66inity\x18\x12 \x01(\x0b\x32\x1c.k8s.io.api.core.v1.Affinity\x12\x15\n\rschedulerName\x18\x13 \x01(\t\x12\x33\n\x0btolerations\x18\x16 \x03(\x0b\x32\x1e.k8s.io.api.core.v1.Toleration\x12\x32\n\x0bhostAliases\x18\x17 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.HostAlias\x12\x19\n\x11priorityClassName\x18\x18 \x01(\t\x12\x10\n\x08priority\x18\x19 \x01(\x05\x12\x33\n\tdnsConfig\x18\x1a \x01(\x0b\x32 .k8s.io.api.core.v1.PodDNSConfig\x12<\n\x0ereadinessGates\x18\x1c \x03(\x0b\x32$.k8s.io.api.core.v1.PodReadinessGate\x12\x18\n\x10runtimeClassName\x18\x1d \x01(\t\x12\x1a\n\x12\x65nableServiceLinks\x18\x1e \x01(\x08\x12\x18\n\x10preemptionPolicy\x18\x1f \x01(\t\x12;\n\x08overhead\x18  \x03(\x0b\x32).k8s.io.api.core.v1.PodSpec.OverheadEntry\x12O\n\x19topologySpreadConstraints\x18! \x03(\x0b\x32,.k8s.io.api.core.v1.TopologySpreadConstraint\x12\x19\n\x11setHostnameAsFQDN\x18# \x01(\x08\x1a\x33\n\x11NodeSelectorEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a_\n\rOverheadEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\xf4\x03\n\tPodStatus\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x34\n\nconditions\x18\x02 \x03(\x0b\x32 .k8s.io.api.core.v1.PodCondition\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x19\n\x11nominatedNodeName\x18\x0b \x01(\t\x12\x0e\n\x06hostIP\x18\x05 \x01(\t\x12\r\n\x05podIP\x18\x06 \x01(\t\x12)\n\x06podIPs\x18\x0c \x03(\x0b\x32\x19.k8s.io.api.core.v1.PodIP\x12=\n\tstartTime\x18\x07 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x42\n\x15initContainerStatuses\x18\n \x03(\x0b\x32#.k8s.io.api.core.v1.ContainerStatus\x12>\n\x11\x63ontainerStatuses\x18\x08 \x03(\x0b\x32#.k8s.io.api.core.v1.ContainerStatus\x12\x10\n\x08qosClass\x18\t \x01(\t\x12G\n\x1a\x65phemeralContainerStatuses\x18\r \x03(\x0b\x32#.k8s.io.api.core.v1.ContainerStatus\"\x84\x01\n\x0fPodStatusResult\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12-\n\x06status\x18\x02 \x01(\x0b\x32\x1d.k8s.io.api.core.v1.PodStatus\"\x88\x01\n\x0bPodTemplate\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x35\n\x08template\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.PodTemplateSpec\"\x83\x01\n\x0fPodTemplateList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12.\n\x05items\x18\x02 \x03(\x0b\x32\x1f.k8s.io.api.core.v1.PodTemplate\"\x80\x01\n\x0fPodTemplateSpec\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12)\n\x04spec\x18\x02 \x01(\x0b\x32\x1b.k8s.io.api.core.v1.PodSpec\";\n\nPortStatus\x12\x0c\n\x04port\x18\x01 \x01(\x05\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"J\n\x14PortworxVolumeSource\x12\x10\n\x08volumeID\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\"\x1c\n\rPreconditions\x12\x0b\n\x03uid\x18\x01 \x01(\t\"\xb1\x01\n\x14PreferAvoidPodsEntry\x12\x36\n\x0cpodSignature\x18\x01 \x01(\x0b\x32 .k8s.io.api.core.v1.PodSignature\x12@\n\x0c\x65victionTime\x18\x02 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\"c\n\x17PreferredSchedulingTerm\x12\x0e\n\x06weight\x18\x01 \x01(\x05\x12\x38\n\npreference\x18\x02 \x01(\x0b\x32$.k8s.io.api.core.v1.NodeSelectorTerm\"\xdc\x01\n\x05Probe\x12,\n\x07handler\x18\x01 \x01(\x0b\x32\x1b.k8s.io.api.core.v1.Handler\x12\x1b\n\x13initialDelaySeconds\x18\x02 \x01(\x05\x12\x16\n\x0etimeoutSeconds\x18\x03 \x01(\x05\x12\x15\n\rperiodSeconds\x18\x04 \x01(\x05\x12\x18\n\x10successThreshold\x18\x05 \x01(\x05\x12\x18\n\x10\x66\x61ilureThreshold\x18\x06 \x01(\x05\x12%\n\x1dterminationGracePeriodSeconds\x18\x07 \x01(\x03\"c\n\x15ProjectedVolumeSource\x12\x35\n\x07sources\x18\x01 \x03(\x0b\x32$.k8s.io.api.core.v1.VolumeProjection\x12\x13\n\x0b\x64\x65\x66\x61ultMode\x18\x02 \x01(\x05\"v\n\x13QuobyteVolumeSource\x12\x10\n\x08registry\x18\x01 \x01(\t\x12\x0e\n\x06volume\x18\x02 \x01(\t\x12\x10\n\x08readOnly\x18\x03 \x01(\x08\x12\x0c\n\x04user\x18\x04 \x01(\t\x12\r\n\x05group\x18\x05 \x01(\t\x12\x0e\n\x06tenant\x18\x06 \x01(\t\"\xc3\x01\n\x19RBDPersistentVolumeSource\x12\x10\n\x08monitors\x18\x01 \x03(\t\x12\r\n\x05image\x18\x02 \x01(\t\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12\x0c\n\x04pool\x18\x04 \x01(\t\x12\x0c\n\x04user\x18\x05 \x01(\t\x12\x0f\n\x07keyring\x18\x06 \x01(\t\x12\x36\n\tsecretRef\x18\x07 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x10\n\x08readOnly\x18\x08 \x01(\x08\"\xbe\x01\n\x0fRBDVolumeSource\x12\x10\n\x08monitors\x18\x01 \x03(\t\x12\r\n\x05image\x18\x02 \x01(\t\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12\x0c\n\x04pool\x18\x04 \x01(\t\x12\x0c\n\x04user\x18\x05 \x01(\t\x12\x0f\n\x07keyring\x18\x06 \x01(\t\x12;\n\tsecretRef\x18\x07 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08readOnly\x18\x08 \x01(\x08\"r\n\x0fRangeAllocation\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\r\n\x05range\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\"\xd9\x01\n\x15ReplicationController\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12;\n\x04spec\x18\x02 \x01(\x0b\x32-.k8s.io.api.core.v1.ReplicationControllerSpec\x12?\n\x06status\x18\x03 \x01(\x0b\x32/.k8s.io.api.core.v1.ReplicationControllerStatus\"\xa7\x01\n\x1eReplicationControllerCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x46\n\x12lastTransitionTime\x18\x03 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"\x97\x01\n\x19ReplicationControllerList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x38\n\x05items\x18\x02 \x03(\x0b\x32).k8s.io.api.core.v1.ReplicationController\"\xfd\x01\n\x19ReplicationControllerSpec\x12\x10\n\x08replicas\x18\x01 \x01(\x05\x12\x17\n\x0fminReadySeconds\x18\x04 \x01(\x05\x12M\n\x08selector\x18\x02 \x03(\x0b\x32;.k8s.io.api.core.v1.ReplicationControllerSpec.SelectorEntry\x12\x35\n\x08template\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.PodTemplateSpec\x1a/\n\rSelectorEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe3\x01\n\x1bReplicationControllerStatus\x12\x10\n\x08replicas\x18\x01 \x01(\x05\x12\x1c\n\x14\x66ullyLabeledReplicas\x18\x02 \x01(\x05\x12\x15\n\rreadyReplicas\x18\x04 \x01(\x05\x12\x19\n\x11\x61vailableReplicas\x18\x05 \x01(\x05\x12\x1a\n\x12observedGeneration\x18\x03 \x01(\x03\x12\x46\n\nconditions\x18\x06 \x03(\x0b\x32\x32.k8s.io.api.core.v1.ReplicationControllerCondition\"\x81\x01\n\x15ResourceFieldSelector\x12\x15\n\rcontainerName\x18\x01 \x01(\t\x12\x10\n\x08resource\x18\x02 \x01(\t\x12?\n\x07\x64ivisor\x18\x03 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity\"\xc1\x01\n\rResourceQuota\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x33\n\x04spec\x18\x02 \x01(\x0b\x32%.k8s.io.api.core.v1.ResourceQuotaSpec\x12\x37\n\x06status\x18\x03 \x01(\x0b\x32\'.k8s.io.api.core.v1.ResourceQuotaStatus\"\x87\x01\n\x11ResourceQuotaList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x30\n\x05items\x18\x02 \x03(\x0b\x32!.k8s.io.api.core.v1.ResourceQuota\"\xf9\x01\n\x11ResourceQuotaSpec\x12=\n\x04hard\x18\x01 \x03(\x0b\x32/.k8s.io.api.core.v1.ResourceQuotaSpec.HardEntry\x12\x0e\n\x06scopes\x18\x02 \x03(\t\x12\x38\n\rscopeSelector\x18\x03 \x01(\x0b\x32!.k8s.io.api.core.v1.ScopeSelector\x1a[\n\tHardEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\xd1\x02\n\x13ResourceQuotaStatus\x12?\n\x04hard\x18\x01 \x03(\x0b\x32\x31.k8s.io.api.core.v1.ResourceQuotaStatus.HardEntry\x12?\n\x04used\x18\x02 \x03(\x0b\x32\x31.k8s.io.api.core.v1.ResourceQuotaStatus.UsedEntry\x1a[\n\tHardEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a[\n\tUsedEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"\xe6\x02\n\x14ResourceRequirements\x12\x44\n\x06limits\x18\x01 \x03(\x0b\x32\x34.k8s.io.api.core.v1.ResourceRequirements.LimitsEntry\x12H\n\x08requests\x18\x02 \x03(\x0b\x32\x36.k8s.io.api.core.v1.ResourceRequirements.RequestsEntry\x1a]\n\x0bLimitsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a_\n\rRequestsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"I\n\x0eSELinuxOptions\x12\x0c\n\x04user\x18\x01 \x01(\t\x12\x0c\n\x04role\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\r\n\x05level\x18\x04 \x01(\t\"\x86\x02\n\x1dScaleIOPersistentVolumeSource\x12\x0f\n\x07gateway\x18\x01 \x01(\t\x12\x0e\n\x06system\x18\x02 \x01(\t\x12\x36\n\tsecretRef\x18\x03 \x01(\x0b\x32#.k8s.io.api.core.v1.SecretReference\x12\x12\n\nsslEnabled\x18\x04 \x01(\x08\x12\x18\n\x10protectionDomain\x18\x05 \x01(\t\x12\x13\n\x0bstoragePool\x18\x06 \x01(\t\x12\x13\n\x0bstorageMode\x18\x07 \x01(\t\x12\x12\n\nvolumeName\x18\x08 \x01(\t\x12\x0e\n\x06\x66sType\x18\t \x01(\t\x12\x10\n\x08readOnly\x18\n \x01(\x08\"\x81\x02\n\x13ScaleIOVolumeSource\x12\x0f\n\x07gateway\x18\x01 \x01(\t\x12\x0e\n\x06system\x18\x02 \x01(\t\x12;\n\tsecretRef\x18\x03 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x12\n\nsslEnabled\x18\x04 \x01(\x08\x12\x18\n\x10protectionDomain\x18\x05 \x01(\t\x12\x13\n\x0bstoragePool\x18\x06 \x01(\t\x12\x13\n\x0bstorageMode\x18\x07 \x01(\t\x12\x12\n\nvolumeName\x18\x08 \x01(\t\x12\x0e\n\x06\x66sType\x18\t \x01(\t\x12\x10\n\x08readOnly\x18\n \x01(\x08\"`\n\rScopeSelector\x12O\n\x10matchExpressions\x18\x01 \x03(\x0b\x32\x35.k8s.io.api.core.v1.ScopedResourceSelectorRequirement\"X\n!ScopedResourceSelectorRequirement\x12\x11\n\tscopeName\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x0e\n\x06values\x18\x03 \x03(\t\"8\n\x0eSeccompProfile\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x18\n\x10localhostProfile\x18\x02 \x01(\t\"\xc1\x02\n\x06Secret\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12\x32\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32$.k8s.io.api.core.v1.Secret.DataEntry\x12>\n\nstringData\x18\x04 \x03(\x0b\x32*.k8s.io.api.core.v1.Secret.StringDataEntry\x12\x0c\n\x04type\x18\x03 \x01(\t\x1a+\n\tDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a\x31\n\x0fStringDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"k\n\x0fSecretEnvSource\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x10\n\x08optional\x18\x02 \x01(\x08\"z\n\x11SecretKeySelector\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x10\n\x08optional\x18\x03 \x01(\x08\"y\n\nSecretList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12)\n\x05items\x18\x02 \x03(\x0b\x32\x1a.k8s.io.api.core.v1.Secret\"\x9a\x01\n\x10SecretProjection\x12\x46\n\x14localObjectReference\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.KeyToPath\x12\x10\n\x08optional\x18\x04 \x01(\x08\"2\n\x0fSecretReference\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tnamespace\x18\x02 \x01(\t\"}\n\x12SecretVolumeSource\x12\x12\n\nsecretName\x18\x01 \x01(\t\x12,\n\x05items\x18\x02 \x03(\x0b\x32\x1d.k8s.io.api.core.v1.KeyToPath\x12\x13\n\x0b\x64\x65\x66\x61ultMode\x18\x03 \x01(\x05\x12\x10\n\x08optional\x18\x04 \x01(\x08\"\xb2\x03\n\x0fSecurityContext\x12\x36\n\x0c\x63\x61pabilities\x18\x01 \x01(\x0b\x32 .k8s.io.api.core.v1.Capabilities\x12\x12\n\nprivileged\x18\x02 \x01(\x08\x12:\n\x0eseLinuxOptions\x18\x03 \x01(\x0b\x32\".k8s.io.api.core.v1.SELinuxOptions\x12I\n\x0ewindowsOptions\x18\n \x01(\x0b\x32\x31.k8s.io.api.core.v1.WindowsSecurityContextOptions\x12\x11\n\trunAsUser\x18\x04 \x01(\x03\x12\x12\n\nrunAsGroup\x18\x08 \x01(\x03\x12\x14\n\x0crunAsNonRoot\x18\x05 \x01(\x08\x12\x1e\n\x16readOnlyRootFilesystem\x18\x06 \x01(\x08\x12 \n\x18\x61llowPrivilegeEscalation\x18\x07 \x01(\x08\x12\x11\n\tprocMount\x18\t \x01(\t\x12:\n\x0eseccompProfile\x18\x0b \x01(\x0b\x32\".k8s.io.api.core.v1.SeccompProfile\"M\n\x13SerializedReference\x12\x36\n\treference\x18\x01 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"\xaf\x01\n\x07Service\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12-\n\x04spec\x18\x02 \x01(\x0b\x32\x1f.k8s.io.api.core.v1.ServiceSpec\x12\x31\n\x06status\x18\x03 \x01(\x0b\x32!.k8s.io.api.core.v1.ServiceStatus\"\xf4\x01\n\x0eServiceAccount\x12\x42\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\x12\x34\n\x07secrets\x18\x02 \x03(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\x12\x42\n\x10imagePullSecrets\x18\x03 \x03(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\x12$\n\x1c\x61utomountServiceAccountToken\x18\x04 \x01(\x08\"\x89\x01\n\x12ServiceAccountList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12\x31\n\x05items\x18\x02 \x03(\x0b\x32\".k8s.io.api.core.v1.ServiceAccount\"Z\n\x1dServiceAccountTokenProjection\x12\x10\n\x08\x61udience\x18\x01 \x01(\t\x12\x19\n\x11\x65xpirationSeconds\x18\x02 \x01(\x03\x12\x0c\n\x04path\x18\x03 \x01(\t\"{\n\x0bServiceList\x12@\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta\x12*\n\x05items\x18\x02 \x03(\x0b\x32\x1b.k8s.io.api.core.v1.Service\"\xa8\x01\n\x0bServicePort\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\x13\n\x0b\x61ppProtocol\x18\x06 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x44\n\ntargetPort\x18\x04 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.util.intstr.IntOrString\x12\x10\n\x08nodePort\x18\x05 \x01(\x05\"#\n\x13ServiceProxyOptions\x12\x0c\n\x04path\x18\x01 \x01(\t\"\x97\x05\n\x0bServiceSpec\x12.\n\x05ports\x18\x01 \x03(\x0b\x32\x1f.k8s.io.api.core.v1.ServicePort\x12?\n\x08selector\x18\x02 \x03(\x0b\x32-.k8s.io.api.core.v1.ServiceSpec.SelectorEntry\x12\x11\n\tclusterIP\x18\x03 \x01(\t\x12\x12\n\nclusterIPs\x18\x12 \x03(\t\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\x13\n\x0b\x65xternalIPs\x18\x05 \x03(\t\x12\x17\n\x0fsessionAffinity\x18\x07 \x01(\t\x12\x16\n\x0eloadBalancerIP\x18\x08 \x01(\t\x12 \n\x18loadBalancerSourceRanges\x18\t \x03(\t\x12\x14\n\x0c\x65xternalName\x18\n \x01(\t\x12\x1d\n\x15\x65xternalTrafficPolicy\x18\x0b \x01(\t\x12\x1b\n\x13healthCheckNodePort\x18\x0c \x01(\x05\x12 \n\x18publishNotReadyAddresses\x18\r \x01(\x08\x12H\n\x15sessionAffinityConfig\x18\x0e \x01(\x0b\x32).k8s.io.api.core.v1.SessionAffinityConfig\x12\x12\n\nipFamilies\x18\x13 \x03(\t\x12\x16\n\x0eipFamilyPolicy\x18\x11 \x01(\t\x12%\n\x1d\x61llocateLoadBalancerNodePorts\x18\x14 \x01(\x08\x12\x19\n\x11loadBalancerClass\x18\x15 \x01(\t\x12\x1d\n\x15internalTrafficPolicy\x18\x16 \x01(\t\x1a/\n\rSelectorEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x92\x01\n\rServiceStatus\x12<\n\x0cloadBalancer\x18\x01 \x01(\x0b\x32&.k8s.io.api.core.v1.LoadBalancerStatus\x12\x43\n\nconditions\x18\x02 \x03(\x0b\x32/.k8s.io.apimachinery.pkg.apis.meta.v1.Condition\"M\n\x15SessionAffinityConfig\x12\x34\n\x08\x63lientIP\x18\x01 \x01(\x0b\x32\".k8s.io.api.core.v1.ClientIPConfig\"\xa8\x01\n\x1fStorageOSPersistentVolumeSource\x12\x12\n\nvolumeName\x18\x01 \x01(\t\x12\x17\n\x0fvolumeNamespace\x18\x02 \x01(\t\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\x12\x36\n\tsecretRef\x18\x05 \x01(\x0b\x32#.k8s.io.api.core.v1.ObjectReference\"\xa3\x01\n\x15StorageOSVolumeSource\x12\x12\n\nvolumeName\x18\x01 \x01(\t\x12\x17\n\x0fvolumeNamespace\x18\x02 \x01(\t\x12\x0e\n\x06\x66sType\x18\x03 \x01(\t\x12\x10\n\x08readOnly\x18\x04 \x01(\x08\x12;\n\tsecretRef\x18\x05 \x01(\x0b\x32(.k8s.io.api.core.v1.LocalObjectReference\"%\n\x06Sysctl\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"_\n\x0fTCPSocketAction\x12>\n\x04port\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.util.intstr.IntOrString\x12\x0c\n\x04host\x18\x02 \x01(\t\"r\n\x05Taint\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x0e\n\x06\x65\x66\x66\x65\x63t\x18\x03 \x01(\t\x12=\n\ttimeAdded\x18\x04 \x01(\x0b\x32*.k8s.io.apimachinery.pkg.apis.meta.v1.Time\"e\n\nToleration\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\x12\x0e\n\x06\x65\x66\x66\x65\x63t\x18\x04 \x01(\t\x12\x19\n\x11tolerationSeconds\x18\x05 \x01(\x03\"?\n TopologySelectorLabelRequirement\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0e\n\x06values\x18\x02 \x03(\t\"k\n\x14TopologySelectorTerm\x12S\n\x15matchLabelExpressions\x18\x01 \x03(\x0b\x32\x34.k8s.io.api.core.v1.TopologySelectorLabelRequirement\"\xa7\x01\n\x18TopologySpreadConstraint\x12\x0f\n\x07maxSkew\x18\x01 \x01(\x05\x12\x13\n\x0btopologyKey\x18\x02 \x01(\t\x12\x19\n\x11whenUnsatisfiable\x18\x03 \x01(\t\x12J\n\rlabelSelector\x18\x04 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector\"I\n\x19TypedLocalObjectReference\x12\x10\n\x08\x61piGroup\x18\x01 \x01(\t\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\"N\n\x06Volume\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x36\n\x0cvolumeSource\x18\x02 \x01(\x0b\x32 .k8s.io.api.core.v1.VolumeSource\"0\n\x0cVolumeDevice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ndevicePath\x18\x02 \x01(\t\"\x80\x01\n\x0bVolumeMount\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08readOnly\x18\x02 \x01(\x08\x12\x11\n\tmountPath\x18\x03 \x01(\t\x12\x0f\n\x07subPath\x18\x04 \x01(\t\x12\x18\n\x10mountPropagation\x18\x05 \x01(\t\x12\x13\n\x0bsubPathExpr\x18\x06 \x01(\t\"H\n\x12VolumeNodeAffinity\x12\x32\n\x08required\x18\x01 \x01(\x0b\x32 .k8s.io.api.core.v1.NodeSelector\"\x94\x02\n\x10VolumeProjection\x12\x34\n\x06secret\x18\x01 \x01(\x0b\x32$.k8s.io.api.core.v1.SecretProjection\x12>\n\x0b\x64ownwardAPI\x18\x02 \x01(\x0b\x32).k8s.io.api.core.v1.DownwardAPIProjection\x12:\n\tconfigMap\x18\x03 \x01(\x0b\x32\'.k8s.io.api.core.v1.ConfigMapProjection\x12N\n\x13serviceAccountToken\x18\x04 \x01(\x0b\x32\x31.k8s.io.api.core.v1.ServiceAccountTokenProjection\"\x99\x0e\n\x0cVolumeSource\x12:\n\x08hostPath\x18\x01 \x01(\x0b\x32(.k8s.io.api.core.v1.HostPathVolumeSource\x12:\n\x08\x65mptyDir\x18\x02 \x01(\x0b\x32(.k8s.io.api.core.v1.EmptyDirVolumeSource\x12L\n\x11gcePersistentDisk\x18\x03 \x01(\x0b\x32\x31.k8s.io.api.core.v1.GCEPersistentDiskVolumeSource\x12R\n\x14\x61wsElasticBlockStore\x18\x04 \x01(\x0b\x32\x34.k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource\x12\x38\n\x07gitRepo\x18\x05 \x01(\x0b\x32\'.k8s.io.api.core.v1.GitRepoVolumeSource\x12\x36\n\x06secret\x18\x06 \x01(\x0b\x32&.k8s.io.api.core.v1.SecretVolumeSource\x12\x30\n\x03nfs\x18\x07 \x01(\x0b\x32#.k8s.io.api.core.v1.NFSVolumeSource\x12\x34\n\x05iscsi\x18\x08 \x01(\x0b\x32%.k8s.io.api.core.v1.ISCSIVolumeSource\x12<\n\tglusterfs\x18\t \x01(\x0b\x32).k8s.io.api.core.v1.GlusterfsVolumeSource\x12T\n\x15persistentVolumeClaim\x18\n \x01(\x0b\x32\x35.k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource\x12\x30\n\x03rbd\x18\x0b \x01(\x0b\x32#.k8s.io.api.core.v1.RBDVolumeSource\x12\x38\n\nflexVolume\x18\x0c \x01(\x0b\x32$.k8s.io.api.core.v1.FlexVolumeSource\x12\x36\n\x06\x63inder\x18\r \x01(\x0b\x32&.k8s.io.api.core.v1.CinderVolumeSource\x12\x36\n\x06\x63\x65phfs\x18\x0e \x01(\x0b\x32&.k8s.io.api.core.v1.CephFSVolumeSource\x12\x38\n\x07\x66locker\x18\x0f \x01(\x0b\x32\'.k8s.io.api.core.v1.FlockerVolumeSource\x12@\n\x0b\x64ownwardAPI\x18\x10 \x01(\x0b\x32+.k8s.io.api.core.v1.DownwardAPIVolumeSource\x12.\n\x02\x66\x63\x18\x11 \x01(\x0b\x32\".k8s.io.api.core.v1.FCVolumeSource\x12<\n\tazureFile\x18\x12 \x01(\x0b\x32).k8s.io.api.core.v1.AzureFileVolumeSource\x12<\n\tconfigMap\x18\x13 \x01(\x0b\x32).k8s.io.api.core.v1.ConfigMapVolumeSource\x12I\n\rvsphereVolume\x18\x14 \x01(\x0b\x32\x32.k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource\x12\x38\n\x07quobyte\x18\x15 \x01(\x0b\x32\'.k8s.io.api.core.v1.QuobyteVolumeSource\x12<\n\tazureDisk\x18\x16 \x01(\x0b\x32).k8s.io.api.core.v1.AzureDiskVolumeSource\x12R\n\x14photonPersistentDisk\x18\x17 \x01(\x0b\x32\x34.k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource\x12<\n\tprojected\x18\x1a \x01(\x0b\x32).k8s.io.api.core.v1.ProjectedVolumeSource\x12@\n\x0eportworxVolume\x18\x18 \x01(\x0b\x32(.k8s.io.api.core.v1.PortworxVolumeSource\x12\x38\n\x07scaleIO\x18\x19 \x01(\x0b\x32\'.k8s.io.api.core.v1.ScaleIOVolumeSource\x12<\n\tstorageos\x18\x1b \x01(\x0b\x32).k8s.io.api.core.v1.StorageOSVolumeSource\x12\x30\n\x03\x63si\x18\x1c \x01(\x0b\x32#.k8s.io.api.core.v1.CSIVolumeSource\x12<\n\tephemeral\x18\x1d \x01(\x0b\x32).k8s.io.api.core.v1.EphemeralVolumeSource\"x\n\x1eVsphereVirtualDiskVolumeSource\x12\x12\n\nvolumePath\x18\x01 \x01(\t\x12\x0e\n\x06\x66sType\x18\x02 \x01(\t\x12\x19\n\x11storagePolicyName\x18\x03 \x01(\t\x12\x17\n\x0fstoragePolicyID\x18\x04 \x01(\t\"g\n\x17WeightedPodAffinityTerm\x12\x0e\n\x06weight\x18\x01 \x01(\x05\x12<\n\x0fpodAffinityTerm\x18\x02 \x01(\x0b\x32#.k8s.io.api.core.v1.PodAffinityTerm\"\x87\x01\n\x1dWindowsSecurityContextOptions\x12\x1e\n\x16gmsaCredentialSpecName\x18\x01 \x01(\t\x12\x1a\n\x12gmsaCredentialSpec\x18\x02 \x01(\t\x12\x15\n\rrunAsUserName\x18\x03 \x01(\t\x12\x13\n\x0bhostProcess\x18\x04 \x01(\x08\x42\x04Z\x02v1')



_AWSELASTICBLOCKSTOREVOLUMESOURCE = DESCRIPTOR.message_types_by_name['AWSElasticBlockStoreVolumeSource']
_AFFINITY = DESCRIPTOR.message_types_by_name['Affinity']
_ATTACHEDVOLUME = DESCRIPTOR.message_types_by_name['AttachedVolume']
_AVOIDPODS = DESCRIPTOR.message_types_by_name['AvoidPods']
_AZUREDISKVOLUMESOURCE = DESCRIPTOR.message_types_by_name['AzureDiskVolumeSource']
_AZUREFILEPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['AzureFilePersistentVolumeSource']
_AZUREFILEVOLUMESOURCE = DESCRIPTOR.message_types_by_name['AzureFileVolumeSource']
_BINDING = DESCRIPTOR.message_types_by_name['Binding']
_CSIPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CSIPersistentVolumeSource']
_CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY = _CSIPERSISTENTVOLUMESOURCE.nested_types_by_name['VolumeAttributesEntry']
_CSIVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CSIVolumeSource']
_CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY = _CSIVOLUMESOURCE.nested_types_by_name['VolumeAttributesEntry']
_CAPABILITIES = DESCRIPTOR.message_types_by_name['Capabilities']
_CEPHFSPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CephFSPersistentVolumeSource']
_CEPHFSVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CephFSVolumeSource']
_CINDERPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CinderPersistentVolumeSource']
_CINDERVOLUMESOURCE = DESCRIPTOR.message_types_by_name['CinderVolumeSource']
_CLIENTIPCONFIG = DESCRIPTOR.message_types_by_name['ClientIPConfig']
_COMPONENTCONDITION = DESCRIPTOR.message_types_by_name['ComponentCondition']
_COMPONENTSTATUS = DESCRIPTOR.message_types_by_name['ComponentStatus']
_COMPONENTSTATUSLIST = DESCRIPTOR.message_types_by_name['ComponentStatusList']
_CONFIGMAP = DESCRIPTOR.message_types_by_name['ConfigMap']
_CONFIGMAP_DATAENTRY = _CONFIGMAP.nested_types_by_name['DataEntry']
_CONFIGMAP_BINARYDATAENTRY = _CONFIGMAP.nested_types_by_name['BinaryDataEntry']
_CONFIGMAPENVSOURCE = DESCRIPTOR.message_types_by_name['ConfigMapEnvSource']
_CONFIGMAPKEYSELECTOR = DESCRIPTOR.message_types_by_name['ConfigMapKeySelector']
_CONFIGMAPLIST = DESCRIPTOR.message_types_by_name['ConfigMapList']
_CONFIGMAPNODECONFIGSOURCE = DESCRIPTOR.message_types_by_name['ConfigMapNodeConfigSource']
_CONFIGMAPPROJECTION = DESCRIPTOR.message_types_by_name['ConfigMapProjection']
_CONFIGMAPVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ConfigMapVolumeSource']
_CONTAINER = DESCRIPTOR.message_types_by_name['Container']
_CONTAINERIMAGE = DESCRIPTOR.message_types_by_name['ContainerImage']
_CONTAINERPORT = DESCRIPTOR.message_types_by_name['ContainerPort']
_CONTAINERSTATE = DESCRIPTOR.message_types_by_name['ContainerState']
_CONTAINERSTATERUNNING = DESCRIPTOR.message_types_by_name['ContainerStateRunning']
_CONTAINERSTATETERMINATED = DESCRIPTOR.message_types_by_name['ContainerStateTerminated']
_CONTAINERSTATEWAITING = DESCRIPTOR.message_types_by_name['ContainerStateWaiting']
_CONTAINERSTATUS = DESCRIPTOR.message_types_by_name['ContainerStatus']
_DAEMONENDPOINT = DESCRIPTOR.message_types_by_name['DaemonEndpoint']
_DOWNWARDAPIPROJECTION = DESCRIPTOR.message_types_by_name['DownwardAPIProjection']
_DOWNWARDAPIVOLUMEFILE = DESCRIPTOR.message_types_by_name['DownwardAPIVolumeFile']
_DOWNWARDAPIVOLUMESOURCE = DESCRIPTOR.message_types_by_name['DownwardAPIVolumeSource']
_EMPTYDIRVOLUMESOURCE = DESCRIPTOR.message_types_by_name['EmptyDirVolumeSource']
_ENDPOINTADDRESS = DESCRIPTOR.message_types_by_name['EndpointAddress']
_ENDPOINTPORT = DESCRIPTOR.message_types_by_name['EndpointPort']
_ENDPOINTSUBSET = DESCRIPTOR.message_types_by_name['EndpointSubset']
_ENDPOINTS = DESCRIPTOR.message_types_by_name['Endpoints']
_ENDPOINTSLIST = DESCRIPTOR.message_types_by_name['EndpointsList']
_ENVFROMSOURCE = DESCRIPTOR.message_types_by_name['EnvFromSource']
_ENVVAR = DESCRIPTOR.message_types_by_name['EnvVar']
_ENVVARSOURCE = DESCRIPTOR.message_types_by_name['EnvVarSource']
_EPHEMERALCONTAINER = DESCRIPTOR.message_types_by_name['EphemeralContainer']
_EPHEMERALCONTAINERCOMMON = DESCRIPTOR.message_types_by_name['EphemeralContainerCommon']
_EPHEMERALVOLUMESOURCE = DESCRIPTOR.message_types_by_name['EphemeralVolumeSource']
_EVENT = DESCRIPTOR.message_types_by_name['Event']
_EVENTLIST = DESCRIPTOR.message_types_by_name['EventList']
_EVENTSERIES = DESCRIPTOR.message_types_by_name['EventSeries']
_EVENTSOURCE = DESCRIPTOR.message_types_by_name['EventSource']
_EXECACTION = DESCRIPTOR.message_types_by_name['ExecAction']
_FCVOLUMESOURCE = DESCRIPTOR.message_types_by_name['FCVolumeSource']
_FLEXPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['FlexPersistentVolumeSource']
_FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY = _FLEXPERSISTENTVOLUMESOURCE.nested_types_by_name['OptionsEntry']
_FLEXVOLUMESOURCE = DESCRIPTOR.message_types_by_name['FlexVolumeSource']
_FLEXVOLUMESOURCE_OPTIONSENTRY = _FLEXVOLUMESOURCE.nested_types_by_name['OptionsEntry']
_FLOCKERVOLUMESOURCE = DESCRIPTOR.message_types_by_name['FlockerVolumeSource']
_GCEPERSISTENTDISKVOLUMESOURCE = DESCRIPTOR.message_types_by_name['GCEPersistentDiskVolumeSource']
_GITREPOVOLUMESOURCE = DESCRIPTOR.message_types_by_name['GitRepoVolumeSource']
_GLUSTERFSPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['GlusterfsPersistentVolumeSource']
_GLUSTERFSVOLUMESOURCE = DESCRIPTOR.message_types_by_name['GlusterfsVolumeSource']
_HTTPGETACTION = DESCRIPTOR.message_types_by_name['HTTPGetAction']
_HTTPHEADER = DESCRIPTOR.message_types_by_name['HTTPHeader']
_HANDLER = DESCRIPTOR.message_types_by_name['Handler']
_HOSTALIAS = DESCRIPTOR.message_types_by_name['HostAlias']
_HOSTPATHVOLUMESOURCE = DESCRIPTOR.message_types_by_name['HostPathVolumeSource']
_ISCSIPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ISCSIPersistentVolumeSource']
_ISCSIVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ISCSIVolumeSource']
_KEYTOPATH = DESCRIPTOR.message_types_by_name['KeyToPath']
_LIFECYCLE = DESCRIPTOR.message_types_by_name['Lifecycle']
_LIMITRANGE = DESCRIPTOR.message_types_by_name['LimitRange']
_LIMITRANGEITEM = DESCRIPTOR.message_types_by_name['LimitRangeItem']
_LIMITRANGEITEM_MAXENTRY = _LIMITRANGEITEM.nested_types_by_name['MaxEntry']
_LIMITRANGEITEM_MINENTRY = _LIMITRANGEITEM.nested_types_by_name['MinEntry']
_LIMITRANGEITEM_DEFAULTENTRY = _LIMITRANGEITEM.nested_types_by_name['DefaultEntry']
_LIMITRANGEITEM_DEFAULTREQUESTENTRY = _LIMITRANGEITEM.nested_types_by_name['DefaultRequestEntry']
_LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY = _LIMITRANGEITEM.nested_types_by_name['MaxLimitRequestRatioEntry']
_LIMITRANGELIST = DESCRIPTOR.message_types_by_name['LimitRangeList']
_LIMITRANGESPEC = DESCRIPTOR.message_types_by_name['LimitRangeSpec']
_LIST = DESCRIPTOR.message_types_by_name['List']
_LOADBALANCERINGRESS = DESCRIPTOR.message_types_by_name['LoadBalancerIngress']
_LOADBALANCERSTATUS = DESCRIPTOR.message_types_by_name['LoadBalancerStatus']
_LOCALOBJECTREFERENCE = DESCRIPTOR.message_types_by_name['LocalObjectReference']
_LOCALVOLUMESOURCE = DESCRIPTOR.message_types_by_name['LocalVolumeSource']
_NFSVOLUMESOURCE = DESCRIPTOR.message_types_by_name['NFSVolumeSource']
_NAMESPACE = DESCRIPTOR.message_types_by_name['Namespace']
_NAMESPACECONDITION = DESCRIPTOR.message_types_by_name['NamespaceCondition']
_NAMESPACELIST = DESCRIPTOR.message_types_by_name['NamespaceList']
_NAMESPACESPEC = DESCRIPTOR.message_types_by_name['NamespaceSpec']
_NAMESPACESTATUS = DESCRIPTOR.message_types_by_name['NamespaceStatus']
_NODE = DESCRIPTOR.message_types_by_name['Node']
_NODEADDRESS = DESCRIPTOR.message_types_by_name['NodeAddress']
_NODEAFFINITY = DESCRIPTOR.message_types_by_name['NodeAffinity']
_NODECONDITION = DESCRIPTOR.message_types_by_name['NodeCondition']
_NODECONFIGSOURCE = DESCRIPTOR.message_types_by_name['NodeConfigSource']
_NODECONFIGSTATUS = DESCRIPTOR.message_types_by_name['NodeConfigStatus']
_NODEDAEMONENDPOINTS = DESCRIPTOR.message_types_by_name['NodeDaemonEndpoints']
_NODELIST = DESCRIPTOR.message_types_by_name['NodeList']
_NODEPROXYOPTIONS = DESCRIPTOR.message_types_by_name['NodeProxyOptions']
_NODERESOURCES = DESCRIPTOR.message_types_by_name['NodeResources']
_NODERESOURCES_CAPACITYENTRY = _NODERESOURCES.nested_types_by_name['CapacityEntry']
_NODESELECTOR = DESCRIPTOR.message_types_by_name['NodeSelector']
_NODESELECTORREQUIREMENT = DESCRIPTOR.message_types_by_name['NodeSelectorRequirement']
_NODESELECTORTERM = DESCRIPTOR.message_types_by_name['NodeSelectorTerm']
_NODESPEC = DESCRIPTOR.message_types_by_name['NodeSpec']
_NODESTATUS = DESCRIPTOR.message_types_by_name['NodeStatus']
_NODESTATUS_CAPACITYENTRY = _NODESTATUS.nested_types_by_name['CapacityEntry']
_NODESTATUS_ALLOCATABLEENTRY = _NODESTATUS.nested_types_by_name['AllocatableEntry']
_NODESYSTEMINFO = DESCRIPTOR.message_types_by_name['NodeSystemInfo']
_OBJECTFIELDSELECTOR = DESCRIPTOR.message_types_by_name['ObjectFieldSelector']
_OBJECTREFERENCE = DESCRIPTOR.message_types_by_name['ObjectReference']
_PERSISTENTVOLUME = DESCRIPTOR.message_types_by_name['PersistentVolume']
_PERSISTENTVOLUMECLAIM = DESCRIPTOR.message_types_by_name['PersistentVolumeClaim']
_PERSISTENTVOLUMECLAIMCONDITION = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimCondition']
_PERSISTENTVOLUMECLAIMLIST = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimList']
_PERSISTENTVOLUMECLAIMSPEC = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimSpec']
_PERSISTENTVOLUMECLAIMSTATUS = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimStatus']
_PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY = _PERSISTENTVOLUMECLAIMSTATUS.nested_types_by_name['CapacityEntry']
_PERSISTENTVOLUMECLAIMTEMPLATE = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimTemplate']
_PERSISTENTVOLUMECLAIMVOLUMESOURCE = DESCRIPTOR.message_types_by_name['PersistentVolumeClaimVolumeSource']
_PERSISTENTVOLUMELIST = DESCRIPTOR.message_types_by_name['PersistentVolumeList']
_PERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['PersistentVolumeSource']
_PERSISTENTVOLUMESPEC = DESCRIPTOR.message_types_by_name['PersistentVolumeSpec']
_PERSISTENTVOLUMESPEC_CAPACITYENTRY = _PERSISTENTVOLUMESPEC.nested_types_by_name['CapacityEntry']
_PERSISTENTVOLUMESTATUS = DESCRIPTOR.message_types_by_name['PersistentVolumeStatus']
_PHOTONPERSISTENTDISKVOLUMESOURCE = DESCRIPTOR.message_types_by_name['PhotonPersistentDiskVolumeSource']
_POD = DESCRIPTOR.message_types_by_name['Pod']
_PODAFFINITY = DESCRIPTOR.message_types_by_name['PodAffinity']
_PODAFFINITYTERM = DESCRIPTOR.message_types_by_name['PodAffinityTerm']
_PODANTIAFFINITY = DESCRIPTOR.message_types_by_name['PodAntiAffinity']
_PODATTACHOPTIONS = DESCRIPTOR.message_types_by_name['PodAttachOptions']
_PODCONDITION = DESCRIPTOR.message_types_by_name['PodCondition']
_PODDNSCONFIG = DESCRIPTOR.message_types_by_name['PodDNSConfig']
_PODDNSCONFIGOPTION = DESCRIPTOR.message_types_by_name['PodDNSConfigOption']
_PODEXECOPTIONS = DESCRIPTOR.message_types_by_name['PodExecOptions']
_PODIP = DESCRIPTOR.message_types_by_name['PodIP']
_PODLIST = DESCRIPTOR.message_types_by_name['PodList']
_PODLOGOPTIONS = DESCRIPTOR.message_types_by_name['PodLogOptions']
_PODPORTFORWARDOPTIONS = DESCRIPTOR.message_types_by_name['PodPortForwardOptions']
_PODPROXYOPTIONS = DESCRIPTOR.message_types_by_name['PodProxyOptions']
_PODREADINESSGATE = DESCRIPTOR.message_types_by_name['PodReadinessGate']
_PODSECURITYCONTEXT = DESCRIPTOR.message_types_by_name['PodSecurityContext']
_PODSIGNATURE = DESCRIPTOR.message_types_by_name['PodSignature']
_PODSPEC = DESCRIPTOR.message_types_by_name['PodSpec']
_PODSPEC_NODESELECTORENTRY = _PODSPEC.nested_types_by_name['NodeSelectorEntry']
_PODSPEC_OVERHEADENTRY = _PODSPEC.nested_types_by_name['OverheadEntry']
_PODSTATUS = DESCRIPTOR.message_types_by_name['PodStatus']
_PODSTATUSRESULT = DESCRIPTOR.message_types_by_name['PodStatusResult']
_PODTEMPLATE = DESCRIPTOR.message_types_by_name['PodTemplate']
_PODTEMPLATELIST = DESCRIPTOR.message_types_by_name['PodTemplateList']
_PODTEMPLATESPEC = DESCRIPTOR.message_types_by_name['PodTemplateSpec']
_PORTSTATUS = DESCRIPTOR.message_types_by_name['PortStatus']
_PORTWORXVOLUMESOURCE = DESCRIPTOR.message_types_by_name['PortworxVolumeSource']
_PRECONDITIONS = DESCRIPTOR.message_types_by_name['Preconditions']
_PREFERAVOIDPODSENTRY = DESCRIPTOR.message_types_by_name['PreferAvoidPodsEntry']
_PREFERREDSCHEDULINGTERM = DESCRIPTOR.message_types_by_name['PreferredSchedulingTerm']
_PROBE = DESCRIPTOR.message_types_by_name['Probe']
_PROJECTEDVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ProjectedVolumeSource']
_QUOBYTEVOLUMESOURCE = DESCRIPTOR.message_types_by_name['QuobyteVolumeSource']
_RBDPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['RBDPersistentVolumeSource']
_RBDVOLUMESOURCE = DESCRIPTOR.message_types_by_name['RBDVolumeSource']
_RANGEALLOCATION = DESCRIPTOR.message_types_by_name['RangeAllocation']
_REPLICATIONCONTROLLER = DESCRIPTOR.message_types_by_name['ReplicationController']
_REPLICATIONCONTROLLERCONDITION = DESCRIPTOR.message_types_by_name['ReplicationControllerCondition']
_REPLICATIONCONTROLLERLIST = DESCRIPTOR.message_types_by_name['ReplicationControllerList']
_REPLICATIONCONTROLLERSPEC = DESCRIPTOR.message_types_by_name['ReplicationControllerSpec']
_REPLICATIONCONTROLLERSPEC_SELECTORENTRY = _REPLICATIONCONTROLLERSPEC.nested_types_by_name['SelectorEntry']
_REPLICATIONCONTROLLERSTATUS = DESCRIPTOR.message_types_by_name['ReplicationControllerStatus']
_RESOURCEFIELDSELECTOR = DESCRIPTOR.message_types_by_name['ResourceFieldSelector']
_RESOURCEQUOTA = DESCRIPTOR.message_types_by_name['ResourceQuota']
_RESOURCEQUOTALIST = DESCRIPTOR.message_types_by_name['ResourceQuotaList']
_RESOURCEQUOTASPEC = DESCRIPTOR.message_types_by_name['ResourceQuotaSpec']
_RESOURCEQUOTASPEC_HARDENTRY = _RESOURCEQUOTASPEC.nested_types_by_name['HardEntry']
_RESOURCEQUOTASTATUS = DESCRIPTOR.message_types_by_name['ResourceQuotaStatus']
_RESOURCEQUOTASTATUS_HARDENTRY = _RESOURCEQUOTASTATUS.nested_types_by_name['HardEntry']
_RESOURCEQUOTASTATUS_USEDENTRY = _RESOURCEQUOTASTATUS.nested_types_by_name['UsedEntry']
_RESOURCEREQUIREMENTS = DESCRIPTOR.message_types_by_name['ResourceRequirements']
_RESOURCEREQUIREMENTS_LIMITSENTRY = _RESOURCEREQUIREMENTS.nested_types_by_name['LimitsEntry']
_RESOURCEREQUIREMENTS_REQUESTSENTRY = _RESOURCEREQUIREMENTS.nested_types_by_name['RequestsEntry']
_SELINUXOPTIONS = DESCRIPTOR.message_types_by_name['SELinuxOptions']
_SCALEIOPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ScaleIOPersistentVolumeSource']
_SCALEIOVOLUMESOURCE = DESCRIPTOR.message_types_by_name['ScaleIOVolumeSource']
_SCOPESELECTOR = DESCRIPTOR.message_types_by_name['ScopeSelector']
_SCOPEDRESOURCESELECTORREQUIREMENT = DESCRIPTOR.message_types_by_name['ScopedResourceSelectorRequirement']
_SECCOMPPROFILE = DESCRIPTOR.message_types_by_name['SeccompProfile']
_SECRET = DESCRIPTOR.message_types_by_name['Secret']
_SECRET_DATAENTRY = _SECRET.nested_types_by_name['DataEntry']
_SECRET_STRINGDATAENTRY = _SECRET.nested_types_by_name['StringDataEntry']
_SECRETENVSOURCE = DESCRIPTOR.message_types_by_name['SecretEnvSource']
_SECRETKEYSELECTOR = DESCRIPTOR.message_types_by_name['SecretKeySelector']
_SECRETLIST = DESCRIPTOR.message_types_by_name['SecretList']
_SECRETPROJECTION = DESCRIPTOR.message_types_by_name['SecretProjection']
_SECRETREFERENCE = DESCRIPTOR.message_types_by_name['SecretReference']
_SECRETVOLUMESOURCE = DESCRIPTOR.message_types_by_name['SecretVolumeSource']
_SECURITYCONTEXT = DESCRIPTOR.message_types_by_name['SecurityContext']
_SERIALIZEDREFERENCE = DESCRIPTOR.message_types_by_name['SerializedReference']
_SERVICE = DESCRIPTOR.message_types_by_name['Service']
_SERVICEACCOUNT = DESCRIPTOR.message_types_by_name['ServiceAccount']
_SERVICEACCOUNTLIST = DESCRIPTOR.message_types_by_name['ServiceAccountList']
_SERVICEACCOUNTTOKENPROJECTION = DESCRIPTOR.message_types_by_name['ServiceAccountTokenProjection']
_SERVICELIST = DESCRIPTOR.message_types_by_name['ServiceList']
_SERVICEPORT = DESCRIPTOR.message_types_by_name['ServicePort']
_SERVICEPROXYOPTIONS = DESCRIPTOR.message_types_by_name['ServiceProxyOptions']
_SERVICESPEC = DESCRIPTOR.message_types_by_name['ServiceSpec']
_SERVICESPEC_SELECTORENTRY = _SERVICESPEC.nested_types_by_name['SelectorEntry']
_SERVICESTATUS = DESCRIPTOR.message_types_by_name['ServiceStatus']
_SESSIONAFFINITYCONFIG = DESCRIPTOR.message_types_by_name['SessionAffinityConfig']
_STORAGEOSPERSISTENTVOLUMESOURCE = DESCRIPTOR.message_types_by_name['StorageOSPersistentVolumeSource']
_STORAGEOSVOLUMESOURCE = DESCRIPTOR.message_types_by_name['StorageOSVolumeSource']
_SYSCTL = DESCRIPTOR.message_types_by_name['Sysctl']
_TCPSOCKETACTION = DESCRIPTOR.message_types_by_name['TCPSocketAction']
_TAINT = DESCRIPTOR.message_types_by_name['Taint']
_TOLERATION = DESCRIPTOR.message_types_by_name['Toleration']
_TOPOLOGYSELECTORLABELREQUIREMENT = DESCRIPTOR.message_types_by_name['TopologySelectorLabelRequirement']
_TOPOLOGYSELECTORTERM = DESCRIPTOR.message_types_by_name['TopologySelectorTerm']
_TOPOLOGYSPREADCONSTRAINT = DESCRIPTOR.message_types_by_name['TopologySpreadConstraint']
_TYPEDLOCALOBJECTREFERENCE = DESCRIPTOR.message_types_by_name['TypedLocalObjectReference']
_VOLUME = DESCRIPTOR.message_types_by_name['Volume']
_VOLUMEDEVICE = DESCRIPTOR.message_types_by_name['VolumeDevice']
_VOLUMEMOUNT = DESCRIPTOR.message_types_by_name['VolumeMount']
_VOLUMENODEAFFINITY = DESCRIPTOR.message_types_by_name['VolumeNodeAffinity']
_VOLUMEPROJECTION = DESCRIPTOR.message_types_by_name['VolumeProjection']
_VOLUMESOURCE = DESCRIPTOR.message_types_by_name['VolumeSource']
_VSPHEREVIRTUALDISKVOLUMESOURCE = DESCRIPTOR.message_types_by_name['VsphereVirtualDiskVolumeSource']
_WEIGHTEDPODAFFINITYTERM = DESCRIPTOR.message_types_by_name['WeightedPodAffinityTerm']
_WINDOWSSECURITYCONTEXTOPTIONS = DESCRIPTOR.message_types_by_name['WindowsSecurityContextOptions']
AWSElasticBlockStoreVolumeSource = _reflection.GeneratedProtocolMessageType('AWSElasticBlockStoreVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _AWSELASTICBLOCKSTOREVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource)
  })
_sym_db.RegisterMessage(AWSElasticBlockStoreVolumeSource)

Affinity = _reflection.GeneratedProtocolMessageType('Affinity', (_message.Message,), {
  'DESCRIPTOR' : _AFFINITY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Affinity)
  })
_sym_db.RegisterMessage(Affinity)

AttachedVolume = _reflection.GeneratedProtocolMessageType('AttachedVolume', (_message.Message,), {
  'DESCRIPTOR' : _ATTACHEDVOLUME,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AttachedVolume)
  })
_sym_db.RegisterMessage(AttachedVolume)

AvoidPods = _reflection.GeneratedProtocolMessageType('AvoidPods', (_message.Message,), {
  'DESCRIPTOR' : _AVOIDPODS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AvoidPods)
  })
_sym_db.RegisterMessage(AvoidPods)

AzureDiskVolumeSource = _reflection.GeneratedProtocolMessageType('AzureDiskVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _AZUREDISKVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AzureDiskVolumeSource)
  })
_sym_db.RegisterMessage(AzureDiskVolumeSource)

AzureFilePersistentVolumeSource = _reflection.GeneratedProtocolMessageType('AzureFilePersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _AZUREFILEPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AzureFilePersistentVolumeSource)
  })
_sym_db.RegisterMessage(AzureFilePersistentVolumeSource)

AzureFileVolumeSource = _reflection.GeneratedProtocolMessageType('AzureFileVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _AZUREFILEVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.AzureFileVolumeSource)
  })
_sym_db.RegisterMessage(AzureFileVolumeSource)

Binding = _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), {
  'DESCRIPTOR' : _BINDING,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Binding)
  })
_sym_db.RegisterMessage(Binding)

CSIPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('CSIPersistentVolumeSource', (_message.Message,), {

  'VolumeAttributesEntry' : _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), {
    'DESCRIPTOR' : _CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CSIPersistentVolumeSource.VolumeAttributesEntry)
    })
  ,
  'DESCRIPTOR' : _CSIPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CSIPersistentVolumeSource)
  })
_sym_db.RegisterMessage(CSIPersistentVolumeSource)
_sym_db.RegisterMessage(CSIPersistentVolumeSource.VolumeAttributesEntry)

CSIVolumeSource = _reflection.GeneratedProtocolMessageType('CSIVolumeSource', (_message.Message,), {

  'VolumeAttributesEntry' : _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), {
    'DESCRIPTOR' : _CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CSIVolumeSource.VolumeAttributesEntry)
    })
  ,
  'DESCRIPTOR' : _CSIVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CSIVolumeSource)
  })
_sym_db.RegisterMessage(CSIVolumeSource)
_sym_db.RegisterMessage(CSIVolumeSource.VolumeAttributesEntry)

Capabilities = _reflection.GeneratedProtocolMessageType('Capabilities', (_message.Message,), {
  'DESCRIPTOR' : _CAPABILITIES,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Capabilities)
  })
_sym_db.RegisterMessage(Capabilities)

CephFSPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('CephFSPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _CEPHFSPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CephFSPersistentVolumeSource)
  })
_sym_db.RegisterMessage(CephFSPersistentVolumeSource)

CephFSVolumeSource = _reflection.GeneratedProtocolMessageType('CephFSVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _CEPHFSVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CephFSVolumeSource)
  })
_sym_db.RegisterMessage(CephFSVolumeSource)

CinderPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('CinderPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _CINDERPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CinderPersistentVolumeSource)
  })
_sym_db.RegisterMessage(CinderPersistentVolumeSource)

CinderVolumeSource = _reflection.GeneratedProtocolMessageType('CinderVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _CINDERVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.CinderVolumeSource)
  })
_sym_db.RegisterMessage(CinderVolumeSource)

ClientIPConfig = _reflection.GeneratedProtocolMessageType('ClientIPConfig', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTIPCONFIG,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ClientIPConfig)
  })
_sym_db.RegisterMessage(ClientIPConfig)

ComponentCondition = _reflection.GeneratedProtocolMessageType('ComponentCondition', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTCONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ComponentCondition)
  })
_sym_db.RegisterMessage(ComponentCondition)

ComponentStatus = _reflection.GeneratedProtocolMessageType('ComponentStatus', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ComponentStatus)
  })
_sym_db.RegisterMessage(ComponentStatus)

ComponentStatusList = _reflection.GeneratedProtocolMessageType('ComponentStatusList', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTSTATUSLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ComponentStatusList)
  })
_sym_db.RegisterMessage(ComponentStatusList)

ConfigMap = _reflection.GeneratedProtocolMessageType('ConfigMap', (_message.Message,), {

  'DataEntry' : _reflection.GeneratedProtocolMessageType('DataEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONFIGMAP_DATAENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMap.DataEntry)
    })
  ,

  'BinaryDataEntry' : _reflection.GeneratedProtocolMessageType('BinaryDataEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONFIGMAP_BINARYDATAENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMap.BinaryDataEntry)
    })
  ,
  'DESCRIPTOR' : _CONFIGMAP,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMap)
  })
_sym_db.RegisterMessage(ConfigMap)
_sym_db.RegisterMessage(ConfigMap.DataEntry)
_sym_db.RegisterMessage(ConfigMap.BinaryDataEntry)

ConfigMapEnvSource = _reflection.GeneratedProtocolMessageType('ConfigMapEnvSource', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPENVSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapEnvSource)
  })
_sym_db.RegisterMessage(ConfigMapEnvSource)

ConfigMapKeySelector = _reflection.GeneratedProtocolMessageType('ConfigMapKeySelector', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPKEYSELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapKeySelector)
  })
_sym_db.RegisterMessage(ConfigMapKeySelector)

ConfigMapList = _reflection.GeneratedProtocolMessageType('ConfigMapList', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapList)
  })
_sym_db.RegisterMessage(ConfigMapList)

ConfigMapNodeConfigSource = _reflection.GeneratedProtocolMessageType('ConfigMapNodeConfigSource', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPNODECONFIGSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapNodeConfigSource)
  })
_sym_db.RegisterMessage(ConfigMapNodeConfigSource)

ConfigMapProjection = _reflection.GeneratedProtocolMessageType('ConfigMapProjection', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPPROJECTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapProjection)
  })
_sym_db.RegisterMessage(ConfigMapProjection)

ConfigMapVolumeSource = _reflection.GeneratedProtocolMessageType('ConfigMapVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGMAPVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ConfigMapVolumeSource)
  })
_sym_db.RegisterMessage(ConfigMapVolumeSource)

Container = _reflection.GeneratedProtocolMessageType('Container', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINER,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Container)
  })
_sym_db.RegisterMessage(Container)

ContainerImage = _reflection.GeneratedProtocolMessageType('ContainerImage', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERIMAGE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerImage)
  })
_sym_db.RegisterMessage(ContainerImage)

ContainerPort = _reflection.GeneratedProtocolMessageType('ContainerPort', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERPORT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerPort)
  })
_sym_db.RegisterMessage(ContainerPort)

ContainerState = _reflection.GeneratedProtocolMessageType('ContainerState', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSTATE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerState)
  })
_sym_db.RegisterMessage(ContainerState)

ContainerStateRunning = _reflection.GeneratedProtocolMessageType('ContainerStateRunning', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSTATERUNNING,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerStateRunning)
  })
_sym_db.RegisterMessage(ContainerStateRunning)

ContainerStateTerminated = _reflection.GeneratedProtocolMessageType('ContainerStateTerminated', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSTATETERMINATED,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerStateTerminated)
  })
_sym_db.RegisterMessage(ContainerStateTerminated)

ContainerStateWaiting = _reflection.GeneratedProtocolMessageType('ContainerStateWaiting', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSTATEWAITING,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerStateWaiting)
  })
_sym_db.RegisterMessage(ContainerStateWaiting)

ContainerStatus = _reflection.GeneratedProtocolMessageType('ContainerStatus', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ContainerStatus)
  })
_sym_db.RegisterMessage(ContainerStatus)

DaemonEndpoint = _reflection.GeneratedProtocolMessageType('DaemonEndpoint', (_message.Message,), {
  'DESCRIPTOR' : _DAEMONENDPOINT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.DaemonEndpoint)
  })
_sym_db.RegisterMessage(DaemonEndpoint)

DownwardAPIProjection = _reflection.GeneratedProtocolMessageType('DownwardAPIProjection', (_message.Message,), {
  'DESCRIPTOR' : _DOWNWARDAPIPROJECTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.DownwardAPIProjection)
  })
_sym_db.RegisterMessage(DownwardAPIProjection)

DownwardAPIVolumeFile = _reflection.GeneratedProtocolMessageType('DownwardAPIVolumeFile', (_message.Message,), {
  'DESCRIPTOR' : _DOWNWARDAPIVOLUMEFILE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.DownwardAPIVolumeFile)
  })
_sym_db.RegisterMessage(DownwardAPIVolumeFile)

DownwardAPIVolumeSource = _reflection.GeneratedProtocolMessageType('DownwardAPIVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _DOWNWARDAPIVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.DownwardAPIVolumeSource)
  })
_sym_db.RegisterMessage(DownwardAPIVolumeSource)

EmptyDirVolumeSource = _reflection.GeneratedProtocolMessageType('EmptyDirVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYDIRVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EmptyDirVolumeSource)
  })
_sym_db.RegisterMessage(EmptyDirVolumeSource)

EndpointAddress = _reflection.GeneratedProtocolMessageType('EndpointAddress', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTADDRESS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EndpointAddress)
  })
_sym_db.RegisterMessage(EndpointAddress)

EndpointPort = _reflection.GeneratedProtocolMessageType('EndpointPort', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTPORT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EndpointPort)
  })
_sym_db.RegisterMessage(EndpointPort)

EndpointSubset = _reflection.GeneratedProtocolMessageType('EndpointSubset', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTSUBSET,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EndpointSubset)
  })
_sym_db.RegisterMessage(EndpointSubset)

Endpoints = _reflection.GeneratedProtocolMessageType('Endpoints', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Endpoints)
  })
_sym_db.RegisterMessage(Endpoints)

EndpointsList = _reflection.GeneratedProtocolMessageType('EndpointsList', (_message.Message,), {
  'DESCRIPTOR' : _ENDPOINTSLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EndpointsList)
  })
_sym_db.RegisterMessage(EndpointsList)

EnvFromSource = _reflection.GeneratedProtocolMessageType('EnvFromSource', (_message.Message,), {
  'DESCRIPTOR' : _ENVFROMSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EnvFromSource)
  })
_sym_db.RegisterMessage(EnvFromSource)

EnvVar = _reflection.GeneratedProtocolMessageType('EnvVar', (_message.Message,), {
  'DESCRIPTOR' : _ENVVAR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EnvVar)
  })
_sym_db.RegisterMessage(EnvVar)

EnvVarSource = _reflection.GeneratedProtocolMessageType('EnvVarSource', (_message.Message,), {
  'DESCRIPTOR' : _ENVVARSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EnvVarSource)
  })
_sym_db.RegisterMessage(EnvVarSource)

EphemeralContainer = _reflection.GeneratedProtocolMessageType('EphemeralContainer', (_message.Message,), {
  'DESCRIPTOR' : _EPHEMERALCONTAINER,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EphemeralContainer)
  })
_sym_db.RegisterMessage(EphemeralContainer)

EphemeralContainerCommon = _reflection.GeneratedProtocolMessageType('EphemeralContainerCommon', (_message.Message,), {
  'DESCRIPTOR' : _EPHEMERALCONTAINERCOMMON,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EphemeralContainerCommon)
  })
_sym_db.RegisterMessage(EphemeralContainerCommon)

EphemeralVolumeSource = _reflection.GeneratedProtocolMessageType('EphemeralVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _EPHEMERALVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EphemeralVolumeSource)
  })
_sym_db.RegisterMessage(EphemeralVolumeSource)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Event)
  })
_sym_db.RegisterMessage(Event)

EventList = _reflection.GeneratedProtocolMessageType('EventList', (_message.Message,), {
  'DESCRIPTOR' : _EVENTLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EventList)
  })
_sym_db.RegisterMessage(EventList)

EventSeries = _reflection.GeneratedProtocolMessageType('EventSeries', (_message.Message,), {
  'DESCRIPTOR' : _EVENTSERIES,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EventSeries)
  })
_sym_db.RegisterMessage(EventSeries)

EventSource = _reflection.GeneratedProtocolMessageType('EventSource', (_message.Message,), {
  'DESCRIPTOR' : _EVENTSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.EventSource)
  })
_sym_db.RegisterMessage(EventSource)

ExecAction = _reflection.GeneratedProtocolMessageType('ExecAction', (_message.Message,), {
  'DESCRIPTOR' : _EXECACTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ExecAction)
  })
_sym_db.RegisterMessage(ExecAction)

FCVolumeSource = _reflection.GeneratedProtocolMessageType('FCVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _FCVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FCVolumeSource)
  })
_sym_db.RegisterMessage(FCVolumeSource)

FlexPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('FlexPersistentVolumeSource', (_message.Message,), {

  'OptionsEntry' : _reflection.GeneratedProtocolMessageType('OptionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FlexPersistentVolumeSource.OptionsEntry)
    })
  ,
  'DESCRIPTOR' : _FLEXPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FlexPersistentVolumeSource)
  })
_sym_db.RegisterMessage(FlexPersistentVolumeSource)
_sym_db.RegisterMessage(FlexPersistentVolumeSource.OptionsEntry)

FlexVolumeSource = _reflection.GeneratedProtocolMessageType('FlexVolumeSource', (_message.Message,), {

  'OptionsEntry' : _reflection.GeneratedProtocolMessageType('OptionsEntry', (_message.Message,), {
    'DESCRIPTOR' : _FLEXVOLUMESOURCE_OPTIONSENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FlexVolumeSource.OptionsEntry)
    })
  ,
  'DESCRIPTOR' : _FLEXVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FlexVolumeSource)
  })
_sym_db.RegisterMessage(FlexVolumeSource)
_sym_db.RegisterMessage(FlexVolumeSource.OptionsEntry)

FlockerVolumeSource = _reflection.GeneratedProtocolMessageType('FlockerVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _FLOCKERVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.FlockerVolumeSource)
  })
_sym_db.RegisterMessage(FlockerVolumeSource)

GCEPersistentDiskVolumeSource = _reflection.GeneratedProtocolMessageType('GCEPersistentDiskVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _GCEPERSISTENTDISKVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.GCEPersistentDiskVolumeSource)
  })
_sym_db.RegisterMessage(GCEPersistentDiskVolumeSource)

GitRepoVolumeSource = _reflection.GeneratedProtocolMessageType('GitRepoVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _GITREPOVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.GitRepoVolumeSource)
  })
_sym_db.RegisterMessage(GitRepoVolumeSource)

GlusterfsPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('GlusterfsPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _GLUSTERFSPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.GlusterfsPersistentVolumeSource)
  })
_sym_db.RegisterMessage(GlusterfsPersistentVolumeSource)

GlusterfsVolumeSource = _reflection.GeneratedProtocolMessageType('GlusterfsVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _GLUSTERFSVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.GlusterfsVolumeSource)
  })
_sym_db.RegisterMessage(GlusterfsVolumeSource)

HTTPGetAction = _reflection.GeneratedProtocolMessageType('HTTPGetAction', (_message.Message,), {
  'DESCRIPTOR' : _HTTPGETACTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.HTTPGetAction)
  })
_sym_db.RegisterMessage(HTTPGetAction)

HTTPHeader = _reflection.GeneratedProtocolMessageType('HTTPHeader', (_message.Message,), {
  'DESCRIPTOR' : _HTTPHEADER,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.HTTPHeader)
  })
_sym_db.RegisterMessage(HTTPHeader)

Handler = _reflection.GeneratedProtocolMessageType('Handler', (_message.Message,), {
  'DESCRIPTOR' : _HANDLER,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Handler)
  })
_sym_db.RegisterMessage(Handler)

HostAlias = _reflection.GeneratedProtocolMessageType('HostAlias', (_message.Message,), {
  'DESCRIPTOR' : _HOSTALIAS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.HostAlias)
  })
_sym_db.RegisterMessage(HostAlias)

HostPathVolumeSource = _reflection.GeneratedProtocolMessageType('HostPathVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _HOSTPATHVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.HostPathVolumeSource)
  })
_sym_db.RegisterMessage(HostPathVolumeSource)

ISCSIPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('ISCSIPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _ISCSIPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ISCSIPersistentVolumeSource)
  })
_sym_db.RegisterMessage(ISCSIPersistentVolumeSource)

ISCSIVolumeSource = _reflection.GeneratedProtocolMessageType('ISCSIVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _ISCSIVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ISCSIVolumeSource)
  })
_sym_db.RegisterMessage(ISCSIVolumeSource)

KeyToPath = _reflection.GeneratedProtocolMessageType('KeyToPath', (_message.Message,), {
  'DESCRIPTOR' : _KEYTOPATH,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.KeyToPath)
  })
_sym_db.RegisterMessage(KeyToPath)

Lifecycle = _reflection.GeneratedProtocolMessageType('Lifecycle', (_message.Message,), {
  'DESCRIPTOR' : _LIFECYCLE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Lifecycle)
  })
_sym_db.RegisterMessage(Lifecycle)

LimitRange = _reflection.GeneratedProtocolMessageType('LimitRange', (_message.Message,), {
  'DESCRIPTOR' : _LIMITRANGE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRange)
  })
_sym_db.RegisterMessage(LimitRange)

LimitRangeItem = _reflection.GeneratedProtocolMessageType('LimitRangeItem', (_message.Message,), {

  'MaxEntry' : _reflection.GeneratedProtocolMessageType('MaxEntry', (_message.Message,), {
    'DESCRIPTOR' : _LIMITRANGEITEM_MAXENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem.MaxEntry)
    })
  ,

  'MinEntry' : _reflection.GeneratedProtocolMessageType('MinEntry', (_message.Message,), {
    'DESCRIPTOR' : _LIMITRANGEITEM_MINENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem.MinEntry)
    })
  ,

  'DefaultEntry' : _reflection.GeneratedProtocolMessageType('DefaultEntry', (_message.Message,), {
    'DESCRIPTOR' : _LIMITRANGEITEM_DEFAULTENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem.DefaultEntry)
    })
  ,

  'DefaultRequestEntry' : _reflection.GeneratedProtocolMessageType('DefaultRequestEntry', (_message.Message,), {
    'DESCRIPTOR' : _LIMITRANGEITEM_DEFAULTREQUESTENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem.DefaultRequestEntry)
    })
  ,

  'MaxLimitRequestRatioEntry' : _reflection.GeneratedProtocolMessageType('MaxLimitRequestRatioEntry', (_message.Message,), {
    'DESCRIPTOR' : _LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem.MaxLimitRequestRatioEntry)
    })
  ,
  'DESCRIPTOR' : _LIMITRANGEITEM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeItem)
  })
_sym_db.RegisterMessage(LimitRangeItem)
_sym_db.RegisterMessage(LimitRangeItem.MaxEntry)
_sym_db.RegisterMessage(LimitRangeItem.MinEntry)
_sym_db.RegisterMessage(LimitRangeItem.DefaultEntry)
_sym_db.RegisterMessage(LimitRangeItem.DefaultRequestEntry)
_sym_db.RegisterMessage(LimitRangeItem.MaxLimitRequestRatioEntry)

LimitRangeList = _reflection.GeneratedProtocolMessageType('LimitRangeList', (_message.Message,), {
  'DESCRIPTOR' : _LIMITRANGELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeList)
  })
_sym_db.RegisterMessage(LimitRangeList)

LimitRangeSpec = _reflection.GeneratedProtocolMessageType('LimitRangeSpec', (_message.Message,), {
  'DESCRIPTOR' : _LIMITRANGESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LimitRangeSpec)
  })
_sym_db.RegisterMessage(LimitRangeSpec)

List = _reflection.GeneratedProtocolMessageType('List', (_message.Message,), {
  'DESCRIPTOR' : _LIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.List)
  })
_sym_db.RegisterMessage(List)

LoadBalancerIngress = _reflection.GeneratedProtocolMessageType('LoadBalancerIngress', (_message.Message,), {
  'DESCRIPTOR' : _LOADBALANCERINGRESS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LoadBalancerIngress)
  })
_sym_db.RegisterMessage(LoadBalancerIngress)

LoadBalancerStatus = _reflection.GeneratedProtocolMessageType('LoadBalancerStatus', (_message.Message,), {
  'DESCRIPTOR' : _LOADBALANCERSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LoadBalancerStatus)
  })
_sym_db.RegisterMessage(LoadBalancerStatus)

LocalObjectReference = _reflection.GeneratedProtocolMessageType('LocalObjectReference', (_message.Message,), {
  'DESCRIPTOR' : _LOCALOBJECTREFERENCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LocalObjectReference)
  })
_sym_db.RegisterMessage(LocalObjectReference)

LocalVolumeSource = _reflection.GeneratedProtocolMessageType('LocalVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _LOCALVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.LocalVolumeSource)
  })
_sym_db.RegisterMessage(LocalVolumeSource)

NFSVolumeSource = _reflection.GeneratedProtocolMessageType('NFSVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _NFSVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NFSVolumeSource)
  })
_sym_db.RegisterMessage(NFSVolumeSource)

Namespace = _reflection.GeneratedProtocolMessageType('Namespace', (_message.Message,), {
  'DESCRIPTOR' : _NAMESPACE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Namespace)
  })
_sym_db.RegisterMessage(Namespace)

NamespaceCondition = _reflection.GeneratedProtocolMessageType('NamespaceCondition', (_message.Message,), {
  'DESCRIPTOR' : _NAMESPACECONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NamespaceCondition)
  })
_sym_db.RegisterMessage(NamespaceCondition)

NamespaceList = _reflection.GeneratedProtocolMessageType('NamespaceList', (_message.Message,), {
  'DESCRIPTOR' : _NAMESPACELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NamespaceList)
  })
_sym_db.RegisterMessage(NamespaceList)

NamespaceSpec = _reflection.GeneratedProtocolMessageType('NamespaceSpec', (_message.Message,), {
  'DESCRIPTOR' : _NAMESPACESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NamespaceSpec)
  })
_sym_db.RegisterMessage(NamespaceSpec)

NamespaceStatus = _reflection.GeneratedProtocolMessageType('NamespaceStatus', (_message.Message,), {
  'DESCRIPTOR' : _NAMESPACESTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NamespaceStatus)
  })
_sym_db.RegisterMessage(NamespaceStatus)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {
  'DESCRIPTOR' : _NODE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Node)
  })
_sym_db.RegisterMessage(Node)

NodeAddress = _reflection.GeneratedProtocolMessageType('NodeAddress', (_message.Message,), {
  'DESCRIPTOR' : _NODEADDRESS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeAddress)
  })
_sym_db.RegisterMessage(NodeAddress)

NodeAffinity = _reflection.GeneratedProtocolMessageType('NodeAffinity', (_message.Message,), {
  'DESCRIPTOR' : _NODEAFFINITY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeAffinity)
  })
_sym_db.RegisterMessage(NodeAffinity)

NodeCondition = _reflection.GeneratedProtocolMessageType('NodeCondition', (_message.Message,), {
  'DESCRIPTOR' : _NODECONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeCondition)
  })
_sym_db.RegisterMessage(NodeCondition)

NodeConfigSource = _reflection.GeneratedProtocolMessageType('NodeConfigSource', (_message.Message,), {
  'DESCRIPTOR' : _NODECONFIGSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeConfigSource)
  })
_sym_db.RegisterMessage(NodeConfigSource)

NodeConfigStatus = _reflection.GeneratedProtocolMessageType('NodeConfigStatus', (_message.Message,), {
  'DESCRIPTOR' : _NODECONFIGSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeConfigStatus)
  })
_sym_db.RegisterMessage(NodeConfigStatus)

NodeDaemonEndpoints = _reflection.GeneratedProtocolMessageType('NodeDaemonEndpoints', (_message.Message,), {
  'DESCRIPTOR' : _NODEDAEMONENDPOINTS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeDaemonEndpoints)
  })
_sym_db.RegisterMessage(NodeDaemonEndpoints)

NodeList = _reflection.GeneratedProtocolMessageType('NodeList', (_message.Message,), {
  'DESCRIPTOR' : _NODELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeList)
  })
_sym_db.RegisterMessage(NodeList)

NodeProxyOptions = _reflection.GeneratedProtocolMessageType('NodeProxyOptions', (_message.Message,), {
  'DESCRIPTOR' : _NODEPROXYOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeProxyOptions)
  })
_sym_db.RegisterMessage(NodeProxyOptions)

NodeResources = _reflection.GeneratedProtocolMessageType('NodeResources', (_message.Message,), {

  'CapacityEntry' : _reflection.GeneratedProtocolMessageType('CapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODERESOURCES_CAPACITYENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeResources.CapacityEntry)
    })
  ,
  'DESCRIPTOR' : _NODERESOURCES,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeResources)
  })
_sym_db.RegisterMessage(NodeResources)
_sym_db.RegisterMessage(NodeResources.CapacityEntry)

NodeSelector = _reflection.GeneratedProtocolMessageType('NodeSelector', (_message.Message,), {
  'DESCRIPTOR' : _NODESELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeSelector)
  })
_sym_db.RegisterMessage(NodeSelector)

NodeSelectorRequirement = _reflection.GeneratedProtocolMessageType('NodeSelectorRequirement', (_message.Message,), {
  'DESCRIPTOR' : _NODESELECTORREQUIREMENT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeSelectorRequirement)
  })
_sym_db.RegisterMessage(NodeSelectorRequirement)

NodeSelectorTerm = _reflection.GeneratedProtocolMessageType('NodeSelectorTerm', (_message.Message,), {
  'DESCRIPTOR' : _NODESELECTORTERM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeSelectorTerm)
  })
_sym_db.RegisterMessage(NodeSelectorTerm)

NodeSpec = _reflection.GeneratedProtocolMessageType('NodeSpec', (_message.Message,), {
  'DESCRIPTOR' : _NODESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeSpec)
  })
_sym_db.RegisterMessage(NodeSpec)

NodeStatus = _reflection.GeneratedProtocolMessageType('NodeStatus', (_message.Message,), {

  'CapacityEntry' : _reflection.GeneratedProtocolMessageType('CapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODESTATUS_CAPACITYENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeStatus.CapacityEntry)
    })
  ,

  'AllocatableEntry' : _reflection.GeneratedProtocolMessageType('AllocatableEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODESTATUS_ALLOCATABLEENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeStatus.AllocatableEntry)
    })
  ,
  'DESCRIPTOR' : _NODESTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeStatus)
  })
_sym_db.RegisterMessage(NodeStatus)
_sym_db.RegisterMessage(NodeStatus.CapacityEntry)
_sym_db.RegisterMessage(NodeStatus.AllocatableEntry)

NodeSystemInfo = _reflection.GeneratedProtocolMessageType('NodeSystemInfo', (_message.Message,), {
  'DESCRIPTOR' : _NODESYSTEMINFO,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.NodeSystemInfo)
  })
_sym_db.RegisterMessage(NodeSystemInfo)

ObjectFieldSelector = _reflection.GeneratedProtocolMessageType('ObjectFieldSelector', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTFIELDSELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ObjectFieldSelector)
  })
_sym_db.RegisterMessage(ObjectFieldSelector)

ObjectReference = _reflection.GeneratedProtocolMessageType('ObjectReference', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTREFERENCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ObjectReference)
  })
_sym_db.RegisterMessage(ObjectReference)

PersistentVolume = _reflection.GeneratedProtocolMessageType('PersistentVolume', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUME,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolume)
  })
_sym_db.RegisterMessage(PersistentVolume)

PersistentVolumeClaim = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaim', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaim)
  })
_sym_db.RegisterMessage(PersistentVolumeClaim)

PersistentVolumeClaimCondition = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimCondition', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMCONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimCondition)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimCondition)

PersistentVolumeClaimList = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimList', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimList)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimList)

PersistentVolumeClaimSpec = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimSpec', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMSPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimSpec)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimSpec)

PersistentVolumeClaimStatus = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimStatus', (_message.Message,), {

  'CapacityEntry' : _reflection.GeneratedProtocolMessageType('CapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimStatus.CapacityEntry)
    })
  ,
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimStatus)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimStatus)
_sym_db.RegisterMessage(PersistentVolumeClaimStatus.CapacityEntry)

PersistentVolumeClaimTemplate = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimTemplate', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMTEMPLATE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimTemplate)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimTemplate)

PersistentVolumeClaimVolumeSource = _reflection.GeneratedProtocolMessageType('PersistentVolumeClaimVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMECLAIMVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource)
  })
_sym_db.RegisterMessage(PersistentVolumeClaimVolumeSource)

PersistentVolumeList = _reflection.GeneratedProtocolMessageType('PersistentVolumeList', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeList)
  })
_sym_db.RegisterMessage(PersistentVolumeList)

PersistentVolumeSource = _reflection.GeneratedProtocolMessageType('PersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeSource)
  })
_sym_db.RegisterMessage(PersistentVolumeSource)

PersistentVolumeSpec = _reflection.GeneratedProtocolMessageType('PersistentVolumeSpec', (_message.Message,), {

  'CapacityEntry' : _reflection.GeneratedProtocolMessageType('CapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _PERSISTENTVOLUMESPEC_CAPACITYENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeSpec.CapacityEntry)
    })
  ,
  'DESCRIPTOR' : _PERSISTENTVOLUMESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeSpec)
  })
_sym_db.RegisterMessage(PersistentVolumeSpec)
_sym_db.RegisterMessage(PersistentVolumeSpec.CapacityEntry)

PersistentVolumeStatus = _reflection.GeneratedProtocolMessageType('PersistentVolumeStatus', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTVOLUMESTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PersistentVolumeStatus)
  })
_sym_db.RegisterMessage(PersistentVolumeStatus)

PhotonPersistentDiskVolumeSource = _reflection.GeneratedProtocolMessageType('PhotonPersistentDiskVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _PHOTONPERSISTENTDISKVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource)
  })
_sym_db.RegisterMessage(PhotonPersistentDiskVolumeSource)

Pod = _reflection.GeneratedProtocolMessageType('Pod', (_message.Message,), {
  'DESCRIPTOR' : _POD,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Pod)
  })
_sym_db.RegisterMessage(Pod)

PodAffinity = _reflection.GeneratedProtocolMessageType('PodAffinity', (_message.Message,), {
  'DESCRIPTOR' : _PODAFFINITY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodAffinity)
  })
_sym_db.RegisterMessage(PodAffinity)

PodAffinityTerm = _reflection.GeneratedProtocolMessageType('PodAffinityTerm', (_message.Message,), {
  'DESCRIPTOR' : _PODAFFINITYTERM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodAffinityTerm)
  })
_sym_db.RegisterMessage(PodAffinityTerm)

PodAntiAffinity = _reflection.GeneratedProtocolMessageType('PodAntiAffinity', (_message.Message,), {
  'DESCRIPTOR' : _PODANTIAFFINITY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodAntiAffinity)
  })
_sym_db.RegisterMessage(PodAntiAffinity)

PodAttachOptions = _reflection.GeneratedProtocolMessageType('PodAttachOptions', (_message.Message,), {
  'DESCRIPTOR' : _PODATTACHOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodAttachOptions)
  })
_sym_db.RegisterMessage(PodAttachOptions)

PodCondition = _reflection.GeneratedProtocolMessageType('PodCondition', (_message.Message,), {
  'DESCRIPTOR' : _PODCONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodCondition)
  })
_sym_db.RegisterMessage(PodCondition)

PodDNSConfig = _reflection.GeneratedProtocolMessageType('PodDNSConfig', (_message.Message,), {
  'DESCRIPTOR' : _PODDNSCONFIG,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodDNSConfig)
  })
_sym_db.RegisterMessage(PodDNSConfig)

PodDNSConfigOption = _reflection.GeneratedProtocolMessageType('PodDNSConfigOption', (_message.Message,), {
  'DESCRIPTOR' : _PODDNSCONFIGOPTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodDNSConfigOption)
  })
_sym_db.RegisterMessage(PodDNSConfigOption)

PodExecOptions = _reflection.GeneratedProtocolMessageType('PodExecOptions', (_message.Message,), {
  'DESCRIPTOR' : _PODEXECOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodExecOptions)
  })
_sym_db.RegisterMessage(PodExecOptions)

PodIP = _reflection.GeneratedProtocolMessageType('PodIP', (_message.Message,), {
  'DESCRIPTOR' : _PODIP,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodIP)
  })
_sym_db.RegisterMessage(PodIP)

PodList = _reflection.GeneratedProtocolMessageType('PodList', (_message.Message,), {
  'DESCRIPTOR' : _PODLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodList)
  })
_sym_db.RegisterMessage(PodList)

PodLogOptions = _reflection.GeneratedProtocolMessageType('PodLogOptions', (_message.Message,), {
  'DESCRIPTOR' : _PODLOGOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodLogOptions)
  })
_sym_db.RegisterMessage(PodLogOptions)

PodPortForwardOptions = _reflection.GeneratedProtocolMessageType('PodPortForwardOptions', (_message.Message,), {
  'DESCRIPTOR' : _PODPORTFORWARDOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodPortForwardOptions)
  })
_sym_db.RegisterMessage(PodPortForwardOptions)

PodProxyOptions = _reflection.GeneratedProtocolMessageType('PodProxyOptions', (_message.Message,), {
  'DESCRIPTOR' : _PODPROXYOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodProxyOptions)
  })
_sym_db.RegisterMessage(PodProxyOptions)

PodReadinessGate = _reflection.GeneratedProtocolMessageType('PodReadinessGate', (_message.Message,), {
  'DESCRIPTOR' : _PODREADINESSGATE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodReadinessGate)
  })
_sym_db.RegisterMessage(PodReadinessGate)

PodSecurityContext = _reflection.GeneratedProtocolMessageType('PodSecurityContext', (_message.Message,), {
  'DESCRIPTOR' : _PODSECURITYCONTEXT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodSecurityContext)
  })
_sym_db.RegisterMessage(PodSecurityContext)

PodSignature = _reflection.GeneratedProtocolMessageType('PodSignature', (_message.Message,), {
  'DESCRIPTOR' : _PODSIGNATURE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodSignature)
  })
_sym_db.RegisterMessage(PodSignature)

PodSpec = _reflection.GeneratedProtocolMessageType('PodSpec', (_message.Message,), {

  'NodeSelectorEntry' : _reflection.GeneratedProtocolMessageType('NodeSelectorEntry', (_message.Message,), {
    'DESCRIPTOR' : _PODSPEC_NODESELECTORENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodSpec.NodeSelectorEntry)
    })
  ,

  'OverheadEntry' : _reflection.GeneratedProtocolMessageType('OverheadEntry', (_message.Message,), {
    'DESCRIPTOR' : _PODSPEC_OVERHEADENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodSpec.OverheadEntry)
    })
  ,
  'DESCRIPTOR' : _PODSPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodSpec)
  })
_sym_db.RegisterMessage(PodSpec)
_sym_db.RegisterMessage(PodSpec.NodeSelectorEntry)
_sym_db.RegisterMessage(PodSpec.OverheadEntry)

PodStatus = _reflection.GeneratedProtocolMessageType('PodStatus', (_message.Message,), {
  'DESCRIPTOR' : _PODSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodStatus)
  })
_sym_db.RegisterMessage(PodStatus)

PodStatusResult = _reflection.GeneratedProtocolMessageType('PodStatusResult', (_message.Message,), {
  'DESCRIPTOR' : _PODSTATUSRESULT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodStatusResult)
  })
_sym_db.RegisterMessage(PodStatusResult)

PodTemplate = _reflection.GeneratedProtocolMessageType('PodTemplate', (_message.Message,), {
  'DESCRIPTOR' : _PODTEMPLATE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodTemplate)
  })
_sym_db.RegisterMessage(PodTemplate)

PodTemplateList = _reflection.GeneratedProtocolMessageType('PodTemplateList', (_message.Message,), {
  'DESCRIPTOR' : _PODTEMPLATELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodTemplateList)
  })
_sym_db.RegisterMessage(PodTemplateList)

PodTemplateSpec = _reflection.GeneratedProtocolMessageType('PodTemplateSpec', (_message.Message,), {
  'DESCRIPTOR' : _PODTEMPLATESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PodTemplateSpec)
  })
_sym_db.RegisterMessage(PodTemplateSpec)

PortStatus = _reflection.GeneratedProtocolMessageType('PortStatus', (_message.Message,), {
  'DESCRIPTOR' : _PORTSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PortStatus)
  })
_sym_db.RegisterMessage(PortStatus)

PortworxVolumeSource = _reflection.GeneratedProtocolMessageType('PortworxVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _PORTWORXVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PortworxVolumeSource)
  })
_sym_db.RegisterMessage(PortworxVolumeSource)

Preconditions = _reflection.GeneratedProtocolMessageType('Preconditions', (_message.Message,), {
  'DESCRIPTOR' : _PRECONDITIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Preconditions)
  })
_sym_db.RegisterMessage(Preconditions)

PreferAvoidPodsEntry = _reflection.GeneratedProtocolMessageType('PreferAvoidPodsEntry', (_message.Message,), {
  'DESCRIPTOR' : _PREFERAVOIDPODSENTRY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PreferAvoidPodsEntry)
  })
_sym_db.RegisterMessage(PreferAvoidPodsEntry)

PreferredSchedulingTerm = _reflection.GeneratedProtocolMessageType('PreferredSchedulingTerm', (_message.Message,), {
  'DESCRIPTOR' : _PREFERREDSCHEDULINGTERM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.PreferredSchedulingTerm)
  })
_sym_db.RegisterMessage(PreferredSchedulingTerm)

Probe = _reflection.GeneratedProtocolMessageType('Probe', (_message.Message,), {
  'DESCRIPTOR' : _PROBE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Probe)
  })
_sym_db.RegisterMessage(Probe)

ProjectedVolumeSource = _reflection.GeneratedProtocolMessageType('ProjectedVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _PROJECTEDVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ProjectedVolumeSource)
  })
_sym_db.RegisterMessage(ProjectedVolumeSource)

QuobyteVolumeSource = _reflection.GeneratedProtocolMessageType('QuobyteVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _QUOBYTEVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.QuobyteVolumeSource)
  })
_sym_db.RegisterMessage(QuobyteVolumeSource)

RBDPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('RBDPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _RBDPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.RBDPersistentVolumeSource)
  })
_sym_db.RegisterMessage(RBDPersistentVolumeSource)

RBDVolumeSource = _reflection.GeneratedProtocolMessageType('RBDVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _RBDVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.RBDVolumeSource)
  })
_sym_db.RegisterMessage(RBDVolumeSource)

RangeAllocation = _reflection.GeneratedProtocolMessageType('RangeAllocation', (_message.Message,), {
  'DESCRIPTOR' : _RANGEALLOCATION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.RangeAllocation)
  })
_sym_db.RegisterMessage(RangeAllocation)

ReplicationController = _reflection.GeneratedProtocolMessageType('ReplicationController', (_message.Message,), {
  'DESCRIPTOR' : _REPLICATIONCONTROLLER,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationController)
  })
_sym_db.RegisterMessage(ReplicationController)

ReplicationControllerCondition = _reflection.GeneratedProtocolMessageType('ReplicationControllerCondition', (_message.Message,), {
  'DESCRIPTOR' : _REPLICATIONCONTROLLERCONDITION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationControllerCondition)
  })
_sym_db.RegisterMessage(ReplicationControllerCondition)

ReplicationControllerList = _reflection.GeneratedProtocolMessageType('ReplicationControllerList', (_message.Message,), {
  'DESCRIPTOR' : _REPLICATIONCONTROLLERLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationControllerList)
  })
_sym_db.RegisterMessage(ReplicationControllerList)

ReplicationControllerSpec = _reflection.GeneratedProtocolMessageType('ReplicationControllerSpec', (_message.Message,), {

  'SelectorEntry' : _reflection.GeneratedProtocolMessageType('SelectorEntry', (_message.Message,), {
    'DESCRIPTOR' : _REPLICATIONCONTROLLERSPEC_SELECTORENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationControllerSpec.SelectorEntry)
    })
  ,
  'DESCRIPTOR' : _REPLICATIONCONTROLLERSPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationControllerSpec)
  })
_sym_db.RegisterMessage(ReplicationControllerSpec)
_sym_db.RegisterMessage(ReplicationControllerSpec.SelectorEntry)

ReplicationControllerStatus = _reflection.GeneratedProtocolMessageType('ReplicationControllerStatus', (_message.Message,), {
  'DESCRIPTOR' : _REPLICATIONCONTROLLERSTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ReplicationControllerStatus)
  })
_sym_db.RegisterMessage(ReplicationControllerStatus)

ResourceFieldSelector = _reflection.GeneratedProtocolMessageType('ResourceFieldSelector', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCEFIELDSELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceFieldSelector)
  })
_sym_db.RegisterMessage(ResourceFieldSelector)

ResourceQuota = _reflection.GeneratedProtocolMessageType('ResourceQuota', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCEQUOTA,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuota)
  })
_sym_db.RegisterMessage(ResourceQuota)

ResourceQuotaList = _reflection.GeneratedProtocolMessageType('ResourceQuotaList', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCEQUOTALIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaList)
  })
_sym_db.RegisterMessage(ResourceQuotaList)

ResourceQuotaSpec = _reflection.GeneratedProtocolMessageType('ResourceQuotaSpec', (_message.Message,), {

  'HardEntry' : _reflection.GeneratedProtocolMessageType('HardEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESOURCEQUOTASPEC_HARDENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaSpec.HardEntry)
    })
  ,
  'DESCRIPTOR' : _RESOURCEQUOTASPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaSpec)
  })
_sym_db.RegisterMessage(ResourceQuotaSpec)
_sym_db.RegisterMessage(ResourceQuotaSpec.HardEntry)

ResourceQuotaStatus = _reflection.GeneratedProtocolMessageType('ResourceQuotaStatus', (_message.Message,), {

  'HardEntry' : _reflection.GeneratedProtocolMessageType('HardEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESOURCEQUOTASTATUS_HARDENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaStatus.HardEntry)
    })
  ,

  'UsedEntry' : _reflection.GeneratedProtocolMessageType('UsedEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESOURCEQUOTASTATUS_USEDENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaStatus.UsedEntry)
    })
  ,
  'DESCRIPTOR' : _RESOURCEQUOTASTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceQuotaStatus)
  })
_sym_db.RegisterMessage(ResourceQuotaStatus)
_sym_db.RegisterMessage(ResourceQuotaStatus.HardEntry)
_sym_db.RegisterMessage(ResourceQuotaStatus.UsedEntry)

ResourceRequirements = _reflection.GeneratedProtocolMessageType('ResourceRequirements', (_message.Message,), {

  'LimitsEntry' : _reflection.GeneratedProtocolMessageType('LimitsEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESOURCEREQUIREMENTS_LIMITSENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceRequirements.LimitsEntry)
    })
  ,

  'RequestsEntry' : _reflection.GeneratedProtocolMessageType('RequestsEntry', (_message.Message,), {
    'DESCRIPTOR' : _RESOURCEREQUIREMENTS_REQUESTSENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceRequirements.RequestsEntry)
    })
  ,
  'DESCRIPTOR' : _RESOURCEREQUIREMENTS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ResourceRequirements)
  })
_sym_db.RegisterMessage(ResourceRequirements)
_sym_db.RegisterMessage(ResourceRequirements.LimitsEntry)
_sym_db.RegisterMessage(ResourceRequirements.RequestsEntry)

SELinuxOptions = _reflection.GeneratedProtocolMessageType('SELinuxOptions', (_message.Message,), {
  'DESCRIPTOR' : _SELINUXOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SELinuxOptions)
  })
_sym_db.RegisterMessage(SELinuxOptions)

ScaleIOPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('ScaleIOPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _SCALEIOPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ScaleIOPersistentVolumeSource)
  })
_sym_db.RegisterMessage(ScaleIOPersistentVolumeSource)

ScaleIOVolumeSource = _reflection.GeneratedProtocolMessageType('ScaleIOVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _SCALEIOVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ScaleIOVolumeSource)
  })
_sym_db.RegisterMessage(ScaleIOVolumeSource)

ScopeSelector = _reflection.GeneratedProtocolMessageType('ScopeSelector', (_message.Message,), {
  'DESCRIPTOR' : _SCOPESELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ScopeSelector)
  })
_sym_db.RegisterMessage(ScopeSelector)

ScopedResourceSelectorRequirement = _reflection.GeneratedProtocolMessageType('ScopedResourceSelectorRequirement', (_message.Message,), {
  'DESCRIPTOR' : _SCOPEDRESOURCESELECTORREQUIREMENT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ScopedResourceSelectorRequirement)
  })
_sym_db.RegisterMessage(ScopedResourceSelectorRequirement)

SeccompProfile = _reflection.GeneratedProtocolMessageType('SeccompProfile', (_message.Message,), {
  'DESCRIPTOR' : _SECCOMPPROFILE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SeccompProfile)
  })
_sym_db.RegisterMessage(SeccompProfile)

Secret = _reflection.GeneratedProtocolMessageType('Secret', (_message.Message,), {

  'DataEntry' : _reflection.GeneratedProtocolMessageType('DataEntry', (_message.Message,), {
    'DESCRIPTOR' : _SECRET_DATAENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Secret.DataEntry)
    })
  ,

  'StringDataEntry' : _reflection.GeneratedProtocolMessageType('StringDataEntry', (_message.Message,), {
    'DESCRIPTOR' : _SECRET_STRINGDATAENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Secret.StringDataEntry)
    })
  ,
  'DESCRIPTOR' : _SECRET,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Secret)
  })
_sym_db.RegisterMessage(Secret)
_sym_db.RegisterMessage(Secret.DataEntry)
_sym_db.RegisterMessage(Secret.StringDataEntry)

SecretEnvSource = _reflection.GeneratedProtocolMessageType('SecretEnvSource', (_message.Message,), {
  'DESCRIPTOR' : _SECRETENVSOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretEnvSource)
  })
_sym_db.RegisterMessage(SecretEnvSource)

SecretKeySelector = _reflection.GeneratedProtocolMessageType('SecretKeySelector', (_message.Message,), {
  'DESCRIPTOR' : _SECRETKEYSELECTOR,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretKeySelector)
  })
_sym_db.RegisterMessage(SecretKeySelector)

SecretList = _reflection.GeneratedProtocolMessageType('SecretList', (_message.Message,), {
  'DESCRIPTOR' : _SECRETLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretList)
  })
_sym_db.RegisterMessage(SecretList)

SecretProjection = _reflection.GeneratedProtocolMessageType('SecretProjection', (_message.Message,), {
  'DESCRIPTOR' : _SECRETPROJECTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretProjection)
  })
_sym_db.RegisterMessage(SecretProjection)

SecretReference = _reflection.GeneratedProtocolMessageType('SecretReference', (_message.Message,), {
  'DESCRIPTOR' : _SECRETREFERENCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretReference)
  })
_sym_db.RegisterMessage(SecretReference)

SecretVolumeSource = _reflection.GeneratedProtocolMessageType('SecretVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _SECRETVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecretVolumeSource)
  })
_sym_db.RegisterMessage(SecretVolumeSource)

SecurityContext = _reflection.GeneratedProtocolMessageType('SecurityContext', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYCONTEXT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SecurityContext)
  })
_sym_db.RegisterMessage(SecurityContext)

SerializedReference = _reflection.GeneratedProtocolMessageType('SerializedReference', (_message.Message,), {
  'DESCRIPTOR' : _SERIALIZEDREFERENCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SerializedReference)
  })
_sym_db.RegisterMessage(SerializedReference)

Service = _reflection.GeneratedProtocolMessageType('Service', (_message.Message,), {
  'DESCRIPTOR' : _SERVICE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Service)
  })
_sym_db.RegisterMessage(Service)

ServiceAccount = _reflection.GeneratedProtocolMessageType('ServiceAccount', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEACCOUNT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceAccount)
  })
_sym_db.RegisterMessage(ServiceAccount)

ServiceAccountList = _reflection.GeneratedProtocolMessageType('ServiceAccountList', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEACCOUNTLIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceAccountList)
  })
_sym_db.RegisterMessage(ServiceAccountList)

ServiceAccountTokenProjection = _reflection.GeneratedProtocolMessageType('ServiceAccountTokenProjection', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEACCOUNTTOKENPROJECTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceAccountTokenProjection)
  })
_sym_db.RegisterMessage(ServiceAccountTokenProjection)

ServiceList = _reflection.GeneratedProtocolMessageType('ServiceList', (_message.Message,), {
  'DESCRIPTOR' : _SERVICELIST,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceList)
  })
_sym_db.RegisterMessage(ServiceList)

ServicePort = _reflection.GeneratedProtocolMessageType('ServicePort', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEPORT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServicePort)
  })
_sym_db.RegisterMessage(ServicePort)

ServiceProxyOptions = _reflection.GeneratedProtocolMessageType('ServiceProxyOptions', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEPROXYOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceProxyOptions)
  })
_sym_db.RegisterMessage(ServiceProxyOptions)

ServiceSpec = _reflection.GeneratedProtocolMessageType('ServiceSpec', (_message.Message,), {

  'SelectorEntry' : _reflection.GeneratedProtocolMessageType('SelectorEntry', (_message.Message,), {
    'DESCRIPTOR' : _SERVICESPEC_SELECTORENTRY,
    '__module__' : 'k8s.io.api.core.v1.generated_pb2'
    # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceSpec.SelectorEntry)
    })
  ,
  'DESCRIPTOR' : _SERVICESPEC,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceSpec)
  })
_sym_db.RegisterMessage(ServiceSpec)
_sym_db.RegisterMessage(ServiceSpec.SelectorEntry)

ServiceStatus = _reflection.GeneratedProtocolMessageType('ServiceStatus', (_message.Message,), {
  'DESCRIPTOR' : _SERVICESTATUS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.ServiceStatus)
  })
_sym_db.RegisterMessage(ServiceStatus)

SessionAffinityConfig = _reflection.GeneratedProtocolMessageType('SessionAffinityConfig', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONAFFINITYCONFIG,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.SessionAffinityConfig)
  })
_sym_db.RegisterMessage(SessionAffinityConfig)

StorageOSPersistentVolumeSource = _reflection.GeneratedProtocolMessageType('StorageOSPersistentVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _STORAGEOSPERSISTENTVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.StorageOSPersistentVolumeSource)
  })
_sym_db.RegisterMessage(StorageOSPersistentVolumeSource)

StorageOSVolumeSource = _reflection.GeneratedProtocolMessageType('StorageOSVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _STORAGEOSVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.StorageOSVolumeSource)
  })
_sym_db.RegisterMessage(StorageOSVolumeSource)

Sysctl = _reflection.GeneratedProtocolMessageType('Sysctl', (_message.Message,), {
  'DESCRIPTOR' : _SYSCTL,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Sysctl)
  })
_sym_db.RegisterMessage(Sysctl)

TCPSocketAction = _reflection.GeneratedProtocolMessageType('TCPSocketAction', (_message.Message,), {
  'DESCRIPTOR' : _TCPSOCKETACTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.TCPSocketAction)
  })
_sym_db.RegisterMessage(TCPSocketAction)

Taint = _reflection.GeneratedProtocolMessageType('Taint', (_message.Message,), {
  'DESCRIPTOR' : _TAINT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Taint)
  })
_sym_db.RegisterMessage(Taint)

Toleration = _reflection.GeneratedProtocolMessageType('Toleration', (_message.Message,), {
  'DESCRIPTOR' : _TOLERATION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Toleration)
  })
_sym_db.RegisterMessage(Toleration)

TopologySelectorLabelRequirement = _reflection.GeneratedProtocolMessageType('TopologySelectorLabelRequirement', (_message.Message,), {
  'DESCRIPTOR' : _TOPOLOGYSELECTORLABELREQUIREMENT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.TopologySelectorLabelRequirement)
  })
_sym_db.RegisterMessage(TopologySelectorLabelRequirement)

TopologySelectorTerm = _reflection.GeneratedProtocolMessageType('TopologySelectorTerm', (_message.Message,), {
  'DESCRIPTOR' : _TOPOLOGYSELECTORTERM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.TopologySelectorTerm)
  })
_sym_db.RegisterMessage(TopologySelectorTerm)

TopologySpreadConstraint = _reflection.GeneratedProtocolMessageType('TopologySpreadConstraint', (_message.Message,), {
  'DESCRIPTOR' : _TOPOLOGYSPREADCONSTRAINT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.TopologySpreadConstraint)
  })
_sym_db.RegisterMessage(TopologySpreadConstraint)

TypedLocalObjectReference = _reflection.GeneratedProtocolMessageType('TypedLocalObjectReference', (_message.Message,), {
  'DESCRIPTOR' : _TYPEDLOCALOBJECTREFERENCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.TypedLocalObjectReference)
  })
_sym_db.RegisterMessage(TypedLocalObjectReference)

Volume = _reflection.GeneratedProtocolMessageType('Volume', (_message.Message,), {
  'DESCRIPTOR' : _VOLUME,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.Volume)
  })
_sym_db.RegisterMessage(Volume)

VolumeDevice = _reflection.GeneratedProtocolMessageType('VolumeDevice', (_message.Message,), {
  'DESCRIPTOR' : _VOLUMEDEVICE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VolumeDevice)
  })
_sym_db.RegisterMessage(VolumeDevice)

VolumeMount = _reflection.GeneratedProtocolMessageType('VolumeMount', (_message.Message,), {
  'DESCRIPTOR' : _VOLUMEMOUNT,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VolumeMount)
  })
_sym_db.RegisterMessage(VolumeMount)

VolumeNodeAffinity = _reflection.GeneratedProtocolMessageType('VolumeNodeAffinity', (_message.Message,), {
  'DESCRIPTOR' : _VOLUMENODEAFFINITY,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VolumeNodeAffinity)
  })
_sym_db.RegisterMessage(VolumeNodeAffinity)

VolumeProjection = _reflection.GeneratedProtocolMessageType('VolumeProjection', (_message.Message,), {
  'DESCRIPTOR' : _VOLUMEPROJECTION,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VolumeProjection)
  })
_sym_db.RegisterMessage(VolumeProjection)

VolumeSource = _reflection.GeneratedProtocolMessageType('VolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _VOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VolumeSource)
  })
_sym_db.RegisterMessage(VolumeSource)

VsphereVirtualDiskVolumeSource = _reflection.GeneratedProtocolMessageType('VsphereVirtualDiskVolumeSource', (_message.Message,), {
  'DESCRIPTOR' : _VSPHEREVIRTUALDISKVOLUMESOURCE,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource)
  })
_sym_db.RegisterMessage(VsphereVirtualDiskVolumeSource)

WeightedPodAffinityTerm = _reflection.GeneratedProtocolMessageType('WeightedPodAffinityTerm', (_message.Message,), {
  'DESCRIPTOR' : _WEIGHTEDPODAFFINITYTERM,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.WeightedPodAffinityTerm)
  })
_sym_db.RegisterMessage(WeightedPodAffinityTerm)

WindowsSecurityContextOptions = _reflection.GeneratedProtocolMessageType('WindowsSecurityContextOptions', (_message.Message,), {
  'DESCRIPTOR' : _WINDOWSSECURITYCONTEXTOPTIONS,
  '__module__' : 'k8s.io.api.core.v1.generated_pb2'
  # @@protoc_insertion_point(class_scope:k8s.io.api.core.v1.WindowsSecurityContextOptions)
  })
_sym_db.RegisterMessage(WindowsSecurityContextOptions)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\002v1'
  _CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._options = None
  _CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_options = b'8\001'
  _CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._options = None
  _CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_options = b'8\001'
  _CONFIGMAP_DATAENTRY._options = None
  _CONFIGMAP_DATAENTRY._serialized_options = b'8\001'
  _CONFIGMAP_BINARYDATAENTRY._options = None
  _CONFIGMAP_BINARYDATAENTRY._serialized_options = b'8\001'
  _FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY._options = None
  _FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY._serialized_options = b'8\001'
  _FLEXVOLUMESOURCE_OPTIONSENTRY._options = None
  _FLEXVOLUMESOURCE_OPTIONSENTRY._serialized_options = b'8\001'
  _LIMITRANGEITEM_MAXENTRY._options = None
  _LIMITRANGEITEM_MAXENTRY._serialized_options = b'8\001'
  _LIMITRANGEITEM_MINENTRY._options = None
  _LIMITRANGEITEM_MINENTRY._serialized_options = b'8\001'
  _LIMITRANGEITEM_DEFAULTENTRY._options = None
  _LIMITRANGEITEM_DEFAULTENTRY._serialized_options = b'8\001'
  _LIMITRANGEITEM_DEFAULTREQUESTENTRY._options = None
  _LIMITRANGEITEM_DEFAULTREQUESTENTRY._serialized_options = b'8\001'
  _LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY._options = None
  _LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY._serialized_options = b'8\001'
  _NODERESOURCES_CAPACITYENTRY._options = None
  _NODERESOURCES_CAPACITYENTRY._serialized_options = b'8\001'
  _NODESTATUS_CAPACITYENTRY._options = None
  _NODESTATUS_CAPACITYENTRY._serialized_options = b'8\001'
  _NODESTATUS_ALLOCATABLEENTRY._options = None
  _NODESTATUS_ALLOCATABLEENTRY._serialized_options = b'8\001'
  _PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY._options = None
  _PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY._serialized_options = b'8\001'
  _PERSISTENTVOLUMESPEC_CAPACITYENTRY._options = None
  _PERSISTENTVOLUMESPEC_CAPACITYENTRY._serialized_options = b'8\001'
  _PODSPEC_NODESELECTORENTRY._options = None
  _PODSPEC_NODESELECTORENTRY._serialized_options = b'8\001'
  _PODSPEC_OVERHEADENTRY._options = None
  _PODSPEC_OVERHEADENTRY._serialized_options = b'8\001'
  _REPLICATIONCONTROLLERSPEC_SELECTORENTRY._options = None
  _REPLICATIONCONTROLLERSPEC_SELECTORENTRY._serialized_options = b'8\001'
  _RESOURCEQUOTASPEC_HARDENTRY._options = None
  _RESOURCEQUOTASPEC_HARDENTRY._serialized_options = b'8\001'
  _RESOURCEQUOTASTATUS_HARDENTRY._options = None
  _RESOURCEQUOTASTATUS_HARDENTRY._serialized_options = b'8\001'
  _RESOURCEQUOTASTATUS_USEDENTRY._options = None
  _RESOURCEQUOTASTATUS_USEDENTRY._serialized_options = b'8\001'
  _RESOURCEREQUIREMENTS_LIMITSENTRY._options = None
  _RESOURCEREQUIREMENTS_LIMITSENTRY._serialized_options = b'8\001'
  _RESOURCEREQUIREMENTS_REQUESTSENTRY._options = None
  _RESOURCEREQUIREMENTS_REQUESTSENTRY._serialized_options = b'8\001'
  _SECRET_DATAENTRY._options = None
  _SECRET_DATAENTRY._serialized_options = b'8\001'
  _SECRET_STRINGDATAENTRY._options = None
  _SECRET_STRINGDATAENTRY._serialized_options = b'8\001'
  _SERVICESPEC_SELECTORENTRY._options = None
  _SERVICESPEC_SELECTORENTRY._serialized_options = b'8\001'
  _AWSELASTICBLOCKSTOREVOLUMESOURCE._serialized_start=324
  _AWSELASTICBLOCKSTOREVOLUMESOURCE._serialized_end=429
  _AFFINITY._serialized_start=432
  _AFFINITY._serialized_end=614
  _ATTACHEDVOLUME._serialized_start=616
  _ATTACHEDVOLUME._serialized_end=666
  _AVOIDPODS._serialized_start=668
  _AVOIDPODS._serialized_end=746
  _AZUREDISKVOLUMESOURCE._serialized_start=748
  _AZUREDISKVOLUMESOURCE._serialized_end=875
  _AZUREFILEPERSISTENTVOLUMESOURCE._serialized_start=877
  _AZUREFILEPERSISTENTVOLUMESOURCE._serialized_end=992
  _AZUREFILEVOLUMESOURCE._serialized_start=994
  _AZUREFILEVOLUMESOURCE._serialized_end=1074
  _BINDING._serialized_start=1077
  _BINDING._serialized_end=1207
  _CSIPERSISTENTVOLUMESOURCE._serialized_start=1210
  _CSIPERSISTENTVOLUMESOURCE._serialized_end=1738
  _CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_start=1683
  _CSIPERSISTENTVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_end=1738
  _CSIVOLUMESOURCE._serialized_start=1741
  _CSIVOLUMESOURCE._serialized_end=2022
  _CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_start=1683
  _CSIVOLUMESOURCE_VOLUMEATTRIBUTESENTRY._serialized_end=1738
  _CAPABILITIES._serialized_start=2024
  _CAPABILITIES._serialized_end=2065
  _CEPHFSPERSISTENTVOLUMESOURCE._serialized_start=2068
  _CEPHFSPERSISTENTVOLUMESOURCE._serialized_end=2238
  _CEPHFSVOLUMESOURCE._serialized_start=2241
  _CEPHFSVOLUMESOURCE._serialized_end=2406
  _CINDERPERSISTENTVOLUMESOURCE._serialized_start=2409
  _CINDERPERSISTENTVOLUMESOURCE._serialized_end=2547
  _CINDERVOLUMESOURCE._serialized_start=2550
  _CINDERVOLUMESOURCE._serialized_end=2683
  _CLIENTIPCONFIG._serialized_start=2685
  _CLIENTIPCONFIG._serialized_end=2725
  _COMPONENTCONDITION._serialized_start=2727
  _COMPONENTCONDITION._serialized_end=2809
  _COMPONENTSTATUS._serialized_start=2812
  _COMPONENTSTATUS._serialized_end=2957
  _COMPONENTSTATUSLIST._serialized_start=2960
  _COMPONENTSTATUSLIST._serialized_end=3099
  _CONFIGMAP._serialized_start=3102
  _CONFIGMAP._serialized_end=3418
  _CONFIGMAP_DATAENTRY._serialized_start=3324
  _CONFIGMAP_DATAENTRY._serialized_end=3367
  _CONFIGMAP_BINARYDATAENTRY._serialized_start=3369
  _CONFIGMAP_BINARYDATAENTRY._serialized_end=3418
  _CONFIGMAPENVSOURCE._serialized_start=3420
  _CONFIGMAPENVSOURCE._serialized_end=3530
  _CONFIGMAPKEYSELECTOR._serialized_start=3532
  _CONFIGMAPKEYSELECTOR._serialized_end=3657
  _CONFIGMAPLIST._serialized_start=3659
  _CONFIGMAPLIST._serialized_end=3786
  _CONFIGMAPNODECONFIGSOURCE._serialized_start=3788
  _CONFIGMAPNODECONFIGSOURCE._serialized_end=3912
  _CONFIGMAPPROJECTION._serialized_start=3915
  _CONFIGMAPPROJECTION._serialized_end=4072
  _CONFIGMAPVOLUMESOURCE._serialized_start=4075
  _CONFIGMAPVOLUMESOURCE._serialized_end=4255
  _CONTAINER._serialized_start=4258
  _CONTAINER._serialized_end=5065
  _CONTAINERIMAGE._serialized_start=5067
  _CONTAINERIMAGE._serialized_end=5117
  _CONTAINERPORT._serialized_start=5119
  _CONTAINERPORT._serialized_end=5223
  _CONTAINERSTATE._serialized_start=5226
  _CONTAINERSTATE._serialized_end=5428
  _CONTAINERSTATERUNNING._serialized_start=5430
  _CONTAINERSTATERUNNING._serialized_end=5516
  _CONTAINERSTATETERMINATED._serialized_start=5519
  _CONTAINERSTATETERMINATED._serialized_end=5760
  _CONTAINERSTATEWAITING._serialized_start=5762
  _CONTAINERSTATEWAITING._serialized_end=5818
  _CONTAINERSTATUS._serialized_start=5821
  _CONTAINERSTATUS._serialized_end=6065
  _DAEMONENDPOINT._serialized_start=6067
  _DAEMONENDPOINT._serialized_end=6097
  _DOWNWARDAPIPROJECTION._serialized_start=6099
  _DOWNWARDAPIPROJECTION._serialized_end=6180
  _DOWNWARDAPIVOLUMEFILE._serialized_start=6183
  _DOWNWARDAPIVOLUMEFILE._serialized_end=6362
  _DOWNWARDAPIVOLUMESOURCE._serialized_start=6364
  _DOWNWARDAPIVOLUMESOURCE._serialized_end=6468
  _EMPTYDIRVOLUMESOURCE._serialized_start=6470
  _EMPTYDIRVOLUMESOURCE._serialized_end=6575
  _ENDPOINTADDRESS._serialized_start=6577
  _ENDPOINTADDRESS._serialized_end=6698
  _ENDPOINTPORT._serialized_start=6700
  _ENDPOINTPORT._serialized_end=6781
  _ENDPOINTSUBSET._serialized_start=6784
  _ENDPOINTSUBSET._serialized_end=6969
  _ENDPOINTS._serialized_start=6972
  _ENDPOINTS._serialized_end=7104
  _ENDPOINTSLIST._serialized_start=7106
  _ENDPOINTSLIST._serialized_end=7233
  _ENVFROMSOURCE._serialized_start=7236
  _ENVFROMSOURCE._serialized_end=7385
  _ENVVAR._serialized_start=7387
  _ENVVAR._serialized_end=7477
  _ENVVARSOURCE._serialized_start=7480
  _ENVVARSOURCE._serialized_end=7750
  _EPHEMERALCONTAINER._serialized_start=7753
  _EPHEMERALCONTAINER._serialized_end=7882
  _EPHEMERALCONTAINERCOMMON._serialized_start=7885
  _EPHEMERALCONTAINERCOMMON._serialized_end=8707
  _EPHEMERALVOLUMESOURCE._serialized_start=8709
  _EPHEMERALVOLUMESOURCE._serialized_end=8812
  _EVENT._serialized_start=8815
  _EVENT._serialized_end=9439
  _EVENTLIST._serialized_start=9441
  _EVENTLIST._serialized_end=9560
  _EVENTSERIES._serialized_start=9562
  _EVENTSERIES._serialized_end=9665
  _EVENTSOURCE._serialized_start=9667
  _EVENTSOURCE._serialized_end=9713
  _EXECACTION._serialized_start=9715
  _EXECACTION._serialized_end=9744
  _FCVOLUMESOURCE._serialized_start=9746
  _FCVOLUMESOURCE._serialized_end=9844
  _FLEXPERSISTENTVOLUMESOURCE._serialized_start=9847
  _FLEXPERSISTENTVOLUMESOURCE._serialized_end=10107
  _FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY._serialized_start=10061
  _FLEXPERSISTENTVOLUMESOURCE_OPTIONSENTRY._serialized_end=10107
  _FLEXVOLUMESOURCE._serialized_start=10110
  _FLEXVOLUMESOURCE._serialized_end=10355
  _FLEXVOLUMESOURCE_OPTIONSENTRY._serialized_start=10061
  _FLEXVOLUMESOURCE_OPTIONSENTRY._serialized_end=10107
  _FLOCKERVOLUMESOURCE._serialized_start=10357
  _FLOCKERVOLUMESOURCE._serialized_end=10420
  _GCEPERSISTENTDISKVOLUMESOURCE._serialized_start=10422
  _GCEPERSISTENTDISKVOLUMESOURCE._serialized_end=10522
  _GITREPOVOLUMESOURCE._serialized_start=10524
  _GITREPOVOLUMESOURCE._serialized_end=10602
  _GLUSTERFSPERSISTENTVOLUMESOURCE._serialized_start=10604
  _GLUSTERFSPERSISTENTVOLUMESOURCE._serialized_end=10716
  _GLUSTERFSVOLUMESOURCE._serialized_start=10718
  _GLUSTERFSVOLUMESOURCE._serialized_end=10792
  _HTTPGETACTION._serialized_start=10795
  _HTTPGETACTION._serialized_end=10971
  _HTTPHEADER._serialized_start=10973
  _HTTPHEADER._serialized_end=11014
  _HANDLER._serialized_start=11017
  _HANDLER._serialized_end=11180
  _HOSTALIAS._serialized_start=11182
  _HOSTALIAS._serialized_end=11224
  _HOSTPATHVOLUMESOURCE._serialized_start=11226
  _HOSTPATHVOLUMESOURCE._serialized_end=11276
  _ISCSIPERSISTENTVOLUMESOURCE._serialized_start=11279
  _ISCSIPERSISTENTVOLUMESOURCE._serialized_end=11562
  _ISCSIVOLUMESOURCE._serialized_start=11565
  _ISCSIVOLUMESOURCE._serialized_end=11843
  _KEYTOPATH._serialized_start=11845
  _KEYTOPATH._serialized_end=11897
  _LIFECYCLE._serialized_start=11899
  _LIFECYCLE._serialized_end=12004
  _LIMITRANGE._serialized_start=12007
  _LIMITRANGE._serialized_end=12137
  _LIMITRANGEITEM._serialized_start=12140
  _LIMITRANGEITEM._serialized_end=13016
  _LIMITRANGEITEM_MAXENTRY._serialized_start=12526
  _LIMITRANGEITEM_MAXENTRY._serialized_end=12616
  _LIMITRANGEITEM_MINENTRY._serialized_start=12618
  _LIMITRANGEITEM_MINENTRY._serialized_end=12708
  _LIMITRANGEITEM_DEFAULTENTRY._serialized_start=12710
  _LIMITRANGEITEM_DEFAULTENTRY._serialized_end=12804
  _LIMITRANGEITEM_DEFAULTREQUESTENTRY._serialized_start=12806
  _LIMITRANGEITEM_DEFAULTREQUESTENTRY._serialized_end=12907
  _LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY._serialized_start=12909
  _LIMITRANGEITEM_MAXLIMITREQUESTRATIOENTRY._serialized_end=13016
  _LIMITRANGELIST._serialized_start=13019
  _LIMITRANGELIST._serialized_end=13148
  _LIMITRANGESPEC._serialized_start=13150
  _LIMITRANGESPEC._serialized_end=13218
  _LIST._serialized_start=13221
  _LIST._serialized_end=13355
  _LOADBALANCERINGRESS._serialized_start=13357
  _LOADBALANCERINGRESS._serialized_end=13455
  _LOADBALANCERSTATUS._serialized_start=13457
  _LOADBALANCERSTATUS._serialized_end=13535
  _LOCALOBJECTREFERENCE._serialized_start=13537
  _LOCALOBJECTREFERENCE._serialized_end=13573
  _LOCALVOLUMESOURCE._serialized_start=13575
  _LOCALVOLUMESOURCE._serialized_end=13624
  _NFSVOLUMESOURCE._serialized_start=13626
  _NFSVOLUMESOURCE._serialized_end=13691
  _NAMESPACE._serialized_start=13694
  _NAMESPACE._serialized_end=13875
  _NAMESPACECONDITION._serialized_start=13878
  _NAMESPACECONDITION._serialized_end=14033
  _NAMESPACELIST._serialized_start=14035
  _NAMESPACELIST._serialized_end=14162
  _NAMESPACESPEC._serialized_start=14164
  _NAMESPACESPEC._serialized_end=14199
  _NAMESPACESTATUS._serialized_start=14201
  _NAMESPACESTATUS._serialized_end=14293
  _NODE._serialized_start=14296
  _NODE._serialized_end=14462
  _NODEADDRESS._serialized_start=14464
  _NODEADDRESS._serialized_end=14508
  _NODEAFFINITY._serialized_start=14511
  _NODEAFFINITY._serialized_end=14717
  _NODECONDITION._serialized_start=14720
  _NODECONDITION._serialized_end=14941
  _NODECONFIGSOURCE._serialized_start=14943
  _NODECONFIGSOURCE._serialized_end=15027
  _NODECONFIGSTATUS._serialized_start=15030
  _NODECONFIGSTATUS._serialized_end=15234
  _NODEDAEMONENDPOINTS._serialized_start=15236
  _NODEDAEMONENDPOINTS._serialized_end=15318
  _NODELIST._serialized_start=15320
  _NODELIST._serialized_end=15437
  _NODEPROXYOPTIONS._serialized_start=15439
  _NODEPROXYOPTIONS._serialized_end=15471
  _NODERESOURCES._serialized_start=15474
  _NODERESOURCES._serialized_end=15653
  _NODERESOURCES_CAPACITYENTRY._serialized_start=15558
  _NODERESOURCES_CAPACITYENTRY._serialized_end=15653
  _NODESELECTOR._serialized_start=15655
  _NODESELECTOR._serialized_end=15734
  _NODESELECTORREQUIREMENT._serialized_start=15736
  _NODESELECTORREQUIREMENT._serialized_end=15808
  _NODESELECTORTERM._serialized_start=15811
  _NODESELECTORTERM._serialized_end=15966
  _NODESPEC._serialized_start=15969
  _NODESPEC._serialized_end=16180
  _NODESTATUS._serialized_start=16183
  _NODESTATUS._serialized_end=16957
  _NODESTATUS_CAPACITYENTRY._serialized_start=15558
  _NODESTATUS_CAPACITYENTRY._serialized_end=15653
  _NODESTATUS_ALLOCATABLEENTRY._serialized_start=16859
  _NODESTATUS_ALLOCATABLEENTRY._serialized_end=16957
  _NODESYSTEMINFO._serialized_start=16960
  _NODESYSTEMINFO._serialized_end=17201
  _OBJECTFIELDSELECTOR._serialized_start=17203
  _OBJECTFIELDSELECTOR._serialized_end=17263
  _OBJECTREFERENCE._serialized_start=17266
  _OBJECTREFERENCE._serialized_end=17407
  _PERSISTENTVOLUME._serialized_start=17410
  _PERSISTENTVOLUME._serialized_end=17612
  _PERSISTENTVOLUMECLAIM._serialized_start=17615
  _PERSISTENTVOLUMECLAIM._serialized_end=17832
  _PERSISTENTVOLUMECLAIMCONDITION._serialized_start=17835
  _PERSISTENTVOLUMECLAIMCONDITION._serialized_end=18069
  _PERSISTENTVOLUMECLAIMLIST._serialized_start=18072
  _PERSISTENTVOLUMECLAIMLIST._serialized_end=18223
  _PERSISTENTVOLUMECLAIMSPEC._serialized_start=18226
  _PERSISTENTVOLUMECLAIMSPEC._serialized_end=18609
  _PERSISTENTVOLUMECLAIMSTATUS._serialized_start=18612
  _PERSISTENTVOLUMECLAIMSTATUS._serialized_end=18927
  _PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY._serialized_start=15558
  _PERSISTENTVOLUMECLAIMSTATUS_CAPACITYENTRY._serialized_end=15653
  _PERSISTENTVOLUMECLAIMTEMPLATE._serialized_start=18930
  _PERSISTENTVOLUMECLAIMTEMPLATE._serialized_end=19090
  _PERSISTENTVOLUMECLAIMVOLUMESOURCE._serialized_start=19092
  _PERSISTENTVOLUMECLAIMVOLUMESOURCE._serialized_end=19164
  _PERSISTENTVOLUMELIST._serialized_start=19167
  _PERSISTENTVOLUMELIST._serialized_end=19308
  _PERSISTENTVOLUMESOURCE._serialized_start=19311
  _PERSISTENTVOLUMESOURCE._serialized_end=20780
  _PERSISTENTVOLUMESPEC._serialized_start=20783
  _PERSISTENTVOLUMESPEC._serialized_end=21297
  _PERSISTENTVOLUMESPEC_CAPACITYENTRY._serialized_start=15558
  _PERSISTENTVOLUMESPEC_CAPACITYENTRY._serialized_end=15653
  _PERSISTENTVOLUMESTATUS._serialized_start=21299
  _PERSISTENTVOLUMESTATUS._serialized_end=21371
  _PHOTONPERSISTENTDISKVOLUMESOURCE._serialized_start=21373
  _PHOTONPERSISTENTDISKVOLUMESOURCE._serialized_end=21437
  _POD._serialized_start=21440
  _POD._serialized_end=21603
  _PODAFFINITY._serialized_start=21606
  _PODAFFINITY._serialized_end=21814
  _PODAFFINITYTERM._serialized_start=21817
  _PODAFFINITYTERM._serialized_end=22031
  _PODANTIAFFINITY._serialized_start=22034
  _PODANTIAFFINITY._serialized_end=22246
  _PODATTACHOPTIONS._serialized_start=22248
  _PODATTACHOPTIONS._serialized_end=22345
  _PODCONDITION._serialized_start=22348
  _PODCONDITION._serialized_end=22564
  _PODDNSCONFIG._serialized_start=22566
  _PODDNSCONFIG._serialized_end=22676
  _PODDNSCONFIGOPTION._serialized_start=22678
  _PODDNSCONFIGOPTION._serialized_end=22727
  _PODEXECOPTIONS._serialized_start=22729
  _PODEXECOPTIONS._serialized_end=22841
  _PODIP._serialized_start=22843
  _PODIP._serialized_end=22862
  _PODLIST._serialized_start=22864
  _PODLIST._serialized_end=22979
  _PODLOGOPTIONS._serialized_start=22982
  _PODLOGOPTIONS._serialized_end=23232
  _PODPORTFORWARDOPTIONS._serialized_start=23234
  _PODPORTFORWARDOPTIONS._serialized_end=23272
  _PODPROXYOPTIONS._serialized_start=23274
  _PODPROXYOPTIONS._serialized_end=23305
  _PODREADINESSGATE._serialized_start=23307
  _PODREADINESSGATE._serialized_end=23348
  _PODSECURITYCONTEXT._serialized_start=23351
  _PODSECURITYCONTEXT._serialized_end=23746
  _PODSIGNATURE._serialized_start=23748
  _PODSIGNATURE._serialized_end=23839
  _PODSPEC._serialized_start=23842
  _PODSPEC._serialized_end=25351
  _PODSPEC_NODESELECTORENTRY._serialized_start=25203
  _PODSPEC_NODESELECTORENTRY._serialized_end=25254
  _PODSPEC_OVERHEADENTRY._serialized_start=25256
  _PODSPEC_OVERHEADENTRY._serialized_end=25351
  _PODSTATUS._serialized_start=25354
  _PODSTATUS._serialized_end=25854
  _PODSTATUSRESULT._serialized_start=25857
  _PODSTATUSRESULT._serialized_end=25989
  _PODTEMPLATE._serialized_start=25992
  _PODTEMPLATE._serialized_end=26128
  _PODTEMPLATELIST._serialized_start=26131
  _PODTEMPLATELIST._serialized_end=26262
  _PODTEMPLATESPEC._serialized_start=26265
  _PODTEMPLATESPEC._serialized_end=26393
  _PORTSTATUS._serialized_start=26395
  _PORTSTATUS._serialized_end=26454
  _PORTWORXVOLUMESOURCE._serialized_start=26456
  _PORTWORXVOLUMESOURCE._serialized_end=26530
  _PRECONDITIONS._serialized_start=26532
  _PRECONDITIONS._serialized_end=26560
  _PREFERAVOIDPODSENTRY._serialized_start=26563
  _PREFERAVOIDPODSENTRY._serialized_end=26740
  _PREFERREDSCHEDULINGTERM._serialized_start=26742
  _PREFERREDSCHEDULINGTERM._serialized_end=26841
  _PROBE._serialized_start=26844
  _PROBE._serialized_end=27064
  _PROJECTEDVOLUMESOURCE._serialized_start=27066
  _PROJECTEDVOLUMESOURCE._serialized_end=27165
  _QUOBYTEVOLUMESOURCE._serialized_start=27167
  _QUOBYTEVOLUMESOURCE._serialized_end=27285
  _RBDPERSISTENTVOLUMESOURCE._serialized_start=27288
  _RBDPERSISTENTVOLUMESOURCE._serialized_end=27483
  _RBDVOLUMESOURCE._serialized_start=27486
  _RBDVOLUMESOURCE._serialized_end=27676
  _RANGEALLOCATION._serialized_start=27678
  _RANGEALLOCATION._serialized_end=27792
  _REPLICATIONCONTROLLER._serialized_start=27795
  _REPLICATIONCONTROLLER._serialized_end=28012
  _REPLICATIONCONTROLLERCONDITION._serialized_start=28015
  _REPLICATIONCONTROLLERCONDITION._serialized_end=28182
  _REPLICATIONCONTROLLERLIST._serialized_start=28185
  _REPLICATIONCONTROLLERLIST._serialized_end=28336
  _REPLICATIONCONTROLLERSPEC._serialized_start=28339
  _REPLICATIONCONTROLLERSPEC._serialized_end=28592
  _REPLICATIONCONTROLLERSPEC_SELECTORENTRY._serialized_start=28545
  _REPLICATIONCONTROLLERSPEC_SELECTORENTRY._serialized_end=28592
  _REPLICATIONCONTROLLERSTATUS._serialized_start=28595
  _REPLICATIONCONTROLLERSTATUS._serialized_end=28822
  _RESOURCEFIELDSELECTOR._serialized_start=28825
  _RESOURCEFIELDSELECTOR._serialized_end=28954
  _RESOURCEQUOTA._serialized_start=28957
  _RESOURCEQUOTA._serialized_end=29150
  _RESOURCEQUOTALIST._serialized_start=29153
  _RESOURCEQUOTALIST._serialized_end=29288
  _RESOURCEQUOTASPEC._serialized_start=29291
  _RESOURCEQUOTASPEC._serialized_end=29540
  _RESOURCEQUOTASPEC_HARDENTRY._serialized_start=29449
  _RESOURCEQUOTASPEC_HARDENTRY._serialized_end=29540
  _RESOURCEQUOTASTATUS._serialized_start=29543
  _RESOURCEQUOTASTATUS._serialized_end=29880
  _RESOURCEQUOTASTATUS_HARDENTRY._serialized_start=29449
  _RESOURCEQUOTASTATUS_HARDENTRY._serialized_end=29540
  _RESOURCEQUOTASTATUS_USEDENTRY._serialized_start=29789
  _RESOURCEQUOTASTATUS_USEDENTRY._serialized_end=29880
  _RESOURCEREQUIREMENTS._serialized_start=29883
  _RESOURCEREQUIREMENTS._serialized_end=30241
  _RESOURCEREQUIREMENTS_LIMITSENTRY._serialized_start=30051
  _RESOURCEREQUIREMENTS_LIMITSENTRY._serialized_end=30144
  _RESOURCEREQUIREMENTS_REQUESTSENTRY._serialized_start=30146
  _RESOURCEREQUIREMENTS_REQUESTSENTRY._serialized_end=30241
  _SELINUXOPTIONS._serialized_start=30243
  _SELINUXOPTIONS._serialized_end=30316
  _SCALEIOPERSISTENTVOLUMESOURCE._serialized_start=30319
  _SCALEIOPERSISTENTVOLUMESOURCE._serialized_end=30581
  _SCALEIOVOLUMESOURCE._serialized_start=30584
  _SCALEIOVOLUMESOURCE._serialized_end=30841
  _SCOPESELECTOR._serialized_start=30843
  _SCOPESELECTOR._serialized_end=30939
  _SCOPEDRESOURCESELECTORREQUIREMENT._serialized_start=30941
  _SCOPEDRESOURCESELECTORREQUIREMENT._serialized_end=31029
  _SECCOMPPROFILE._serialized_start=31031
  _SECCOMPPROFILE._serialized_end=31087
  _SECRET._serialized_start=31090
  _SECRET._serialized_end=31411
  _SECRET_DATAENTRY._serialized_start=31317
  _SECRET_DATAENTRY._serialized_end=31360
  _SECRET_STRINGDATAENTRY._serialized_start=31362
  _SECRET_STRINGDATAENTRY._serialized_end=31411
  _SECRETENVSOURCE._serialized_start=31413
  _SECRETENVSOURCE._serialized_end=31520
  _SECRETKEYSELECTOR._serialized_start=31522
  _SECRETKEYSELECTOR._serialized_end=31644
  _SECRETLIST._serialized_start=31646
  _SECRETLIST._serialized_end=31767
  _SECRETPROJECTION._serialized_start=31770
  _SECRETPROJECTION._serialized_end=31924
  _SECRETREFERENCE._serialized_start=31926
  _SECRETREFERENCE._serialized_end=31976
  _SECRETVOLUMESOURCE._serialized_start=31978
  _SECRETVOLUMESOURCE._serialized_end=32103
  _SECURITYCONTEXT._serialized_start=32106
  _SECURITYCONTEXT._serialized_end=32540
  _SERIALIZEDREFERENCE._serialized_start=32542
  _SERIALIZEDREFERENCE._serialized_end=32619
  _SERVICE._serialized_start=32622
  _SERVICE._serialized_end=32797
  _SERVICEACCOUNT._serialized_start=32800
  _SERVICEACCOUNT._serialized_end=33044
  _SERVICEACCOUNTLIST._serialized_start=33047
  _SERVICEACCOUNTLIST._serialized_end=33184
  _SERVICEACCOUNTTOKENPROJECTION._serialized_start=33186
  _SERVICEACCOUNTTOKENPROJECTION._serialized_end=33276
  _SERVICELIST._serialized_start=33278
  _SERVICELIST._serialized_end=33401
  _SERVICEPORT._serialized_start=33404
  _SERVICEPORT._serialized_end=33572
  _SERVICEPROXYOPTIONS._serialized_start=33574
  _SERVICEPROXYOPTIONS._serialized_end=33609
  _SERVICESPEC._serialized_start=33612
  _SERVICESPEC._serialized_end=34275
  _SERVICESPEC_SELECTORENTRY._serialized_start=28545
  _SERVICESPEC_SELECTORENTRY._serialized_end=28592
  _SERVICESTATUS._serialized_start=34278
  _SERVICESTATUS._serialized_end=34424
  _SESSIONAFFINITYCONFIG._serialized_start=34426
  _SESSIONAFFINITYCONFIG._serialized_end=34503
  _STORAGEOSPERSISTENTVOLUMESOURCE._serialized_start=34506
  _STORAGEOSPERSISTENTVOLUMESOURCE._serialized_end=34674
  _STORAGEOSVOLUMESOURCE._serialized_start=34677
  _STORAGEOSVOLUMESOURCE._serialized_end=34840
  _SYSCTL._serialized_start=34842
  _SYSCTL._serialized_end=34879
  _TCPSOCKETACTION._serialized_start=34881
  _TCPSOCKETACTION._serialized_end=34976
  _TAINT._serialized_start=34978
  _TAINT._serialized_end=35092
  _TOLERATION._serialized_start=35094
  _TOLERATION._serialized_end=35195
  _TOPOLOGYSELECTORLABELREQUIREMENT._serialized_start=35197
  _TOPOLOGYSELECTORLABELREQUIREMENT._serialized_end=35260
  _TOPOLOGYSELECTORTERM._serialized_start=35262
  _TOPOLOGYSELECTORTERM._serialized_end=35369
  _TOPOLOGYSPREADCONSTRAINT._serialized_start=35372
  _TOPOLOGYSPREADCONSTRAINT._serialized_end=35539
  _TYPEDLOCALOBJECTREFERENCE._serialized_start=35541
  _TYPEDLOCALOBJECTREFERENCE._serialized_end=35614
  _VOLUME._serialized_start=35616
  _VOLUME._serialized_end=35694
  _VOLUMEDEVICE._serialized_start=35696
  _VOLUMEDEVICE._serialized_end=35744
  _VOLUMEMOUNT._serialized_start=35747
  _VOLUMEMOUNT._serialized_end=35875
  _VOLUMENODEAFFINITY._serialized_start=35877
  _VOLUMENODEAFFINITY._serialized_end=35949
  _VOLUMEPROJECTION._serialized_start=35952
  _VOLUMEPROJECTION._serialized_end=36228
  _VOLUMESOURCE._serialized_start=36231
  _VOLUMESOURCE._serialized_end=38048
  _VSPHEREVIRTUALDISKVOLUMESOURCE._serialized_start=38050
  _VSPHEREVIRTUALDISKVOLUMESOURCE._serialized_end=38170
  _WEIGHTEDPODAFFINITYTERM._serialized_start=38172
  _WEIGHTEDPODAFFINITYTERM._serialized_end=38275
  _WINDOWSSECURITYCONTEXTOPTIONS._serialized_start=38278
  _WINDOWSSECURITYCONTEXTOPTIONS._serialized_end=38413
# @@protoc_insertion_point(module_scope)
