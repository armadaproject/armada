# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: armada_client/generated_client/usage.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from k8s.io.api.core.v1 import generated_pb2 as k8s_dot_io_dot_api_dot_core_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.api.resource import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_api_dot_resource_dot_generated__pb2
from github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*armada_client/generated_client/usage.proto\x12\x03\x61pi\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\"k8s.io/api/core/v1/generated.proto\x1a\x34k8s.io/apimachinery/pkg/api/resource/generated.proto\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\"\xe5\x03\n\x0bQueueReport\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x38\n\tresources\x18\x02 \x03(\x0b\x32\x1f.api.QueueReport.ResourcesEntryB\x04\xc8\xde\x1f\x00\x12\x41\n\x0eresources_used\x18\x03 \x03(\x0b\x32#.api.QueueReport.ResourcesUsedEntryB\x04\xc8\xde\x1f\x00\x12H\n\x16\x63ount_of_pods_by_phase\x18\x04 \x03(\x0b\x32(.api.QueueReport.CountOfPodsByPhaseEntry\x1a`\n\x0eResourcesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a\x64\n\x12ResourcesUsedEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a\x39\n\x17\x43ountOfPodsByPhaseEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\"\xe4\x04\n\x12\x43lusterUsageReport\x12\x12\n\ncluster_id\x18\x01 \x01(\t\x12\x0c\n\x04pool\x18\x06 \x01(\t\x12\x39\n\x0breport_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\x90\xdf\x1f\x01\xc8\xde\x1f\x00\x12$\n\x06queues\x18\x03 \x03(\x0b\x32\x10.api.QueueReportB\x02\x18\x01\x12N\n\x10\x63luster_capacity\x18\x04 \x03(\x0b\x32,.api.ClusterUsageReport.ClusterCapacityEntryB\x06\x18\x01\xc8\xde\x1f\x00\x12\x61\n\x1a\x63luster_available_capacity\x18\x05 \x03(\x0b\x32\x35.api.ClusterUsageReport.ClusterAvailableCapacityEntryB\x06\x18\x01\xc8\xde\x1f\x00\x12?\n\x17node_type_usage_reports\x18\x07 \x03(\x0b\x32\x18.api.NodeTypeUsageReportB\x04\xc8\xde\x1f\x00\x1a\x66\n\x14\x43lusterCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1ao\n\x1d\x43lusterAvailableCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\"Q\n\x12NodeTypeIdentifier\x12\n\n\x02id\x18\x01 \x01(\t\x12/\n\x06taints\x18\x02 \x03(\x0b\x32\x19.k8s.io.api.core.v1.TaintB\x04\xc8\xde\x1f\x00\"\xf2\x04\n\x13NodeTypeUsageReport\x12*\n\tnode_type\x18\x01 \x01(\x0b\x32\x17.api.NodeTypeIdentifier\x12>\n\x08\x63\x61pacity\x18\x02 \x03(\x0b\x32&.api.NodeTypeUsageReport.CapacityEntryB\x04\xc8\xde\x1f\x00\x12Q\n\x12\x61vailable_capacity\x18\x03 \x03(\x0b\x32/.api.NodeTypeUsageReport.AvailableCapacityEntryB\x04\xc8\xde\x1f\x00\x12I\n\x0e\x63ordoned_usage\x18\x05 \x03(\x0b\x32+.api.NodeTypeUsageReport.CordonedUsageEntryB\x04\xc8\xde\x1f\x00\x12 \n\x06queues\x18\x04 \x03(\x0b\x32\x10.api.QueueReport\x1a_\n\rCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1ah\n\x16\x41vailableCapacityEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x1a\x64\n\x12\x43ordonedUsageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12=\n\x05value\x18\x02 \x01(\x0b\x32..k8s.io.apimachinery.pkg.api.resource.Quantity:\x02\x38\x01\x32G\n\x05Usage\x12>\n\x0bReportUsage\x12\x17.api.ClusterUsageReport\x1a\x16.google.protobuf.EmptyB\x08\xd8\xe1\x1e\x00\x80\xe2\x1e\x01\x62\x06proto3')



_QUEUEREPORT = DESCRIPTOR.message_types_by_name['QueueReport']
_QUEUEREPORT_RESOURCESENTRY = _QUEUEREPORT.nested_types_by_name['ResourcesEntry']
_QUEUEREPORT_RESOURCESUSEDENTRY = _QUEUEREPORT.nested_types_by_name['ResourcesUsedEntry']
_QUEUEREPORT_COUNTOFPODSBYPHASEENTRY = _QUEUEREPORT.nested_types_by_name['CountOfPodsByPhaseEntry']
_CLUSTERUSAGEREPORT = DESCRIPTOR.message_types_by_name['ClusterUsageReport']
_CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY = _CLUSTERUSAGEREPORT.nested_types_by_name['ClusterCapacityEntry']
_CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY = _CLUSTERUSAGEREPORT.nested_types_by_name['ClusterAvailableCapacityEntry']
_NODETYPEIDENTIFIER = DESCRIPTOR.message_types_by_name['NodeTypeIdentifier']
_NODETYPEUSAGEREPORT = DESCRIPTOR.message_types_by_name['NodeTypeUsageReport']
_NODETYPEUSAGEREPORT_CAPACITYENTRY = _NODETYPEUSAGEREPORT.nested_types_by_name['CapacityEntry']
_NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY = _NODETYPEUSAGEREPORT.nested_types_by_name['AvailableCapacityEntry']
_NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY = _NODETYPEUSAGEREPORT.nested_types_by_name['CordonedUsageEntry']
QueueReport = _reflection.GeneratedProtocolMessageType('QueueReport', (_message.Message,), {

  'ResourcesEntry' : _reflection.GeneratedProtocolMessageType('ResourcesEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEREPORT_RESOURCESENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.QueueReport.ResourcesEntry)
    })
  ,

  'ResourcesUsedEntry' : _reflection.GeneratedProtocolMessageType('ResourcesUsedEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEREPORT_RESOURCESUSEDENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.QueueReport.ResourcesUsedEntry)
    })
  ,

  'CountOfPodsByPhaseEntry' : _reflection.GeneratedProtocolMessageType('CountOfPodsByPhaseEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUEUEREPORT_COUNTOFPODSBYPHASEENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.QueueReport.CountOfPodsByPhaseEntry)
    })
  ,
  'DESCRIPTOR' : _QUEUEREPORT,
  '__module__' : 'armada_client.generated_client.usage_pb2'
  # @@protoc_insertion_point(class_scope:api.QueueReport)
  })
_sym_db.RegisterMessage(QueueReport)
_sym_db.RegisterMessage(QueueReport.ResourcesEntry)
_sym_db.RegisterMessage(QueueReport.ResourcesUsedEntry)
_sym_db.RegisterMessage(QueueReport.CountOfPodsByPhaseEntry)

ClusterUsageReport = _reflection.GeneratedProtocolMessageType('ClusterUsageReport', (_message.Message,), {

  'ClusterCapacityEntry' : _reflection.GeneratedProtocolMessageType('ClusterCapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.ClusterUsageReport.ClusterCapacityEntry)
    })
  ,

  'ClusterAvailableCapacityEntry' : _reflection.GeneratedProtocolMessageType('ClusterAvailableCapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.ClusterUsageReport.ClusterAvailableCapacityEntry)
    })
  ,
  'DESCRIPTOR' : _CLUSTERUSAGEREPORT,
  '__module__' : 'armada_client.generated_client.usage_pb2'
  # @@protoc_insertion_point(class_scope:api.ClusterUsageReport)
  })
_sym_db.RegisterMessage(ClusterUsageReport)
_sym_db.RegisterMessage(ClusterUsageReport.ClusterCapacityEntry)
_sym_db.RegisterMessage(ClusterUsageReport.ClusterAvailableCapacityEntry)

NodeTypeIdentifier = _reflection.GeneratedProtocolMessageType('NodeTypeIdentifier', (_message.Message,), {
  'DESCRIPTOR' : _NODETYPEIDENTIFIER,
  '__module__' : 'armada_client.generated_client.usage_pb2'
  # @@protoc_insertion_point(class_scope:api.NodeTypeIdentifier)
  })
_sym_db.RegisterMessage(NodeTypeIdentifier)

NodeTypeUsageReport = _reflection.GeneratedProtocolMessageType('NodeTypeUsageReport', (_message.Message,), {

  'CapacityEntry' : _reflection.GeneratedProtocolMessageType('CapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODETYPEUSAGEREPORT_CAPACITYENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.NodeTypeUsageReport.CapacityEntry)
    })
  ,

  'AvailableCapacityEntry' : _reflection.GeneratedProtocolMessageType('AvailableCapacityEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.NodeTypeUsageReport.AvailableCapacityEntry)
    })
  ,

  'CordonedUsageEntry' : _reflection.GeneratedProtocolMessageType('CordonedUsageEntry', (_message.Message,), {
    'DESCRIPTOR' : _NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY,
    '__module__' : 'armada_client.generated_client.usage_pb2'
    # @@protoc_insertion_point(class_scope:api.NodeTypeUsageReport.CordonedUsageEntry)
    })
  ,
  'DESCRIPTOR' : _NODETYPEUSAGEREPORT,
  '__module__' : 'armada_client.generated_client.usage_pb2'
  # @@protoc_insertion_point(class_scope:api.NodeTypeUsageReport)
  })
_sym_db.RegisterMessage(NodeTypeUsageReport)
_sym_db.RegisterMessage(NodeTypeUsageReport.CapacityEntry)
_sym_db.RegisterMessage(NodeTypeUsageReport.AvailableCapacityEntry)
_sym_db.RegisterMessage(NodeTypeUsageReport.CordonedUsageEntry)

_USAGE = DESCRIPTOR.services_by_name['Usage']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\330\341\036\000\200\342\036\001'
  _QUEUEREPORT_RESOURCESENTRY._options = None
  _QUEUEREPORT_RESOURCESENTRY._serialized_options = b'8\001'
  _QUEUEREPORT_RESOURCESUSEDENTRY._options = None
  _QUEUEREPORT_RESOURCESUSEDENTRY._serialized_options = b'8\001'
  _QUEUEREPORT_COUNTOFPODSBYPHASEENTRY._options = None
  _QUEUEREPORT_COUNTOFPODSBYPHASEENTRY._serialized_options = b'8\001'
  _QUEUEREPORT.fields_by_name['resources']._options = None
  _QUEUEREPORT.fields_by_name['resources']._serialized_options = b'\310\336\037\000'
  _QUEUEREPORT.fields_by_name['resources_used']._options = None
  _QUEUEREPORT.fields_by_name['resources_used']._serialized_options = b'\310\336\037\000'
  _CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY._options = None
  _CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY._serialized_options = b'8\001'
  _CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY._options = None
  _CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY._serialized_options = b'8\001'
  _CLUSTERUSAGEREPORT.fields_by_name['report_time']._options = None
  _CLUSTERUSAGEREPORT.fields_by_name['report_time']._serialized_options = b'\220\337\037\001\310\336\037\000'
  _CLUSTERUSAGEREPORT.fields_by_name['queues']._options = None
  _CLUSTERUSAGEREPORT.fields_by_name['queues']._serialized_options = b'\030\001'
  _CLUSTERUSAGEREPORT.fields_by_name['cluster_capacity']._options = None
  _CLUSTERUSAGEREPORT.fields_by_name['cluster_capacity']._serialized_options = b'\030\001\310\336\037\000'
  _CLUSTERUSAGEREPORT.fields_by_name['cluster_available_capacity']._options = None
  _CLUSTERUSAGEREPORT.fields_by_name['cluster_available_capacity']._serialized_options = b'\030\001\310\336\037\000'
  _CLUSTERUSAGEREPORT.fields_by_name['node_type_usage_reports']._options = None
  _CLUSTERUSAGEREPORT.fields_by_name['node_type_usage_reports']._serialized_options = b'\310\336\037\000'
  _NODETYPEIDENTIFIER.fields_by_name['taints']._options = None
  _NODETYPEIDENTIFIER.fields_by_name['taints']._serialized_options = b'\310\336\037\000'
  _NODETYPEUSAGEREPORT_CAPACITYENTRY._options = None
  _NODETYPEUSAGEREPORT_CAPACITYENTRY._serialized_options = b'8\001'
  _NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY._options = None
  _NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY._serialized_options = b'8\001'
  _NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY._options = None
  _NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY._serialized_options = b'8\001'
  _NODETYPEUSAGEREPORT.fields_by_name['capacity']._options = None
  _NODETYPEUSAGEREPORT.fields_by_name['capacity']._serialized_options = b'\310\336\037\000'
  _NODETYPEUSAGEREPORT.fields_by_name['available_capacity']._options = None
  _NODETYPEUSAGEREPORT.fields_by_name['available_capacity']._serialized_options = b'\310\336\037\000'
  _NODETYPEUSAGEREPORT.fields_by_name['cordoned_usage']._options = None
  _NODETYPEUSAGEREPORT.fields_by_name['cordoned_usage']._serialized_options = b'\310\336\037\000'
  _QUEUEREPORT._serialized_start=251
  _QUEUEREPORT._serialized_end=736
  _QUEUEREPORT_RESOURCESENTRY._serialized_start=479
  _QUEUEREPORT_RESOURCESENTRY._serialized_end=575
  _QUEUEREPORT_RESOURCESUSEDENTRY._serialized_start=577
  _QUEUEREPORT_RESOURCESUSEDENTRY._serialized_end=677
  _QUEUEREPORT_COUNTOFPODSBYPHASEENTRY._serialized_start=679
  _QUEUEREPORT_COUNTOFPODSBYPHASEENTRY._serialized_end=736
  _CLUSTERUSAGEREPORT._serialized_start=739
  _CLUSTERUSAGEREPORT._serialized_end=1351
  _CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY._serialized_start=1136
  _CLUSTERUSAGEREPORT_CLUSTERCAPACITYENTRY._serialized_end=1238
  _CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY._serialized_start=1240
  _CLUSTERUSAGEREPORT_CLUSTERAVAILABLECAPACITYENTRY._serialized_end=1351
  _NODETYPEIDENTIFIER._serialized_start=1353
  _NODETYPEIDENTIFIER._serialized_end=1434
  _NODETYPEUSAGEREPORT._serialized_start=1437
  _NODETYPEUSAGEREPORT._serialized_end=2063
  _NODETYPEUSAGEREPORT_CAPACITYENTRY._serialized_start=1760
  _NODETYPEUSAGEREPORT_CAPACITYENTRY._serialized_end=1855
  _NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY._serialized_start=1857
  _NODETYPEUSAGEREPORT_AVAILABLECAPACITYENTRY._serialized_end=1961
  _NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY._serialized_start=1963
  _NODETYPEUSAGEREPORT_CORDONEDUSAGEENTRY._serialized_end=2063
  _USAGE._serialized_start=2065
  _USAGE._serialized_end=2136
# @@protoc_insertion_point(module_scope)
