<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.armadaproject</groupId>
  <artifactId>armada-scala-client_2.13</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <name>Armada Scala Client</name>
  <description>A Scala client for Armada.</description>
  <inceptionYear>2025</inceptionYear>
  <url>https://github.com/G-Research</url>
  <licenses>
    <license>
      <name>Apache 2.0 License</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git://github.com/armadaproject/armada.git</connection>
    <developerConnection>scm:git:ssh://github.com:armadaproject/armada.git</developerConnection>
    <url>https://github.com/armadaproject/armada/tree/${project.scm.tag}</url>
    <tag>master</tag>
  </scm>
  <developers>
    <developer>
      <id>ClifHouck</id>
      <name>Clif Houck</name>
      <email>me@clifhouck.com</email>
      <url>https://github.com/ClifHouck/</url>
    </developer>
    <developer>
      <id>dejanzele</id>
      <name>Dejan Zele Pejchev</name>
      <email>pejcev.dejan@gmail.com</email>
      <url>https://github.com/dejanzele/</url>
    </developer>
    <developer>
      <id>EnricoMi</id>
      <name>Enrico Minack</name>
      <email>github@enrico.minack.dev</email>
      <url>https://github.com/EnricoMi/</url>
    </developer>
    <developer>
      <id>GeorgeJahad</id>
      <name>George Jahad</name>
      <email>github@blackbirdsystems.net</email>
      <url>https://github.com/GeorgeJahad/</url>
    </developer>
    <developer>
      <id>richscott</id>
      <name>Rich Scott</name>
      <email>rich@gr-oss.io</email>
    </developer>
  </developers>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/armadaproject/armada/issues</url>
  </issueManagement>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <project.version>${project.version}</project.version>
    <scala.major.version>2</scala.major.version>
    <scala.minor.version>13</scala.minor.version>
    <scala.patch.version>15</scala.patch.version>
    <scala.compat.version>${scala.major.version}.${scala.minor.version}</scala.compat.version>
    <scala.version>${scala.compat.version}.${scala.patch.version}</scala.version>
    <protobuf.version>3.25.5</protobuf.version>
    <grpc.version>1.53.0</grpc.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thesamet.scalapb</groupId>
      <artifactId>scalapb-runtime-grpc_${scala.compat.version}</artifactId>
      <version>0.11.13</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.compat.version}</artifactId>
      <version>3.3.0-SNAP4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jkugiya</groupId>
      <artifactId>ulid-scala_${scala.compat.version}</artifactId>
      <version>1.0.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <plugins>
      <!-- compiling scala -->
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- compiling protobuf  -->
      <!-- first we copy the relevant proto files from the root project dir -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/main/protobuf</outputDirectory>
              <resources>
                <resource>
                  <directory>../../../proto</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>google/api/annotations.proto</include>
                    <include>google/api/http.proto</include>
                    <include>google/protobuf/*.proto</include>
                    <include>github.com/gogo/protobuf/gogoproto/gogo.proto</include>
                    <include>k8s.io/api/core/v1/generated.proto</include>
                    <include>k8s.io/apimachinery/pkg/api/resource/generated.proto</include>
                    <include>k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto</include>
                    <include>k8s.io/apimachinery/pkg/runtime/generated.proto</include>
                    <include>k8s.io/apimachinery/pkg/runtime/schema/generated.proto</include>
                    <include>k8s.io/apimachinery/pkg/util/intstr/generated.proto</include>
                    <include>k8s.io/api/networking/v1/generated.proto</include>
                  </includes>
                </resource>
                <resource>
                  <directory>../../../</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>pkg/api/event.proto</include>
                    <include>pkg/api/submit.proto</include>
                    <include>pkg/api/health.proto</include>
                    <include>pkg/api/job.proto</include>
                    <include>pkg/api/binoculars/binoculars.proto</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Then we compile proto files with protobuf-maven-plugin and ScalaPB -->
      <plugin>
        <groupId>com.github.os72</groupId>
        <artifactId>protoc-jar-maven-plugin</artifactId>
        <version>3.11.4</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includeMavenTypes>transitive</includeMavenTypes>
          <includeDirectories>${project.basedir}/src/main/protobuf</includeDirectories>
          <outputTargets>
            <outputTarget>
              <type>scalapb</type>
              <outputOptions>grpc</outputOptions> <!-- more scalapb options can be added here -->
              <outputDirectorySuffix>scala-${scala.compat.version}</outputDirectorySuffix>
              <pluginArtifact>com.thesamet.scalapb:protoc-gen-scala:0.11.13:sh:unix</pluginArtifact>
            </outputTarget>
          </outputTargets>
        </configuration>
      </plugin>
      <!-- command line mvn finds sources generated in target/generated-sources/scala-${scala.compat.version} -->
      <!-- but Idea IDE struggles, so we explicitly add that directory as source here -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/target/generated-sources/scala-${scala.compat.version}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- scalafmt -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.30.0</version>
        <configuration>
          <scala>
            <scalafmt>
              <version>3.8.3</version>
              <file>${project.basedir}/.scalafmt.conf</file>
            </scalafmt>
          </scala>
        </configuration>
        <executions>
          <execution>
            <!-- Runs in compile phase to fail fast in case of formatting issues.-->
            <id>spotless-check</id>
            <phase>compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- run scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.2.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- publishing to Maven -->
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.7.0</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <autoPublish>true</autoPublish>
          <waitUntil>published</waitUntil>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.8.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>doc-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.1.2</version>
      </plugin>
    </plugins>
  </reporting>

</project>
