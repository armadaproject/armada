version: "3.8"

networks:
  kind:
    external: true

services:
  #
  # Infrastructure services.
  # A Kubernetes cluster (e.g., kind) must also be setup before starting Armada.
  #
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - kind

  postgres:
    container_name: postgres
    image: postgres:12.13-alpine
    environment:
      - POSTGRES_PASSWORD=psw
    ports:
      - "5432:5432"
    networks:
      - kind

  pulsar:
    image: ${PULSAR_IMAGE:-apachepulsar/pulsar:2.10.0}
    container_name: pulsar
    volumes:
      - ./localdev/pulsar.conf:/conf/pulsar.conf
    entrypoint: bin/pulsar standalone
    ports:
      - 0.0.0.0:6650:6650
    networks:
      - kind

  #
  # Armada services.
  #
  server:
    container_name: server
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    ports:
      - 50051:50051
      - 8080:8080
    volumes:
      - ./e2e/setup/insecure-armada-auth-config.yaml:/config/insecure-armada-auth-config.yaml
    depends_on:
      - redis
      - postgres
      - pulsar
      - eventingester
    command: ./server --config /config/insecure-armada-auth-config.yaml

  executor:
    container_name: executor
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    ports:
      - 9001:9001
    depends_on:
      - server
    volumes:
      - ./e2e/setup/insecure-executor-config.yaml:/config/insecure-executor-config.yaml
      - ./.kube/internal:/.kube
    environment:
      - KUBECONFIG=/.kube/config
    command: ./executor --config /config/insecure-executor-config.yaml

  binoculars:
    container_name: binoculars
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    ports:
      - 8082:8082
    volumes:
      - ./.kube/internal:/.kube
    environment:
      - KUBECONFIG=/.kube/config
    command: ./binoculars

  jobservice:
    container_name: jobservice
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    ports:
      - 60003:60003
    depends_on:
      - server
    command: ./jobservice

  lookoutingester:
    container_name: lookoutingester
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    depends_on:
      - postgres
      - pulsar
    volumes:
      - ./localdev/config:/config
    command: ./lookoutingester --config /config/lookoutingester/config.yaml

  eventingester:
    container_name: eventingester
    image: ${ARMADA_IMAGE:-gresearch/armada}:${ARMADA_IMAGE_TAG:-latest}
    networks:
      - kind
    depends_on:
      - redis
    command: ./eventingester
